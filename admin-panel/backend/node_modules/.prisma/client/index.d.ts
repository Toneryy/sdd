
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model subscriptions
 * 
 */
export type subscriptions = $Result.DefaultSelection<Prisma.$subscriptionsPayload>
/**
 * Model user_subscriptions
 * 
 */
export type user_subscriptions = $Result.DefaultSelection<Prisma.$user_subscriptionsPayload>
/**
 * Model support_requests
 * 
 */
export type support_requests = $Result.DefaultSelection<Prisma.$support_requestsPayload>
/**
 * Model promocodes
 * 
 */
export type promocodes = $Result.DefaultSelection<Prisma.$promocodesPayload>
/**
 * Model promo_usage
 * 
 */
export type promo_usage = $Result.DefaultSelection<Prisma.$promo_usagePayload>
/**
 * Model categories
 * 
 */
export type categories = $Result.DefaultSelection<Prisma.$categoriesPayload>
/**
 * Model products
 * 
 */
export type products = $Result.DefaultSelection<Prisma.$productsPayload>
/**
 * Model product_keys
 * 
 */
export type product_keys = $Result.DefaultSelection<Prisma.$product_keysPayload>
/**
 * Model user_products
 * 
 */
export type user_products = $Result.DefaultSelection<Prisma.$user_productsPayload>
/**
 * Model db_name_aliases
 * 
 */
export type db_name_aliases = $Result.DefaultSelection<Prisma.$db_name_aliasesPayload>
/**
 * Model staff_members
 * 
 */
export type staff_members = $Result.DefaultSelection<Prisma.$staff_membersPayload>
/**
 * Model staff_rights
 * 
 */
export type staff_rights = $Result.DefaultSelection<Prisma.$staff_rightsPayload>
/**
 * Model keys_aliases
 * 
 */
export type keys_aliases = $Result.DefaultSelection<Prisma.$keys_aliasesPayload>
/**
 * Model Post
 * 
 */
export type Post = $Result.DefaultSelection<Prisma.$PostPayload>
/**
 * Model Draft
 * 
 */
export type Draft = $Result.DefaultSelection<Prisma.$DraftPayload>
/**
 * Model key_events
 * 
 */
export type key_events = $Result.DefaultSelection<Prisma.$key_eventsPayload>
/**
 * Model order_item_units
 * 
 */
export type order_item_units = $Result.DefaultSelection<Prisma.$order_item_unitsPayload>
/**
 * Model order_items
 * 
 */
export type order_items = $Result.DefaultSelection<Prisma.$order_itemsPayload>
/**
 * Model orders
 * 
 */
export type orders = $Result.DefaultSelection<Prisma.$ordersPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const StaffRole: {
  administrator: 'administrator',
  operator: 'operator'
};

export type StaffRole = (typeof StaffRole)[keyof typeof StaffRole]


export const SupportStatus: {
  pending: 'pending',
  active: 'active',
  closed: 'closed'
};

export type SupportStatus = (typeof SupportStatus)[keyof typeof SupportStatus]


export const KeyEventType: {
  reserved: 'reserved',
  reservation_released: 'reservation_released',
  paid: 'paid',
  alias_created: 'alias_created',
  activated: 'activated',
  alias_deactivated: 'alias_deactivated',
  refunded: 'refunded',
  order_expired: 'order_expired'
};

export type KeyEventType = (typeof KeyEventType)[keyof typeof KeyEventType]


export const OrderItemType: {
  product: 'product',
  subscription: 'subscription'
};

export type OrderItemType = (typeof OrderItemType)[keyof typeof OrderItemType]


export const OrderStatus: {
  pending: 'pending',
  paid: 'paid',
  cancelled: 'cancelled',
  refunded: 'refunded',
  expired: 'expired',
  awaiting_payment: 'awaiting_payment',
  failed: 'failed'
};

export type OrderStatus = (typeof OrderStatus)[keyof typeof OrderStatus]

}

export type StaffRole = $Enums.StaffRole

export const StaffRole: typeof $Enums.StaffRole

export type SupportStatus = $Enums.SupportStatus

export const SupportStatus: typeof $Enums.SupportStatus

export type KeyEventType = $Enums.KeyEventType

export const KeyEventType: typeof $Enums.KeyEventType

export type OrderItemType = $Enums.OrderItemType

export const OrderItemType: typeof $Enums.OrderItemType

export type OrderStatus = $Enums.OrderStatus

export const OrderStatus: typeof $Enums.OrderStatus

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.users.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.users.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.subscriptions`: Exposes CRUD operations for the **subscriptions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subscriptions
    * const subscriptions = await prisma.subscriptions.findMany()
    * ```
    */
  get subscriptions(): Prisma.subscriptionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_subscriptions`: Exposes CRUD operations for the **user_subscriptions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_subscriptions
    * const user_subscriptions = await prisma.user_subscriptions.findMany()
    * ```
    */
  get user_subscriptions(): Prisma.user_subscriptionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.support_requests`: Exposes CRUD operations for the **support_requests** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Support_requests
    * const support_requests = await prisma.support_requests.findMany()
    * ```
    */
  get support_requests(): Prisma.support_requestsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.promocodes`: Exposes CRUD operations for the **promocodes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Promocodes
    * const promocodes = await prisma.promocodes.findMany()
    * ```
    */
  get promocodes(): Prisma.promocodesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.promo_usage`: Exposes CRUD operations for the **promo_usage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Promo_usages
    * const promo_usages = await prisma.promo_usage.findMany()
    * ```
    */
  get promo_usage(): Prisma.promo_usageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categories`: Exposes CRUD operations for the **categories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.categories.findMany()
    * ```
    */
  get categories(): Prisma.categoriesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.products`: Exposes CRUD operations for the **products** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.products.findMany()
    * ```
    */
  get products(): Prisma.productsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product_keys`: Exposes CRUD operations for the **product_keys** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Product_keys
    * const product_keys = await prisma.product_keys.findMany()
    * ```
    */
  get product_keys(): Prisma.product_keysDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_products`: Exposes CRUD operations for the **user_products** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_products
    * const user_products = await prisma.user_products.findMany()
    * ```
    */
  get user_products(): Prisma.user_productsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.db_name_aliases`: Exposes CRUD operations for the **db_name_aliases** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Db_name_aliases
    * const db_name_aliases = await prisma.db_name_aliases.findMany()
    * ```
    */
  get db_name_aliases(): Prisma.db_name_aliasesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.staff_members`: Exposes CRUD operations for the **staff_members** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Staff_members
    * const staff_members = await prisma.staff_members.findMany()
    * ```
    */
  get staff_members(): Prisma.staff_membersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.staff_rights`: Exposes CRUD operations for the **staff_rights** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Staff_rights
    * const staff_rights = await prisma.staff_rights.findMany()
    * ```
    */
  get staff_rights(): Prisma.staff_rightsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.keys_aliases`: Exposes CRUD operations for the **keys_aliases** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Keys_aliases
    * const keys_aliases = await prisma.keys_aliases.findMany()
    * ```
    */
  get keys_aliases(): Prisma.keys_aliasesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.post`: Exposes CRUD operations for the **Post** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Posts
    * const posts = await prisma.post.findMany()
    * ```
    */
  get post(): Prisma.PostDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.draft`: Exposes CRUD operations for the **Draft** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Drafts
    * const drafts = await prisma.draft.findMany()
    * ```
    */
  get draft(): Prisma.DraftDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.key_events`: Exposes CRUD operations for the **key_events** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Key_events
    * const key_events = await prisma.key_events.findMany()
    * ```
    */
  get key_events(): Prisma.key_eventsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order_item_units`: Exposes CRUD operations for the **order_item_units** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Order_item_units
    * const order_item_units = await prisma.order_item_units.findMany()
    * ```
    */
  get order_item_units(): Prisma.order_item_unitsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order_items`: Exposes CRUD operations for the **order_items** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Order_items
    * const order_items = await prisma.order_items.findMany()
    * ```
    */
  get order_items(): Prisma.order_itemsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orders`: Exposes CRUD operations for the **orders** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.orders.findMany()
    * ```
    */
  get orders(): Prisma.ordersDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.13.0
   * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    users: 'users',
    subscriptions: 'subscriptions',
    user_subscriptions: 'user_subscriptions',
    support_requests: 'support_requests',
    promocodes: 'promocodes',
    promo_usage: 'promo_usage',
    categories: 'categories',
    products: 'products',
    product_keys: 'product_keys',
    user_products: 'user_products',
    db_name_aliases: 'db_name_aliases',
    staff_members: 'staff_members',
    staff_rights: 'staff_rights',
    keys_aliases: 'keys_aliases',
    Post: 'Post',
    Draft: 'Draft',
    key_events: 'key_events',
    order_item_units: 'order_item_units',
    order_items: 'order_items',
    orders: 'orders'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "users" | "subscriptions" | "user_subscriptions" | "support_requests" | "promocodes" | "promo_usage" | "categories" | "products" | "product_keys" | "user_products" | "db_name_aliases" | "staff_members" | "staff_rights" | "keys_aliases" | "post" | "draft" | "key_events" | "order_item_units" | "order_items" | "orders"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      subscriptions: {
        payload: Prisma.$subscriptionsPayload<ExtArgs>
        fields: Prisma.subscriptionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.subscriptionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.subscriptionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>
          }
          findFirst: {
            args: Prisma.subscriptionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.subscriptionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>
          }
          findMany: {
            args: Prisma.subscriptionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>[]
          }
          create: {
            args: Prisma.subscriptionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>
          }
          createMany: {
            args: Prisma.subscriptionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.subscriptionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>[]
          }
          delete: {
            args: Prisma.subscriptionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>
          }
          update: {
            args: Prisma.subscriptionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>
          }
          deleteMany: {
            args: Prisma.subscriptionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.subscriptionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.subscriptionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>[]
          }
          upsert: {
            args: Prisma.subscriptionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscriptionsPayload>
          }
          aggregate: {
            args: Prisma.SubscriptionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscriptions>
          }
          groupBy: {
            args: Prisma.subscriptionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.subscriptionsCountArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionsCountAggregateOutputType> | number
          }
        }
      }
      user_subscriptions: {
        payload: Prisma.$user_subscriptionsPayload<ExtArgs>
        fields: Prisma.user_subscriptionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_subscriptionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_subscriptionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_subscriptionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_subscriptionsPayload>
          }
          findFirst: {
            args: Prisma.user_subscriptionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_subscriptionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_subscriptionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_subscriptionsPayload>
          }
          findMany: {
            args: Prisma.user_subscriptionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_subscriptionsPayload>[]
          }
          create: {
            args: Prisma.user_subscriptionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_subscriptionsPayload>
          }
          createMany: {
            args: Prisma.user_subscriptionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_subscriptionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_subscriptionsPayload>[]
          }
          delete: {
            args: Prisma.user_subscriptionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_subscriptionsPayload>
          }
          update: {
            args: Prisma.user_subscriptionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_subscriptionsPayload>
          }
          deleteMany: {
            args: Prisma.user_subscriptionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_subscriptionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_subscriptionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_subscriptionsPayload>[]
          }
          upsert: {
            args: Prisma.user_subscriptionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_subscriptionsPayload>
          }
          aggregate: {
            args: Prisma.User_subscriptionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_subscriptions>
          }
          groupBy: {
            args: Prisma.user_subscriptionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_subscriptionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_subscriptionsCountArgs<ExtArgs>
            result: $Utils.Optional<User_subscriptionsCountAggregateOutputType> | number
          }
        }
      }
      support_requests: {
        payload: Prisma.$support_requestsPayload<ExtArgs>
        fields: Prisma.support_requestsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.support_requestsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$support_requestsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.support_requestsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$support_requestsPayload>
          }
          findFirst: {
            args: Prisma.support_requestsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$support_requestsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.support_requestsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$support_requestsPayload>
          }
          findMany: {
            args: Prisma.support_requestsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$support_requestsPayload>[]
          }
          create: {
            args: Prisma.support_requestsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$support_requestsPayload>
          }
          createMany: {
            args: Prisma.support_requestsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.support_requestsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$support_requestsPayload>[]
          }
          delete: {
            args: Prisma.support_requestsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$support_requestsPayload>
          }
          update: {
            args: Prisma.support_requestsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$support_requestsPayload>
          }
          deleteMany: {
            args: Prisma.support_requestsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.support_requestsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.support_requestsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$support_requestsPayload>[]
          }
          upsert: {
            args: Prisma.support_requestsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$support_requestsPayload>
          }
          aggregate: {
            args: Prisma.Support_requestsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupport_requests>
          }
          groupBy: {
            args: Prisma.support_requestsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Support_requestsGroupByOutputType>[]
          }
          count: {
            args: Prisma.support_requestsCountArgs<ExtArgs>
            result: $Utils.Optional<Support_requestsCountAggregateOutputType> | number
          }
        }
      }
      promocodes: {
        payload: Prisma.$promocodesPayload<ExtArgs>
        fields: Prisma.promocodesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.promocodesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocodesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.promocodesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocodesPayload>
          }
          findFirst: {
            args: Prisma.promocodesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocodesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.promocodesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocodesPayload>
          }
          findMany: {
            args: Prisma.promocodesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocodesPayload>[]
          }
          create: {
            args: Prisma.promocodesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocodesPayload>
          }
          createMany: {
            args: Prisma.promocodesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.promocodesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocodesPayload>[]
          }
          delete: {
            args: Prisma.promocodesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocodesPayload>
          }
          update: {
            args: Prisma.promocodesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocodesPayload>
          }
          deleteMany: {
            args: Prisma.promocodesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.promocodesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.promocodesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocodesPayload>[]
          }
          upsert: {
            args: Prisma.promocodesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocodesPayload>
          }
          aggregate: {
            args: Prisma.PromocodesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromocodes>
          }
          groupBy: {
            args: Prisma.promocodesGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromocodesGroupByOutputType>[]
          }
          count: {
            args: Prisma.promocodesCountArgs<ExtArgs>
            result: $Utils.Optional<PromocodesCountAggregateOutputType> | number
          }
        }
      }
      promo_usage: {
        payload: Prisma.$promo_usagePayload<ExtArgs>
        fields: Prisma.promo_usageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.promo_usageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promo_usagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.promo_usageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promo_usagePayload>
          }
          findFirst: {
            args: Prisma.promo_usageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promo_usagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.promo_usageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promo_usagePayload>
          }
          findMany: {
            args: Prisma.promo_usageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promo_usagePayload>[]
          }
          create: {
            args: Prisma.promo_usageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promo_usagePayload>
          }
          createMany: {
            args: Prisma.promo_usageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.promo_usageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promo_usagePayload>[]
          }
          delete: {
            args: Prisma.promo_usageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promo_usagePayload>
          }
          update: {
            args: Prisma.promo_usageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promo_usagePayload>
          }
          deleteMany: {
            args: Prisma.promo_usageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.promo_usageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.promo_usageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promo_usagePayload>[]
          }
          upsert: {
            args: Prisma.promo_usageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promo_usagePayload>
          }
          aggregate: {
            args: Prisma.Promo_usageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromo_usage>
          }
          groupBy: {
            args: Prisma.promo_usageGroupByArgs<ExtArgs>
            result: $Utils.Optional<Promo_usageGroupByOutputType>[]
          }
          count: {
            args: Prisma.promo_usageCountArgs<ExtArgs>
            result: $Utils.Optional<Promo_usageCountAggregateOutputType> | number
          }
        }
      }
      categories: {
        payload: Prisma.$categoriesPayload<ExtArgs>
        fields: Prisma.categoriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.categoriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.categoriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          findFirst: {
            args: Prisma.categoriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.categoriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          findMany: {
            args: Prisma.categoriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>[]
          }
          create: {
            args: Prisma.categoriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          createMany: {
            args: Prisma.categoriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.categoriesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>[]
          }
          delete: {
            args: Prisma.categoriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          update: {
            args: Prisma.categoriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          deleteMany: {
            args: Prisma.categoriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.categoriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.categoriesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>[]
          }
          upsert: {
            args: Prisma.categoriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          aggregate: {
            args: Prisma.CategoriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategories>
          }
          groupBy: {
            args: Prisma.categoriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.categoriesCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriesCountAggregateOutputType> | number
          }
        }
      }
      products: {
        payload: Prisma.$productsPayload<ExtArgs>
        fields: Prisma.productsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.productsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.productsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          findFirst: {
            args: Prisma.productsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.productsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          findMany: {
            args: Prisma.productsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>[]
          }
          create: {
            args: Prisma.productsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          createMany: {
            args: Prisma.productsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.productsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>[]
          }
          delete: {
            args: Prisma.productsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          update: {
            args: Prisma.productsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          deleteMany: {
            args: Prisma.productsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.productsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.productsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>[]
          }
          upsert: {
            args: Prisma.productsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          aggregate: {
            args: Prisma.ProductsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducts>
          }
          groupBy: {
            args: Prisma.productsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductsGroupByOutputType>[]
          }
          count: {
            args: Prisma.productsCountArgs<ExtArgs>
            result: $Utils.Optional<ProductsCountAggregateOutputType> | number
          }
        }
      }
      product_keys: {
        payload: Prisma.$product_keysPayload<ExtArgs>
        fields: Prisma.product_keysFieldRefs
        operations: {
          findUnique: {
            args: Prisma.product_keysFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_keysPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.product_keysFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_keysPayload>
          }
          findFirst: {
            args: Prisma.product_keysFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_keysPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.product_keysFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_keysPayload>
          }
          findMany: {
            args: Prisma.product_keysFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_keysPayload>[]
          }
          create: {
            args: Prisma.product_keysCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_keysPayload>
          }
          createMany: {
            args: Prisma.product_keysCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.product_keysCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_keysPayload>[]
          }
          delete: {
            args: Prisma.product_keysDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_keysPayload>
          }
          update: {
            args: Prisma.product_keysUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_keysPayload>
          }
          deleteMany: {
            args: Prisma.product_keysDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.product_keysUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.product_keysUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_keysPayload>[]
          }
          upsert: {
            args: Prisma.product_keysUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_keysPayload>
          }
          aggregate: {
            args: Prisma.Product_keysAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct_keys>
          }
          groupBy: {
            args: Prisma.product_keysGroupByArgs<ExtArgs>
            result: $Utils.Optional<Product_keysGroupByOutputType>[]
          }
          count: {
            args: Prisma.product_keysCountArgs<ExtArgs>
            result: $Utils.Optional<Product_keysCountAggregateOutputType> | number
          }
        }
      }
      user_products: {
        payload: Prisma.$user_productsPayload<ExtArgs>
        fields: Prisma.user_productsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_productsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_productsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_productsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_productsPayload>
          }
          findFirst: {
            args: Prisma.user_productsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_productsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_productsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_productsPayload>
          }
          findMany: {
            args: Prisma.user_productsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_productsPayload>[]
          }
          create: {
            args: Prisma.user_productsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_productsPayload>
          }
          createMany: {
            args: Prisma.user_productsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_productsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_productsPayload>[]
          }
          delete: {
            args: Prisma.user_productsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_productsPayload>
          }
          update: {
            args: Prisma.user_productsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_productsPayload>
          }
          deleteMany: {
            args: Prisma.user_productsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_productsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_productsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_productsPayload>[]
          }
          upsert: {
            args: Prisma.user_productsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_productsPayload>
          }
          aggregate: {
            args: Prisma.User_productsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_products>
          }
          groupBy: {
            args: Prisma.user_productsGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_productsGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_productsCountArgs<ExtArgs>
            result: $Utils.Optional<User_productsCountAggregateOutputType> | number
          }
        }
      }
      db_name_aliases: {
        payload: Prisma.$db_name_aliasesPayload<ExtArgs>
        fields: Prisma.db_name_aliasesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.db_name_aliasesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$db_name_aliasesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.db_name_aliasesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$db_name_aliasesPayload>
          }
          findFirst: {
            args: Prisma.db_name_aliasesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$db_name_aliasesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.db_name_aliasesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$db_name_aliasesPayload>
          }
          findMany: {
            args: Prisma.db_name_aliasesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$db_name_aliasesPayload>[]
          }
          create: {
            args: Prisma.db_name_aliasesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$db_name_aliasesPayload>
          }
          createMany: {
            args: Prisma.db_name_aliasesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.db_name_aliasesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$db_name_aliasesPayload>[]
          }
          delete: {
            args: Prisma.db_name_aliasesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$db_name_aliasesPayload>
          }
          update: {
            args: Prisma.db_name_aliasesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$db_name_aliasesPayload>
          }
          deleteMany: {
            args: Prisma.db_name_aliasesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.db_name_aliasesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.db_name_aliasesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$db_name_aliasesPayload>[]
          }
          upsert: {
            args: Prisma.db_name_aliasesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$db_name_aliasesPayload>
          }
          aggregate: {
            args: Prisma.Db_name_aliasesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDb_name_aliases>
          }
          groupBy: {
            args: Prisma.db_name_aliasesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Db_name_aliasesGroupByOutputType>[]
          }
          count: {
            args: Prisma.db_name_aliasesCountArgs<ExtArgs>
            result: $Utils.Optional<Db_name_aliasesCountAggregateOutputType> | number
          }
        }
      }
      staff_members: {
        payload: Prisma.$staff_membersPayload<ExtArgs>
        fields: Prisma.staff_membersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.staff_membersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_membersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.staff_membersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_membersPayload>
          }
          findFirst: {
            args: Prisma.staff_membersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_membersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.staff_membersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_membersPayload>
          }
          findMany: {
            args: Prisma.staff_membersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_membersPayload>[]
          }
          create: {
            args: Prisma.staff_membersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_membersPayload>
          }
          createMany: {
            args: Prisma.staff_membersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.staff_membersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_membersPayload>[]
          }
          delete: {
            args: Prisma.staff_membersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_membersPayload>
          }
          update: {
            args: Prisma.staff_membersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_membersPayload>
          }
          deleteMany: {
            args: Prisma.staff_membersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.staff_membersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.staff_membersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_membersPayload>[]
          }
          upsert: {
            args: Prisma.staff_membersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_membersPayload>
          }
          aggregate: {
            args: Prisma.Staff_membersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStaff_members>
          }
          groupBy: {
            args: Prisma.staff_membersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Staff_membersGroupByOutputType>[]
          }
          count: {
            args: Prisma.staff_membersCountArgs<ExtArgs>
            result: $Utils.Optional<Staff_membersCountAggregateOutputType> | number
          }
        }
      }
      staff_rights: {
        payload: Prisma.$staff_rightsPayload<ExtArgs>
        fields: Prisma.staff_rightsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.staff_rightsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_rightsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.staff_rightsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_rightsPayload>
          }
          findFirst: {
            args: Prisma.staff_rightsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_rightsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.staff_rightsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_rightsPayload>
          }
          findMany: {
            args: Prisma.staff_rightsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_rightsPayload>[]
          }
          create: {
            args: Prisma.staff_rightsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_rightsPayload>
          }
          createMany: {
            args: Prisma.staff_rightsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.staff_rightsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_rightsPayload>[]
          }
          delete: {
            args: Prisma.staff_rightsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_rightsPayload>
          }
          update: {
            args: Prisma.staff_rightsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_rightsPayload>
          }
          deleteMany: {
            args: Prisma.staff_rightsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.staff_rightsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.staff_rightsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_rightsPayload>[]
          }
          upsert: {
            args: Prisma.staff_rightsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$staff_rightsPayload>
          }
          aggregate: {
            args: Prisma.Staff_rightsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStaff_rights>
          }
          groupBy: {
            args: Prisma.staff_rightsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Staff_rightsGroupByOutputType>[]
          }
          count: {
            args: Prisma.staff_rightsCountArgs<ExtArgs>
            result: $Utils.Optional<Staff_rightsCountAggregateOutputType> | number
          }
        }
      }
      keys_aliases: {
        payload: Prisma.$keys_aliasesPayload<ExtArgs>
        fields: Prisma.keys_aliasesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.keys_aliasesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keys_aliasesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.keys_aliasesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keys_aliasesPayload>
          }
          findFirst: {
            args: Prisma.keys_aliasesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keys_aliasesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.keys_aliasesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keys_aliasesPayload>
          }
          findMany: {
            args: Prisma.keys_aliasesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keys_aliasesPayload>[]
          }
          create: {
            args: Prisma.keys_aliasesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keys_aliasesPayload>
          }
          createMany: {
            args: Prisma.keys_aliasesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.keys_aliasesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keys_aliasesPayload>[]
          }
          delete: {
            args: Prisma.keys_aliasesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keys_aliasesPayload>
          }
          update: {
            args: Prisma.keys_aliasesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keys_aliasesPayload>
          }
          deleteMany: {
            args: Prisma.keys_aliasesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.keys_aliasesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.keys_aliasesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keys_aliasesPayload>[]
          }
          upsert: {
            args: Prisma.keys_aliasesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$keys_aliasesPayload>
          }
          aggregate: {
            args: Prisma.Keys_aliasesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateKeys_aliases>
          }
          groupBy: {
            args: Prisma.keys_aliasesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Keys_aliasesGroupByOutputType>[]
          }
          count: {
            args: Prisma.keys_aliasesCountArgs<ExtArgs>
            result: $Utils.Optional<Keys_aliasesCountAggregateOutputType> | number
          }
        }
      }
      Post: {
        payload: Prisma.$PostPayload<ExtArgs>
        fields: Prisma.PostFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PostFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PostFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          findFirst: {
            args: Prisma.PostFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PostFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          findMany: {
            args: Prisma.PostFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>[]
          }
          create: {
            args: Prisma.PostCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          createMany: {
            args: Prisma.PostCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PostCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>[]
          }
          delete: {
            args: Prisma.PostDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          update: {
            args: Prisma.PostUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          deleteMany: {
            args: Prisma.PostDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PostUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PostUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>[]
          }
          upsert: {
            args: Prisma.PostUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          aggregate: {
            args: Prisma.PostAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost>
          }
          groupBy: {
            args: Prisma.PostGroupByArgs<ExtArgs>
            result: $Utils.Optional<PostGroupByOutputType>[]
          }
          count: {
            args: Prisma.PostCountArgs<ExtArgs>
            result: $Utils.Optional<PostCountAggregateOutputType> | number
          }
        }
      }
      Draft: {
        payload: Prisma.$DraftPayload<ExtArgs>
        fields: Prisma.DraftFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DraftFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DraftPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DraftFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DraftPayload>
          }
          findFirst: {
            args: Prisma.DraftFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DraftPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DraftFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DraftPayload>
          }
          findMany: {
            args: Prisma.DraftFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DraftPayload>[]
          }
          create: {
            args: Prisma.DraftCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DraftPayload>
          }
          createMany: {
            args: Prisma.DraftCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DraftCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DraftPayload>[]
          }
          delete: {
            args: Prisma.DraftDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DraftPayload>
          }
          update: {
            args: Prisma.DraftUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DraftPayload>
          }
          deleteMany: {
            args: Prisma.DraftDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DraftUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DraftUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DraftPayload>[]
          }
          upsert: {
            args: Prisma.DraftUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DraftPayload>
          }
          aggregate: {
            args: Prisma.DraftAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDraft>
          }
          groupBy: {
            args: Prisma.DraftGroupByArgs<ExtArgs>
            result: $Utils.Optional<DraftGroupByOutputType>[]
          }
          count: {
            args: Prisma.DraftCountArgs<ExtArgs>
            result: $Utils.Optional<DraftCountAggregateOutputType> | number
          }
        }
      }
      key_events: {
        payload: Prisma.$key_eventsPayload<ExtArgs>
        fields: Prisma.key_eventsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.key_eventsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$key_eventsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.key_eventsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$key_eventsPayload>
          }
          findFirst: {
            args: Prisma.key_eventsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$key_eventsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.key_eventsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$key_eventsPayload>
          }
          findMany: {
            args: Prisma.key_eventsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$key_eventsPayload>[]
          }
          create: {
            args: Prisma.key_eventsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$key_eventsPayload>
          }
          createMany: {
            args: Prisma.key_eventsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.key_eventsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$key_eventsPayload>[]
          }
          delete: {
            args: Prisma.key_eventsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$key_eventsPayload>
          }
          update: {
            args: Prisma.key_eventsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$key_eventsPayload>
          }
          deleteMany: {
            args: Prisma.key_eventsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.key_eventsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.key_eventsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$key_eventsPayload>[]
          }
          upsert: {
            args: Prisma.key_eventsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$key_eventsPayload>
          }
          aggregate: {
            args: Prisma.Key_eventsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateKey_events>
          }
          groupBy: {
            args: Prisma.key_eventsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Key_eventsGroupByOutputType>[]
          }
          count: {
            args: Prisma.key_eventsCountArgs<ExtArgs>
            result: $Utils.Optional<Key_eventsCountAggregateOutputType> | number
          }
        }
      }
      order_item_units: {
        payload: Prisma.$order_item_unitsPayload<ExtArgs>
        fields: Prisma.order_item_unitsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.order_item_unitsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_item_unitsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.order_item_unitsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_item_unitsPayload>
          }
          findFirst: {
            args: Prisma.order_item_unitsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_item_unitsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.order_item_unitsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_item_unitsPayload>
          }
          findMany: {
            args: Prisma.order_item_unitsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_item_unitsPayload>[]
          }
          create: {
            args: Prisma.order_item_unitsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_item_unitsPayload>
          }
          createMany: {
            args: Prisma.order_item_unitsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.order_item_unitsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_item_unitsPayload>[]
          }
          delete: {
            args: Prisma.order_item_unitsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_item_unitsPayload>
          }
          update: {
            args: Prisma.order_item_unitsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_item_unitsPayload>
          }
          deleteMany: {
            args: Prisma.order_item_unitsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.order_item_unitsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.order_item_unitsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_item_unitsPayload>[]
          }
          upsert: {
            args: Prisma.order_item_unitsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_item_unitsPayload>
          }
          aggregate: {
            args: Prisma.Order_item_unitsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder_item_units>
          }
          groupBy: {
            args: Prisma.order_item_unitsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Order_item_unitsGroupByOutputType>[]
          }
          count: {
            args: Prisma.order_item_unitsCountArgs<ExtArgs>
            result: $Utils.Optional<Order_item_unitsCountAggregateOutputType> | number
          }
        }
      }
      order_items: {
        payload: Prisma.$order_itemsPayload<ExtArgs>
        fields: Prisma.order_itemsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.order_itemsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.order_itemsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>
          }
          findFirst: {
            args: Prisma.order_itemsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.order_itemsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>
          }
          findMany: {
            args: Prisma.order_itemsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>[]
          }
          create: {
            args: Prisma.order_itemsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>
          }
          createMany: {
            args: Prisma.order_itemsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.order_itemsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>[]
          }
          delete: {
            args: Prisma.order_itemsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>
          }
          update: {
            args: Prisma.order_itemsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>
          }
          deleteMany: {
            args: Prisma.order_itemsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.order_itemsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.order_itemsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>[]
          }
          upsert: {
            args: Prisma.order_itemsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_itemsPayload>
          }
          aggregate: {
            args: Prisma.Order_itemsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder_items>
          }
          groupBy: {
            args: Prisma.order_itemsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Order_itemsGroupByOutputType>[]
          }
          count: {
            args: Prisma.order_itemsCountArgs<ExtArgs>
            result: $Utils.Optional<Order_itemsCountAggregateOutputType> | number
          }
        }
      }
      orders: {
        payload: Prisma.$ordersPayload<ExtArgs>
        fields: Prisma.ordersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ordersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ordersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          findFirst: {
            args: Prisma.ordersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ordersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          findMany: {
            args: Prisma.ordersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          create: {
            args: Prisma.ordersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          createMany: {
            args: Prisma.ordersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ordersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          delete: {
            args: Prisma.ordersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          update: {
            args: Prisma.ordersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          deleteMany: {
            args: Prisma.ordersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ordersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ordersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          upsert: {
            args: Prisma.ordersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          aggregate: {
            args: Prisma.OrdersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrders>
          }
          groupBy: {
            args: Prisma.ordersGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrdersGroupByOutputType>[]
          }
          count: {
            args: Prisma.ordersCountArgs<ExtArgs>
            result: $Utils.Optional<OrdersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    users?: usersOmit
    subscriptions?: subscriptionsOmit
    user_subscriptions?: user_subscriptionsOmit
    support_requests?: support_requestsOmit
    promocodes?: promocodesOmit
    promo_usage?: promo_usageOmit
    categories?: categoriesOmit
    products?: productsOmit
    product_keys?: product_keysOmit
    user_products?: user_productsOmit
    db_name_aliases?: db_name_aliasesOmit
    staff_members?: staff_membersOmit
    staff_rights?: staff_rightsOmit
    keys_aliases?: keys_aliasesOmit
    post?: PostOmit
    draft?: DraftOmit
    key_events?: key_eventsOmit
    order_item_units?: order_item_unitsOmit
    order_items?: order_itemsOmit
    orders?: ordersOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    orders: number
    support_requests: number
    user_products: number
    user_subscriptions: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | UsersCountOutputTypeCountOrdersArgs
    support_requests?: boolean | UsersCountOutputTypeCountSupport_requestsArgs
    user_products?: boolean | UsersCountOutputTypeCountUser_productsArgs
    user_subscriptions?: boolean | UsersCountOutputTypeCountUser_subscriptionsArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordersWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSupport_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: support_requestsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_productsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_subscriptionsWhereInput
  }


  /**
   * Count Type SubscriptionsCountOutputType
   */

  export type SubscriptionsCountOutputType = {
    order_items: number
    user_subscriptions: number
  }

  export type SubscriptionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_items?: boolean | SubscriptionsCountOutputTypeCountOrder_itemsArgs
    user_subscriptions?: boolean | SubscriptionsCountOutputTypeCountUser_subscriptionsArgs
  }

  // Custom InputTypes
  /**
   * SubscriptionsCountOutputType without action
   */
  export type SubscriptionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionsCountOutputType
     */
    select?: SubscriptionsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SubscriptionsCountOutputType without action
   */
  export type SubscriptionsCountOutputTypeCountOrder_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_itemsWhereInput
  }

  /**
   * SubscriptionsCountOutputType without action
   */
  export type SubscriptionsCountOutputTypeCountUser_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_subscriptionsWhereInput
  }


  /**
   * Count Type PromocodesCountOutputType
   */

  export type PromocodesCountOutputType = {
    promo_usage: number
  }

  export type PromocodesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promo_usage?: boolean | PromocodesCountOutputTypeCountPromo_usageArgs
  }

  // Custom InputTypes
  /**
   * PromocodesCountOutputType without action
   */
  export type PromocodesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromocodesCountOutputType
     */
    select?: PromocodesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PromocodesCountOutputType without action
   */
  export type PromocodesCountOutputTypeCountPromo_usageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: promo_usageWhereInput
  }


  /**
   * Count Type CategoriesCountOutputType
   */

  export type CategoriesCountOutputType = {
    products: number
  }

  export type CategoriesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | CategoriesCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * CategoriesCountOutputType without action
   */
  export type CategoriesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesCountOutputType
     */
    select?: CategoriesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriesCountOutputType without action
   */
  export type CategoriesCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productsWhereInput
  }


  /**
   * Count Type ProductsCountOutputType
   */

  export type ProductsCountOutputType = {
    order_items: number
    product_keys: number
    user_products: number
  }

  export type ProductsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_items?: boolean | ProductsCountOutputTypeCountOrder_itemsArgs
    product_keys?: boolean | ProductsCountOutputTypeCountProduct_keysArgs
    user_products?: boolean | ProductsCountOutputTypeCountUser_productsArgs
  }

  // Custom InputTypes
  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductsCountOutputType
     */
    select?: ProductsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeCountOrder_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_itemsWhereInput
  }

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeCountProduct_keysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_keysWhereInput
  }

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeCountUser_productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_productsWhereInput
  }


  /**
   * Count Type Product_keysCountOutputType
   */

  export type Product_keysCountOutputType = {
    key_events: number
    keys_aliases: number
  }

  export type Product_keysCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    key_events?: boolean | Product_keysCountOutputTypeCountKey_eventsArgs
    keys_aliases?: boolean | Product_keysCountOutputTypeCountKeys_aliasesArgs
  }

  // Custom InputTypes
  /**
   * Product_keysCountOutputType without action
   */
  export type Product_keysCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product_keysCountOutputType
     */
    select?: Product_keysCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Product_keysCountOutputType without action
   */
  export type Product_keysCountOutputTypeCountKey_eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: key_eventsWhereInput
  }

  /**
   * Product_keysCountOutputType without action
   */
  export type Product_keysCountOutputTypeCountKeys_aliasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: keys_aliasesWhereInput
  }


  /**
   * Count Type Staff_membersCountOutputType
   */

  export type Staff_membersCountOutputType = {
    staff_rights: number
    support_requests: number
  }

  export type Staff_membersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    staff_rights?: boolean | Staff_membersCountOutputTypeCountStaff_rightsArgs
    support_requests?: boolean | Staff_membersCountOutputTypeCountSupport_requestsArgs
  }

  // Custom InputTypes
  /**
   * Staff_membersCountOutputType without action
   */
  export type Staff_membersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff_membersCountOutputType
     */
    select?: Staff_membersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Staff_membersCountOutputType without action
   */
  export type Staff_membersCountOutputTypeCountStaff_rightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: staff_rightsWhereInput
  }

  /**
   * Staff_membersCountOutputType without action
   */
  export type Staff_membersCountOutputTypeCountSupport_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: support_requestsWhereInput
  }


  /**
   * Count Type Keys_aliasesCountOutputType
   */

  export type Keys_aliasesCountOutputType = {
    order_items: number
  }

  export type Keys_aliasesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_items?: boolean | Keys_aliasesCountOutputTypeCountOrder_itemsArgs
  }

  // Custom InputTypes
  /**
   * Keys_aliasesCountOutputType without action
   */
  export type Keys_aliasesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Keys_aliasesCountOutputType
     */
    select?: Keys_aliasesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Keys_aliasesCountOutputType without action
   */
  export type Keys_aliasesCountOutputTypeCountOrder_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_itemsWhereInput
  }


  /**
   * Count Type Order_itemsCountOutputType
   */

  export type Order_itemsCountOutputType = {
    order_item_units: number
  }

  export type Order_itemsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_item_units?: boolean | Order_itemsCountOutputTypeCountOrder_item_unitsArgs
  }

  // Custom InputTypes
  /**
   * Order_itemsCountOutputType without action
   */
  export type Order_itemsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order_itemsCountOutputType
     */
    select?: Order_itemsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Order_itemsCountOutputType without action
   */
  export type Order_itemsCountOutputTypeCountOrder_item_unitsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_item_unitsWhereInput
  }


  /**
   * Count Type OrdersCountOutputType
   */

  export type OrdersCountOutputType = {
    order_items: number
  }

  export type OrdersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_items?: boolean | OrdersCountOutputTypeCountOrder_itemsArgs
  }

  // Custom InputTypes
  /**
   * OrdersCountOutputType without action
   */
  export type OrdersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdersCountOutputType
     */
    select?: OrdersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrdersCountOutputType without action
   */
  export type OrdersCountOutputTypeCountOrder_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_itemsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersMinAggregateOutputType = {
    id: string | null
    username: string | null
    email: string | null
    phone: string | null
    password: string | null
    created_at: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    id: string | null
    username: string | null
    email: string | null
    phone: string | null
    password: string | null
    created_at: Date | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    username: number
    email: number
    phone: number
    password: number
    created_at: number
    _all: number
  }


  export type UsersMinAggregateInputType = {
    id?: true
    username?: true
    email?: true
    phone?: true
    password?: true
    created_at?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    username?: true
    email?: true
    phone?: true
    password?: true
    created_at?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    username?: true
    email?: true
    phone?: true
    password?: true
    created_at?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: string
    username: string
    email: string
    phone: string | null
    password: string
    created_at: Date | null
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    phone?: boolean
    password?: boolean
    created_at?: boolean
    orders?: boolean | users$ordersArgs<ExtArgs>
    support_requests?: boolean | users$support_requestsArgs<ExtArgs>
    user_products?: boolean | users$user_productsArgs<ExtArgs>
    user_subscriptions?: boolean | users$user_subscriptionsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    phone?: boolean
    password?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    phone?: boolean
    password?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    id?: boolean
    username?: boolean
    email?: boolean
    phone?: boolean
    password?: boolean
    created_at?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "email" | "phone" | "password" | "created_at", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | users$ordersArgs<ExtArgs>
    support_requests?: boolean | users$support_requestsArgs<ExtArgs>
    user_products?: boolean | users$user_productsArgs<ExtArgs>
    user_subscriptions?: boolean | users$user_subscriptionsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type usersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      orders: Prisma.$ordersPayload<ExtArgs>[]
      support_requests: Prisma.$support_requestsPayload<ExtArgs>[]
      user_products: Prisma.$user_productsPayload<ExtArgs>[]
      user_subscriptions: Prisma.$user_subscriptionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      username: string
      email: string
      phone: string | null
      password: string
      created_at: Date | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {usersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usersCreateManyAndReturnArgs>(args?: SelectSubset<T, usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {usersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usersUpdateManyAndReturnArgs>(args: SelectSubset<T, usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends users$ordersArgs<ExtArgs> = {}>(args?: Subset<T, users$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    support_requests<T extends users$support_requestsArgs<ExtArgs> = {}>(args?: Subset<T, users$support_requestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$support_requestsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_products<T extends users$user_productsArgs<ExtArgs> = {}>(args?: Subset<T, users$user_productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_subscriptions<T extends users$user_subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, users$user_subscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_subscriptionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'String'>
    readonly username: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly phone: FieldRef<"users", 'String'>
    readonly password: FieldRef<"users", 'String'>
    readonly created_at: FieldRef<"users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users createManyAndReturn
   */
  export type usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users updateManyAndReturn
   */
  export type usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.orders
   */
  export type users$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    where?: ordersWhereInput
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    cursor?: ordersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * users.support_requests
   */
  export type users$support_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the support_requests
     */
    select?: support_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the support_requests
     */
    omit?: support_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: support_requestsInclude<ExtArgs> | null
    where?: support_requestsWhereInput
    orderBy?: support_requestsOrderByWithRelationInput | support_requestsOrderByWithRelationInput[]
    cursor?: support_requestsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Support_requestsScalarFieldEnum | Support_requestsScalarFieldEnum[]
  }

  /**
   * users.user_products
   */
  export type users$user_productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_products
     */
    select?: user_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_products
     */
    omit?: user_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_productsInclude<ExtArgs> | null
    where?: user_productsWhereInput
    orderBy?: user_productsOrderByWithRelationInput | user_productsOrderByWithRelationInput[]
    cursor?: user_productsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_productsScalarFieldEnum | User_productsScalarFieldEnum[]
  }

  /**
   * users.user_subscriptions
   */
  export type users$user_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_subscriptions
     */
    select?: user_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_subscriptions
     */
    omit?: user_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_subscriptionsInclude<ExtArgs> | null
    where?: user_subscriptionsWhereInput
    orderBy?: user_subscriptionsOrderByWithRelationInput | user_subscriptionsOrderByWithRelationInput[]
    cursor?: user_subscriptionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_subscriptionsScalarFieldEnum | User_subscriptionsScalarFieldEnum[]
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Model subscriptions
   */

  export type AggregateSubscriptions = {
    _count: SubscriptionsCountAggregateOutputType | null
    _avg: SubscriptionsAvgAggregateOutputType | null
    _sum: SubscriptionsSumAggregateOutputType | null
    _min: SubscriptionsMinAggregateOutputType | null
    _max: SubscriptionsMaxAggregateOutputType | null
  }

  export type SubscriptionsAvgAggregateOutputType = {
    duration_days: number | null
    price: Decimal | null
  }

  export type SubscriptionsSumAggregateOutputType = {
    duration_days: number | null
    price: Decimal | null
  }

  export type SubscriptionsMinAggregateOutputType = {
    id: string | null
    title: string | null
    duration_days: number | null
    price: Decimal | null
    description: string | null
    image: string | null
  }

  export type SubscriptionsMaxAggregateOutputType = {
    id: string | null
    title: string | null
    duration_days: number | null
    price: Decimal | null
    description: string | null
    image: string | null
  }

  export type SubscriptionsCountAggregateOutputType = {
    id: number
    title: number
    duration_days: number
    price: number
    description: number
    image: number
    _all: number
  }


  export type SubscriptionsAvgAggregateInputType = {
    duration_days?: true
    price?: true
  }

  export type SubscriptionsSumAggregateInputType = {
    duration_days?: true
    price?: true
  }

  export type SubscriptionsMinAggregateInputType = {
    id?: true
    title?: true
    duration_days?: true
    price?: true
    description?: true
    image?: true
  }

  export type SubscriptionsMaxAggregateInputType = {
    id?: true
    title?: true
    duration_days?: true
    price?: true
    description?: true
    image?: true
  }

  export type SubscriptionsCountAggregateInputType = {
    id?: true
    title?: true
    duration_days?: true
    price?: true
    description?: true
    image?: true
    _all?: true
  }

  export type SubscriptionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which subscriptions to aggregate.
     */
    where?: subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscriptions to fetch.
     */
    orderBy?: subscriptionsOrderByWithRelationInput | subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned subscriptions
    **/
    _count?: true | SubscriptionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubscriptionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubscriptionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubscriptionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubscriptionsMaxAggregateInputType
  }

  export type GetSubscriptionsAggregateType<T extends SubscriptionsAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscriptions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscriptions[P]>
      : GetScalarType<T[P], AggregateSubscriptions[P]>
  }




  export type subscriptionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscriptionsWhereInput
    orderBy?: subscriptionsOrderByWithAggregationInput | subscriptionsOrderByWithAggregationInput[]
    by: SubscriptionsScalarFieldEnum[] | SubscriptionsScalarFieldEnum
    having?: subscriptionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubscriptionsCountAggregateInputType | true
    _avg?: SubscriptionsAvgAggregateInputType
    _sum?: SubscriptionsSumAggregateInputType
    _min?: SubscriptionsMinAggregateInputType
    _max?: SubscriptionsMaxAggregateInputType
  }

  export type SubscriptionsGroupByOutputType = {
    id: string
    title: string
    duration_days: number
    price: Decimal
    description: string | null
    image: string | null
    _count: SubscriptionsCountAggregateOutputType | null
    _avg: SubscriptionsAvgAggregateOutputType | null
    _sum: SubscriptionsSumAggregateOutputType | null
    _min: SubscriptionsMinAggregateOutputType | null
    _max: SubscriptionsMaxAggregateOutputType | null
  }

  type GetSubscriptionsGroupByPayload<T extends subscriptionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubscriptionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubscriptionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubscriptionsGroupByOutputType[P]>
            : GetScalarType<T[P], SubscriptionsGroupByOutputType[P]>
        }
      >
    >


  export type subscriptionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    duration_days?: boolean
    price?: boolean
    description?: boolean
    image?: boolean
    order_items?: boolean | subscriptions$order_itemsArgs<ExtArgs>
    user_subscriptions?: boolean | subscriptions$user_subscriptionsArgs<ExtArgs>
    _count?: boolean | SubscriptionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscriptions"]>

  export type subscriptionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    duration_days?: boolean
    price?: boolean
    description?: boolean
    image?: boolean
  }, ExtArgs["result"]["subscriptions"]>

  export type subscriptionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    duration_days?: boolean
    price?: boolean
    description?: boolean
    image?: boolean
  }, ExtArgs["result"]["subscriptions"]>

  export type subscriptionsSelectScalar = {
    id?: boolean
    title?: boolean
    duration_days?: boolean
    price?: boolean
    description?: boolean
    image?: boolean
  }

  export type subscriptionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "duration_days" | "price" | "description" | "image", ExtArgs["result"]["subscriptions"]>
  export type subscriptionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_items?: boolean | subscriptions$order_itemsArgs<ExtArgs>
    user_subscriptions?: boolean | subscriptions$user_subscriptionsArgs<ExtArgs>
    _count?: boolean | SubscriptionsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type subscriptionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type subscriptionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $subscriptionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "subscriptions"
    objects: {
      order_items: Prisma.$order_itemsPayload<ExtArgs>[]
      user_subscriptions: Prisma.$user_subscriptionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      duration_days: number
      price: Prisma.Decimal
      description: string | null
      image: string | null
    }, ExtArgs["result"]["subscriptions"]>
    composites: {}
  }

  type subscriptionsGetPayload<S extends boolean | null | undefined | subscriptionsDefaultArgs> = $Result.GetResult<Prisma.$subscriptionsPayload, S>

  type subscriptionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<subscriptionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SubscriptionsCountAggregateInputType | true
    }

  export interface subscriptionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['subscriptions'], meta: { name: 'subscriptions' } }
    /**
     * Find zero or one Subscriptions that matches the filter.
     * @param {subscriptionsFindUniqueArgs} args - Arguments to find a Subscriptions
     * @example
     * // Get one Subscriptions
     * const subscriptions = await prisma.subscriptions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends subscriptionsFindUniqueArgs>(args: SelectSubset<T, subscriptionsFindUniqueArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Subscriptions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {subscriptionsFindUniqueOrThrowArgs} args - Arguments to find a Subscriptions
     * @example
     * // Get one Subscriptions
     * const subscriptions = await prisma.subscriptions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends subscriptionsFindUniqueOrThrowArgs>(args: SelectSubset<T, subscriptionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionsFindFirstArgs} args - Arguments to find a Subscriptions
     * @example
     * // Get one Subscriptions
     * const subscriptions = await prisma.subscriptions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends subscriptionsFindFirstArgs>(args?: SelectSubset<T, subscriptionsFindFirstArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subscriptions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionsFindFirstOrThrowArgs} args - Arguments to find a Subscriptions
     * @example
     * // Get one Subscriptions
     * const subscriptions = await prisma.subscriptions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends subscriptionsFindFirstOrThrowArgs>(args?: SelectSubset<T, subscriptionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Subscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subscriptions
     * const subscriptions = await prisma.subscriptions.findMany()
     * 
     * // Get first 10 Subscriptions
     * const subscriptions = await prisma.subscriptions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscriptionsWithIdOnly = await prisma.subscriptions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends subscriptionsFindManyArgs>(args?: SelectSubset<T, subscriptionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Subscriptions.
     * @param {subscriptionsCreateArgs} args - Arguments to create a Subscriptions.
     * @example
     * // Create one Subscriptions
     * const Subscriptions = await prisma.subscriptions.create({
     *   data: {
     *     // ... data to create a Subscriptions
     *   }
     * })
     * 
     */
    create<T extends subscriptionsCreateArgs>(args: SelectSubset<T, subscriptionsCreateArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Subscriptions.
     * @param {subscriptionsCreateManyArgs} args - Arguments to create many Subscriptions.
     * @example
     * // Create many Subscriptions
     * const subscriptions = await prisma.subscriptions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends subscriptionsCreateManyArgs>(args?: SelectSubset<T, subscriptionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Subscriptions and returns the data saved in the database.
     * @param {subscriptionsCreateManyAndReturnArgs} args - Arguments to create many Subscriptions.
     * @example
     * // Create many Subscriptions
     * const subscriptions = await prisma.subscriptions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Subscriptions and only return the `id`
     * const subscriptionsWithIdOnly = await prisma.subscriptions.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends subscriptionsCreateManyAndReturnArgs>(args?: SelectSubset<T, subscriptionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Subscriptions.
     * @param {subscriptionsDeleteArgs} args - Arguments to delete one Subscriptions.
     * @example
     * // Delete one Subscriptions
     * const Subscriptions = await prisma.subscriptions.delete({
     *   where: {
     *     // ... filter to delete one Subscriptions
     *   }
     * })
     * 
     */
    delete<T extends subscriptionsDeleteArgs>(args: SelectSubset<T, subscriptionsDeleteArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Subscriptions.
     * @param {subscriptionsUpdateArgs} args - Arguments to update one Subscriptions.
     * @example
     * // Update one Subscriptions
     * const subscriptions = await prisma.subscriptions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends subscriptionsUpdateArgs>(args: SelectSubset<T, subscriptionsUpdateArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Subscriptions.
     * @param {subscriptionsDeleteManyArgs} args - Arguments to filter Subscriptions to delete.
     * @example
     * // Delete a few Subscriptions
     * const { count } = await prisma.subscriptions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends subscriptionsDeleteManyArgs>(args?: SelectSubset<T, subscriptionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subscriptions
     * const subscriptions = await prisma.subscriptions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends subscriptionsUpdateManyArgs>(args: SelectSubset<T, subscriptionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscriptions and returns the data updated in the database.
     * @param {subscriptionsUpdateManyAndReturnArgs} args - Arguments to update many Subscriptions.
     * @example
     * // Update many Subscriptions
     * const subscriptions = await prisma.subscriptions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Subscriptions and only return the `id`
     * const subscriptionsWithIdOnly = await prisma.subscriptions.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends subscriptionsUpdateManyAndReturnArgs>(args: SelectSubset<T, subscriptionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Subscriptions.
     * @param {subscriptionsUpsertArgs} args - Arguments to update or create a Subscriptions.
     * @example
     * // Update or create a Subscriptions
     * const subscriptions = await prisma.subscriptions.upsert({
     *   create: {
     *     // ... data to create a Subscriptions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subscriptions we want to update
     *   }
     * })
     */
    upsert<T extends subscriptionsUpsertArgs>(args: SelectSubset<T, subscriptionsUpsertArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionsCountArgs} args - Arguments to filter Subscriptions to count.
     * @example
     * // Count the number of Subscriptions
     * const count = await prisma.subscriptions.count({
     *   where: {
     *     // ... the filter for the Subscriptions we want to count
     *   }
     * })
    **/
    count<T extends subscriptionsCountArgs>(
      args?: Subset<T, subscriptionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubscriptionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubscriptionsAggregateArgs>(args: Subset<T, SubscriptionsAggregateArgs>): Prisma.PrismaPromise<GetSubscriptionsAggregateType<T>>

    /**
     * Group by Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscriptionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends subscriptionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: subscriptionsGroupByArgs['orderBy'] }
        : { orderBy?: subscriptionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, subscriptionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscriptionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the subscriptions model
   */
  readonly fields: subscriptionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for subscriptions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__subscriptionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order_items<T extends subscriptions$order_itemsArgs<ExtArgs> = {}>(args?: Subset<T, subscriptions$order_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_subscriptions<T extends subscriptions$user_subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, subscriptions$user_subscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_subscriptionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the subscriptions model
   */
  interface subscriptionsFieldRefs {
    readonly id: FieldRef<"subscriptions", 'String'>
    readonly title: FieldRef<"subscriptions", 'String'>
    readonly duration_days: FieldRef<"subscriptions", 'Int'>
    readonly price: FieldRef<"subscriptions", 'Decimal'>
    readonly description: FieldRef<"subscriptions", 'String'>
    readonly image: FieldRef<"subscriptions", 'String'>
  }
    

  // Custom InputTypes
  /**
   * subscriptions findUnique
   */
  export type subscriptionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which subscriptions to fetch.
     */
    where: subscriptionsWhereUniqueInput
  }

  /**
   * subscriptions findUniqueOrThrow
   */
  export type subscriptionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which subscriptions to fetch.
     */
    where: subscriptionsWhereUniqueInput
  }

  /**
   * subscriptions findFirst
   */
  export type subscriptionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which subscriptions to fetch.
     */
    where?: subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscriptions to fetch.
     */
    orderBy?: subscriptionsOrderByWithRelationInput | subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subscriptions.
     */
    cursor?: subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subscriptions.
     */
    distinct?: SubscriptionsScalarFieldEnum | SubscriptionsScalarFieldEnum[]
  }

  /**
   * subscriptions findFirstOrThrow
   */
  export type subscriptionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which subscriptions to fetch.
     */
    where?: subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscriptions to fetch.
     */
    orderBy?: subscriptionsOrderByWithRelationInput | subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subscriptions.
     */
    cursor?: subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subscriptions.
     */
    distinct?: SubscriptionsScalarFieldEnum | SubscriptionsScalarFieldEnum[]
  }

  /**
   * subscriptions findMany
   */
  export type subscriptionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which subscriptions to fetch.
     */
    where?: subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscriptions to fetch.
     */
    orderBy?: subscriptionsOrderByWithRelationInput | subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing subscriptions.
     */
    cursor?: subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscriptions.
     */
    skip?: number
    distinct?: SubscriptionsScalarFieldEnum | SubscriptionsScalarFieldEnum[]
  }

  /**
   * subscriptions create
   */
  export type subscriptionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * The data needed to create a subscriptions.
     */
    data: XOR<subscriptionsCreateInput, subscriptionsUncheckedCreateInput>
  }

  /**
   * subscriptions createMany
   */
  export type subscriptionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many subscriptions.
     */
    data: subscriptionsCreateManyInput | subscriptionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * subscriptions createManyAndReturn
   */
  export type subscriptionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * The data used to create many subscriptions.
     */
    data: subscriptionsCreateManyInput | subscriptionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * subscriptions update
   */
  export type subscriptionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * The data needed to update a subscriptions.
     */
    data: XOR<subscriptionsUpdateInput, subscriptionsUncheckedUpdateInput>
    /**
     * Choose, which subscriptions to update.
     */
    where: subscriptionsWhereUniqueInput
  }

  /**
   * subscriptions updateMany
   */
  export type subscriptionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update subscriptions.
     */
    data: XOR<subscriptionsUpdateManyMutationInput, subscriptionsUncheckedUpdateManyInput>
    /**
     * Filter which subscriptions to update
     */
    where?: subscriptionsWhereInput
    /**
     * Limit how many subscriptions to update.
     */
    limit?: number
  }

  /**
   * subscriptions updateManyAndReturn
   */
  export type subscriptionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * The data used to update subscriptions.
     */
    data: XOR<subscriptionsUpdateManyMutationInput, subscriptionsUncheckedUpdateManyInput>
    /**
     * Filter which subscriptions to update
     */
    where?: subscriptionsWhereInput
    /**
     * Limit how many subscriptions to update.
     */
    limit?: number
  }

  /**
   * subscriptions upsert
   */
  export type subscriptionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * The filter to search for the subscriptions to update in case it exists.
     */
    where: subscriptionsWhereUniqueInput
    /**
     * In case the subscriptions found by the `where` argument doesn't exist, create a new subscriptions with this data.
     */
    create: XOR<subscriptionsCreateInput, subscriptionsUncheckedCreateInput>
    /**
     * In case the subscriptions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<subscriptionsUpdateInput, subscriptionsUncheckedUpdateInput>
  }

  /**
   * subscriptions delete
   */
  export type subscriptionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    /**
     * Filter which subscriptions to delete.
     */
    where: subscriptionsWhereUniqueInput
  }

  /**
   * subscriptions deleteMany
   */
  export type subscriptionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which subscriptions to delete
     */
    where?: subscriptionsWhereInput
    /**
     * Limit how many subscriptions to delete.
     */
    limit?: number
  }

  /**
   * subscriptions.order_items
   */
  export type subscriptions$order_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    where?: order_itemsWhereInput
    orderBy?: order_itemsOrderByWithRelationInput | order_itemsOrderByWithRelationInput[]
    cursor?: order_itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Order_itemsScalarFieldEnum | Order_itemsScalarFieldEnum[]
  }

  /**
   * subscriptions.user_subscriptions
   */
  export type subscriptions$user_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_subscriptions
     */
    select?: user_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_subscriptions
     */
    omit?: user_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_subscriptionsInclude<ExtArgs> | null
    where?: user_subscriptionsWhereInput
    orderBy?: user_subscriptionsOrderByWithRelationInput | user_subscriptionsOrderByWithRelationInput[]
    cursor?: user_subscriptionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_subscriptionsScalarFieldEnum | User_subscriptionsScalarFieldEnum[]
  }

  /**
   * subscriptions without action
   */
  export type subscriptionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
  }


  /**
   * Model user_subscriptions
   */

  export type AggregateUser_subscriptions = {
    _count: User_subscriptionsCountAggregateOutputType | null
    _min: User_subscriptionsMinAggregateOutputType | null
    _max: User_subscriptionsMaxAggregateOutputType | null
  }

  export type User_subscriptionsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    subscription_id: string | null
    start_date: Date | null
    end_date: Date | null
    active: boolean | null
  }

  export type User_subscriptionsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    subscription_id: string | null
    start_date: Date | null
    end_date: Date | null
    active: boolean | null
  }

  export type User_subscriptionsCountAggregateOutputType = {
    id: number
    user_id: number
    subscription_id: number
    start_date: number
    end_date: number
    active: number
    _all: number
  }


  export type User_subscriptionsMinAggregateInputType = {
    id?: true
    user_id?: true
    subscription_id?: true
    start_date?: true
    end_date?: true
    active?: true
  }

  export type User_subscriptionsMaxAggregateInputType = {
    id?: true
    user_id?: true
    subscription_id?: true
    start_date?: true
    end_date?: true
    active?: true
  }

  export type User_subscriptionsCountAggregateInputType = {
    id?: true
    user_id?: true
    subscription_id?: true
    start_date?: true
    end_date?: true
    active?: true
    _all?: true
  }

  export type User_subscriptionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_subscriptions to aggregate.
     */
    where?: user_subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_subscriptions to fetch.
     */
    orderBy?: user_subscriptionsOrderByWithRelationInput | user_subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_subscriptions
    **/
    _count?: true | User_subscriptionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_subscriptionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_subscriptionsMaxAggregateInputType
  }

  export type GetUser_subscriptionsAggregateType<T extends User_subscriptionsAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_subscriptions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_subscriptions[P]>
      : GetScalarType<T[P], AggregateUser_subscriptions[P]>
  }




  export type user_subscriptionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_subscriptionsWhereInput
    orderBy?: user_subscriptionsOrderByWithAggregationInput | user_subscriptionsOrderByWithAggregationInput[]
    by: User_subscriptionsScalarFieldEnum[] | User_subscriptionsScalarFieldEnum
    having?: user_subscriptionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_subscriptionsCountAggregateInputType | true
    _min?: User_subscriptionsMinAggregateInputType
    _max?: User_subscriptionsMaxAggregateInputType
  }

  export type User_subscriptionsGroupByOutputType = {
    id: string
    user_id: string
    subscription_id: string
    start_date: Date
    end_date: Date
    active: boolean
    _count: User_subscriptionsCountAggregateOutputType | null
    _min: User_subscriptionsMinAggregateOutputType | null
    _max: User_subscriptionsMaxAggregateOutputType | null
  }

  type GetUser_subscriptionsGroupByPayload<T extends user_subscriptionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_subscriptionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_subscriptionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_subscriptionsGroupByOutputType[P]>
            : GetScalarType<T[P], User_subscriptionsGroupByOutputType[P]>
        }
      >
    >


  export type user_subscriptionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    subscription_id?: boolean
    start_date?: boolean
    end_date?: boolean
    active?: boolean
    subscriptions?: boolean | subscriptionsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_subscriptions"]>

  export type user_subscriptionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    subscription_id?: boolean
    start_date?: boolean
    end_date?: boolean
    active?: boolean
    subscriptions?: boolean | subscriptionsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_subscriptions"]>

  export type user_subscriptionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    subscription_id?: boolean
    start_date?: boolean
    end_date?: boolean
    active?: boolean
    subscriptions?: boolean | subscriptionsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_subscriptions"]>

  export type user_subscriptionsSelectScalar = {
    id?: boolean
    user_id?: boolean
    subscription_id?: boolean
    start_date?: boolean
    end_date?: boolean
    active?: boolean
  }

  export type user_subscriptionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "subscription_id" | "start_date" | "end_date" | "active", ExtArgs["result"]["user_subscriptions"]>
  export type user_subscriptionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscriptions?: boolean | subscriptionsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_subscriptionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscriptions?: boolean | subscriptionsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_subscriptionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscriptions?: boolean | subscriptionsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $user_subscriptionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_subscriptions"
    objects: {
      subscriptions: Prisma.$subscriptionsPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      subscription_id: string
      start_date: Date
      end_date: Date
      active: boolean
    }, ExtArgs["result"]["user_subscriptions"]>
    composites: {}
  }

  type user_subscriptionsGetPayload<S extends boolean | null | undefined | user_subscriptionsDefaultArgs> = $Result.GetResult<Prisma.$user_subscriptionsPayload, S>

  type user_subscriptionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_subscriptionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_subscriptionsCountAggregateInputType | true
    }

  export interface user_subscriptionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_subscriptions'], meta: { name: 'user_subscriptions' } }
    /**
     * Find zero or one User_subscriptions that matches the filter.
     * @param {user_subscriptionsFindUniqueArgs} args - Arguments to find a User_subscriptions
     * @example
     * // Get one User_subscriptions
     * const user_subscriptions = await prisma.user_subscriptions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_subscriptionsFindUniqueArgs>(args: SelectSubset<T, user_subscriptionsFindUniqueArgs<ExtArgs>>): Prisma__user_subscriptionsClient<$Result.GetResult<Prisma.$user_subscriptionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_subscriptions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_subscriptionsFindUniqueOrThrowArgs} args - Arguments to find a User_subscriptions
     * @example
     * // Get one User_subscriptions
     * const user_subscriptions = await prisma.user_subscriptions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_subscriptionsFindUniqueOrThrowArgs>(args: SelectSubset<T, user_subscriptionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_subscriptionsClient<$Result.GetResult<Prisma.$user_subscriptionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_subscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_subscriptionsFindFirstArgs} args - Arguments to find a User_subscriptions
     * @example
     * // Get one User_subscriptions
     * const user_subscriptions = await prisma.user_subscriptions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_subscriptionsFindFirstArgs>(args?: SelectSubset<T, user_subscriptionsFindFirstArgs<ExtArgs>>): Prisma__user_subscriptionsClient<$Result.GetResult<Prisma.$user_subscriptionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_subscriptions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_subscriptionsFindFirstOrThrowArgs} args - Arguments to find a User_subscriptions
     * @example
     * // Get one User_subscriptions
     * const user_subscriptions = await prisma.user_subscriptions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_subscriptionsFindFirstOrThrowArgs>(args?: SelectSubset<T, user_subscriptionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_subscriptionsClient<$Result.GetResult<Prisma.$user_subscriptionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_subscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_subscriptionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_subscriptions
     * const user_subscriptions = await prisma.user_subscriptions.findMany()
     * 
     * // Get first 10 User_subscriptions
     * const user_subscriptions = await prisma.user_subscriptions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_subscriptionsWithIdOnly = await prisma.user_subscriptions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_subscriptionsFindManyArgs>(args?: SelectSubset<T, user_subscriptionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_subscriptionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_subscriptions.
     * @param {user_subscriptionsCreateArgs} args - Arguments to create a User_subscriptions.
     * @example
     * // Create one User_subscriptions
     * const User_subscriptions = await prisma.user_subscriptions.create({
     *   data: {
     *     // ... data to create a User_subscriptions
     *   }
     * })
     * 
     */
    create<T extends user_subscriptionsCreateArgs>(args: SelectSubset<T, user_subscriptionsCreateArgs<ExtArgs>>): Prisma__user_subscriptionsClient<$Result.GetResult<Prisma.$user_subscriptionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_subscriptions.
     * @param {user_subscriptionsCreateManyArgs} args - Arguments to create many User_subscriptions.
     * @example
     * // Create many User_subscriptions
     * const user_subscriptions = await prisma.user_subscriptions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_subscriptionsCreateManyArgs>(args?: SelectSubset<T, user_subscriptionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_subscriptions and returns the data saved in the database.
     * @param {user_subscriptionsCreateManyAndReturnArgs} args - Arguments to create many User_subscriptions.
     * @example
     * // Create many User_subscriptions
     * const user_subscriptions = await prisma.user_subscriptions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_subscriptions and only return the `id`
     * const user_subscriptionsWithIdOnly = await prisma.user_subscriptions.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_subscriptionsCreateManyAndReturnArgs>(args?: SelectSubset<T, user_subscriptionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_subscriptionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_subscriptions.
     * @param {user_subscriptionsDeleteArgs} args - Arguments to delete one User_subscriptions.
     * @example
     * // Delete one User_subscriptions
     * const User_subscriptions = await prisma.user_subscriptions.delete({
     *   where: {
     *     // ... filter to delete one User_subscriptions
     *   }
     * })
     * 
     */
    delete<T extends user_subscriptionsDeleteArgs>(args: SelectSubset<T, user_subscriptionsDeleteArgs<ExtArgs>>): Prisma__user_subscriptionsClient<$Result.GetResult<Prisma.$user_subscriptionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_subscriptions.
     * @param {user_subscriptionsUpdateArgs} args - Arguments to update one User_subscriptions.
     * @example
     * // Update one User_subscriptions
     * const user_subscriptions = await prisma.user_subscriptions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_subscriptionsUpdateArgs>(args: SelectSubset<T, user_subscriptionsUpdateArgs<ExtArgs>>): Prisma__user_subscriptionsClient<$Result.GetResult<Prisma.$user_subscriptionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_subscriptions.
     * @param {user_subscriptionsDeleteManyArgs} args - Arguments to filter User_subscriptions to delete.
     * @example
     * // Delete a few User_subscriptions
     * const { count } = await prisma.user_subscriptions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_subscriptionsDeleteManyArgs>(args?: SelectSubset<T, user_subscriptionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_subscriptionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_subscriptions
     * const user_subscriptions = await prisma.user_subscriptions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_subscriptionsUpdateManyArgs>(args: SelectSubset<T, user_subscriptionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_subscriptions and returns the data updated in the database.
     * @param {user_subscriptionsUpdateManyAndReturnArgs} args - Arguments to update many User_subscriptions.
     * @example
     * // Update many User_subscriptions
     * const user_subscriptions = await prisma.user_subscriptions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_subscriptions and only return the `id`
     * const user_subscriptionsWithIdOnly = await prisma.user_subscriptions.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_subscriptionsUpdateManyAndReturnArgs>(args: SelectSubset<T, user_subscriptionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_subscriptionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_subscriptions.
     * @param {user_subscriptionsUpsertArgs} args - Arguments to update or create a User_subscriptions.
     * @example
     * // Update or create a User_subscriptions
     * const user_subscriptions = await prisma.user_subscriptions.upsert({
     *   create: {
     *     // ... data to create a User_subscriptions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_subscriptions we want to update
     *   }
     * })
     */
    upsert<T extends user_subscriptionsUpsertArgs>(args: SelectSubset<T, user_subscriptionsUpsertArgs<ExtArgs>>): Prisma__user_subscriptionsClient<$Result.GetResult<Prisma.$user_subscriptionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_subscriptionsCountArgs} args - Arguments to filter User_subscriptions to count.
     * @example
     * // Count the number of User_subscriptions
     * const count = await prisma.user_subscriptions.count({
     *   where: {
     *     // ... the filter for the User_subscriptions we want to count
     *   }
     * })
    **/
    count<T extends user_subscriptionsCountArgs>(
      args?: Subset<T, user_subscriptionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_subscriptionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_subscriptionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_subscriptionsAggregateArgs>(args: Subset<T, User_subscriptionsAggregateArgs>): Prisma.PrismaPromise<GetUser_subscriptionsAggregateType<T>>

    /**
     * Group by User_subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_subscriptionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_subscriptionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_subscriptionsGroupByArgs['orderBy'] }
        : { orderBy?: user_subscriptionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_subscriptionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_subscriptionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_subscriptions model
   */
  readonly fields: user_subscriptionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_subscriptions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_subscriptionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    subscriptions<T extends subscriptionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, subscriptionsDefaultArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_subscriptions model
   */
  interface user_subscriptionsFieldRefs {
    readonly id: FieldRef<"user_subscriptions", 'String'>
    readonly user_id: FieldRef<"user_subscriptions", 'String'>
    readonly subscription_id: FieldRef<"user_subscriptions", 'String'>
    readonly start_date: FieldRef<"user_subscriptions", 'DateTime'>
    readonly end_date: FieldRef<"user_subscriptions", 'DateTime'>
    readonly active: FieldRef<"user_subscriptions", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * user_subscriptions findUnique
   */
  export type user_subscriptionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_subscriptions
     */
    select?: user_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_subscriptions
     */
    omit?: user_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which user_subscriptions to fetch.
     */
    where: user_subscriptionsWhereUniqueInput
  }

  /**
   * user_subscriptions findUniqueOrThrow
   */
  export type user_subscriptionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_subscriptions
     */
    select?: user_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_subscriptions
     */
    omit?: user_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which user_subscriptions to fetch.
     */
    where: user_subscriptionsWhereUniqueInput
  }

  /**
   * user_subscriptions findFirst
   */
  export type user_subscriptionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_subscriptions
     */
    select?: user_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_subscriptions
     */
    omit?: user_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which user_subscriptions to fetch.
     */
    where?: user_subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_subscriptions to fetch.
     */
    orderBy?: user_subscriptionsOrderByWithRelationInput | user_subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_subscriptions.
     */
    cursor?: user_subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_subscriptions.
     */
    distinct?: User_subscriptionsScalarFieldEnum | User_subscriptionsScalarFieldEnum[]
  }

  /**
   * user_subscriptions findFirstOrThrow
   */
  export type user_subscriptionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_subscriptions
     */
    select?: user_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_subscriptions
     */
    omit?: user_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which user_subscriptions to fetch.
     */
    where?: user_subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_subscriptions to fetch.
     */
    orderBy?: user_subscriptionsOrderByWithRelationInput | user_subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_subscriptions.
     */
    cursor?: user_subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_subscriptions.
     */
    distinct?: User_subscriptionsScalarFieldEnum | User_subscriptionsScalarFieldEnum[]
  }

  /**
   * user_subscriptions findMany
   */
  export type user_subscriptionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_subscriptions
     */
    select?: user_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_subscriptions
     */
    omit?: user_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which user_subscriptions to fetch.
     */
    where?: user_subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_subscriptions to fetch.
     */
    orderBy?: user_subscriptionsOrderByWithRelationInput | user_subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_subscriptions.
     */
    cursor?: user_subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_subscriptions.
     */
    skip?: number
    distinct?: User_subscriptionsScalarFieldEnum | User_subscriptionsScalarFieldEnum[]
  }

  /**
   * user_subscriptions create
   */
  export type user_subscriptionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_subscriptions
     */
    select?: user_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_subscriptions
     */
    omit?: user_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_subscriptionsInclude<ExtArgs> | null
    /**
     * The data needed to create a user_subscriptions.
     */
    data: XOR<user_subscriptionsCreateInput, user_subscriptionsUncheckedCreateInput>
  }

  /**
   * user_subscriptions createMany
   */
  export type user_subscriptionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_subscriptions.
     */
    data: user_subscriptionsCreateManyInput | user_subscriptionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_subscriptions createManyAndReturn
   */
  export type user_subscriptionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_subscriptions
     */
    select?: user_subscriptionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_subscriptions
     */
    omit?: user_subscriptionsOmit<ExtArgs> | null
    /**
     * The data used to create many user_subscriptions.
     */
    data: user_subscriptionsCreateManyInput | user_subscriptionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_subscriptionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_subscriptions update
   */
  export type user_subscriptionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_subscriptions
     */
    select?: user_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_subscriptions
     */
    omit?: user_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_subscriptionsInclude<ExtArgs> | null
    /**
     * The data needed to update a user_subscriptions.
     */
    data: XOR<user_subscriptionsUpdateInput, user_subscriptionsUncheckedUpdateInput>
    /**
     * Choose, which user_subscriptions to update.
     */
    where: user_subscriptionsWhereUniqueInput
  }

  /**
   * user_subscriptions updateMany
   */
  export type user_subscriptionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_subscriptions.
     */
    data: XOR<user_subscriptionsUpdateManyMutationInput, user_subscriptionsUncheckedUpdateManyInput>
    /**
     * Filter which user_subscriptions to update
     */
    where?: user_subscriptionsWhereInput
    /**
     * Limit how many user_subscriptions to update.
     */
    limit?: number
  }

  /**
   * user_subscriptions updateManyAndReturn
   */
  export type user_subscriptionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_subscriptions
     */
    select?: user_subscriptionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_subscriptions
     */
    omit?: user_subscriptionsOmit<ExtArgs> | null
    /**
     * The data used to update user_subscriptions.
     */
    data: XOR<user_subscriptionsUpdateManyMutationInput, user_subscriptionsUncheckedUpdateManyInput>
    /**
     * Filter which user_subscriptions to update
     */
    where?: user_subscriptionsWhereInput
    /**
     * Limit how many user_subscriptions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_subscriptionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_subscriptions upsert
   */
  export type user_subscriptionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_subscriptions
     */
    select?: user_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_subscriptions
     */
    omit?: user_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_subscriptionsInclude<ExtArgs> | null
    /**
     * The filter to search for the user_subscriptions to update in case it exists.
     */
    where: user_subscriptionsWhereUniqueInput
    /**
     * In case the user_subscriptions found by the `where` argument doesn't exist, create a new user_subscriptions with this data.
     */
    create: XOR<user_subscriptionsCreateInput, user_subscriptionsUncheckedCreateInput>
    /**
     * In case the user_subscriptions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_subscriptionsUpdateInput, user_subscriptionsUncheckedUpdateInput>
  }

  /**
   * user_subscriptions delete
   */
  export type user_subscriptionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_subscriptions
     */
    select?: user_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_subscriptions
     */
    omit?: user_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_subscriptionsInclude<ExtArgs> | null
    /**
     * Filter which user_subscriptions to delete.
     */
    where: user_subscriptionsWhereUniqueInput
  }

  /**
   * user_subscriptions deleteMany
   */
  export type user_subscriptionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_subscriptions to delete
     */
    where?: user_subscriptionsWhereInput
    /**
     * Limit how many user_subscriptions to delete.
     */
    limit?: number
  }

  /**
   * user_subscriptions without action
   */
  export type user_subscriptionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_subscriptions
     */
    select?: user_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_subscriptions
     */
    omit?: user_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_subscriptionsInclude<ExtArgs> | null
  }


  /**
   * Model support_requests
   */

  export type AggregateSupport_requests = {
    _count: Support_requestsCountAggregateOutputType | null
    _min: Support_requestsMinAggregateOutputType | null
    _max: Support_requestsMaxAggregateOutputType | null
  }

  export type Support_requestsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    title: string | null
    description: string | null
    created_at: Date | null
    operator_description: string | null
    operator_id: string | null
    updated_at: Date | null
    status: $Enums.SupportStatus | null
  }

  export type Support_requestsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    title: string | null
    description: string | null
    created_at: Date | null
    operator_description: string | null
    operator_id: string | null
    updated_at: Date | null
    status: $Enums.SupportStatus | null
  }

  export type Support_requestsCountAggregateOutputType = {
    id: number
    user_id: number
    title: number
    description: number
    created_at: number
    operator_description: number
    operator_id: number
    updated_at: number
    status: number
    _all: number
  }


  export type Support_requestsMinAggregateInputType = {
    id?: true
    user_id?: true
    title?: true
    description?: true
    created_at?: true
    operator_description?: true
    operator_id?: true
    updated_at?: true
    status?: true
  }

  export type Support_requestsMaxAggregateInputType = {
    id?: true
    user_id?: true
    title?: true
    description?: true
    created_at?: true
    operator_description?: true
    operator_id?: true
    updated_at?: true
    status?: true
  }

  export type Support_requestsCountAggregateInputType = {
    id?: true
    user_id?: true
    title?: true
    description?: true
    created_at?: true
    operator_description?: true
    operator_id?: true
    updated_at?: true
    status?: true
    _all?: true
  }

  export type Support_requestsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which support_requests to aggregate.
     */
    where?: support_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of support_requests to fetch.
     */
    orderBy?: support_requestsOrderByWithRelationInput | support_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: support_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` support_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` support_requests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned support_requests
    **/
    _count?: true | Support_requestsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Support_requestsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Support_requestsMaxAggregateInputType
  }

  export type GetSupport_requestsAggregateType<T extends Support_requestsAggregateArgs> = {
        [P in keyof T & keyof AggregateSupport_requests]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupport_requests[P]>
      : GetScalarType<T[P], AggregateSupport_requests[P]>
  }




  export type support_requestsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: support_requestsWhereInput
    orderBy?: support_requestsOrderByWithAggregationInput | support_requestsOrderByWithAggregationInput[]
    by: Support_requestsScalarFieldEnum[] | Support_requestsScalarFieldEnum
    having?: support_requestsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Support_requestsCountAggregateInputType | true
    _min?: Support_requestsMinAggregateInputType
    _max?: Support_requestsMaxAggregateInputType
  }

  export type Support_requestsGroupByOutputType = {
    id: string
    user_id: string
    title: string
    description: string | null
    created_at: Date | null
    operator_description: string | null
    operator_id: string | null
    updated_at: Date | null
    status: $Enums.SupportStatus
    _count: Support_requestsCountAggregateOutputType | null
    _min: Support_requestsMinAggregateOutputType | null
    _max: Support_requestsMaxAggregateOutputType | null
  }

  type GetSupport_requestsGroupByPayload<T extends support_requestsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Support_requestsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Support_requestsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Support_requestsGroupByOutputType[P]>
            : GetScalarType<T[P], Support_requestsGroupByOutputType[P]>
        }
      >
    >


  export type support_requestsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    operator_description?: boolean
    operator_id?: boolean
    updated_at?: boolean
    status?: boolean
    operator?: boolean | support_requests$operatorArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["support_requests"]>

  export type support_requestsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    operator_description?: boolean
    operator_id?: boolean
    updated_at?: boolean
    status?: boolean
    operator?: boolean | support_requests$operatorArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["support_requests"]>

  export type support_requestsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    operator_description?: boolean
    operator_id?: boolean
    updated_at?: boolean
    status?: boolean
    operator?: boolean | support_requests$operatorArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["support_requests"]>

  export type support_requestsSelectScalar = {
    id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    operator_description?: boolean
    operator_id?: boolean
    updated_at?: boolean
    status?: boolean
  }

  export type support_requestsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "title" | "description" | "created_at" | "operator_description" | "operator_id" | "updated_at" | "status", ExtArgs["result"]["support_requests"]>
  export type support_requestsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operator?: boolean | support_requests$operatorArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type support_requestsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operator?: boolean | support_requests$operatorArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type support_requestsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    operator?: boolean | support_requests$operatorArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $support_requestsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "support_requests"
    objects: {
      operator: Prisma.$staff_membersPayload<ExtArgs> | null
      user: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      title: string
      description: string | null
      created_at: Date | null
      operator_description: string | null
      operator_id: string | null
      updated_at: Date | null
      status: $Enums.SupportStatus
    }, ExtArgs["result"]["support_requests"]>
    composites: {}
  }

  type support_requestsGetPayload<S extends boolean | null | undefined | support_requestsDefaultArgs> = $Result.GetResult<Prisma.$support_requestsPayload, S>

  type support_requestsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<support_requestsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Support_requestsCountAggregateInputType | true
    }

  export interface support_requestsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['support_requests'], meta: { name: 'support_requests' } }
    /**
     * Find zero or one Support_requests that matches the filter.
     * @param {support_requestsFindUniqueArgs} args - Arguments to find a Support_requests
     * @example
     * // Get one Support_requests
     * const support_requests = await prisma.support_requests.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends support_requestsFindUniqueArgs>(args: SelectSubset<T, support_requestsFindUniqueArgs<ExtArgs>>): Prisma__support_requestsClient<$Result.GetResult<Prisma.$support_requestsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Support_requests that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {support_requestsFindUniqueOrThrowArgs} args - Arguments to find a Support_requests
     * @example
     * // Get one Support_requests
     * const support_requests = await prisma.support_requests.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends support_requestsFindUniqueOrThrowArgs>(args: SelectSubset<T, support_requestsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__support_requestsClient<$Result.GetResult<Prisma.$support_requestsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Support_requests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {support_requestsFindFirstArgs} args - Arguments to find a Support_requests
     * @example
     * // Get one Support_requests
     * const support_requests = await prisma.support_requests.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends support_requestsFindFirstArgs>(args?: SelectSubset<T, support_requestsFindFirstArgs<ExtArgs>>): Prisma__support_requestsClient<$Result.GetResult<Prisma.$support_requestsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Support_requests that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {support_requestsFindFirstOrThrowArgs} args - Arguments to find a Support_requests
     * @example
     * // Get one Support_requests
     * const support_requests = await prisma.support_requests.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends support_requestsFindFirstOrThrowArgs>(args?: SelectSubset<T, support_requestsFindFirstOrThrowArgs<ExtArgs>>): Prisma__support_requestsClient<$Result.GetResult<Prisma.$support_requestsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Support_requests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {support_requestsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Support_requests
     * const support_requests = await prisma.support_requests.findMany()
     * 
     * // Get first 10 Support_requests
     * const support_requests = await prisma.support_requests.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const support_requestsWithIdOnly = await prisma.support_requests.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends support_requestsFindManyArgs>(args?: SelectSubset<T, support_requestsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$support_requestsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Support_requests.
     * @param {support_requestsCreateArgs} args - Arguments to create a Support_requests.
     * @example
     * // Create one Support_requests
     * const Support_requests = await prisma.support_requests.create({
     *   data: {
     *     // ... data to create a Support_requests
     *   }
     * })
     * 
     */
    create<T extends support_requestsCreateArgs>(args: SelectSubset<T, support_requestsCreateArgs<ExtArgs>>): Prisma__support_requestsClient<$Result.GetResult<Prisma.$support_requestsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Support_requests.
     * @param {support_requestsCreateManyArgs} args - Arguments to create many Support_requests.
     * @example
     * // Create many Support_requests
     * const support_requests = await prisma.support_requests.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends support_requestsCreateManyArgs>(args?: SelectSubset<T, support_requestsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Support_requests and returns the data saved in the database.
     * @param {support_requestsCreateManyAndReturnArgs} args - Arguments to create many Support_requests.
     * @example
     * // Create many Support_requests
     * const support_requests = await prisma.support_requests.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Support_requests and only return the `id`
     * const support_requestsWithIdOnly = await prisma.support_requests.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends support_requestsCreateManyAndReturnArgs>(args?: SelectSubset<T, support_requestsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$support_requestsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Support_requests.
     * @param {support_requestsDeleteArgs} args - Arguments to delete one Support_requests.
     * @example
     * // Delete one Support_requests
     * const Support_requests = await prisma.support_requests.delete({
     *   where: {
     *     // ... filter to delete one Support_requests
     *   }
     * })
     * 
     */
    delete<T extends support_requestsDeleteArgs>(args: SelectSubset<T, support_requestsDeleteArgs<ExtArgs>>): Prisma__support_requestsClient<$Result.GetResult<Prisma.$support_requestsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Support_requests.
     * @param {support_requestsUpdateArgs} args - Arguments to update one Support_requests.
     * @example
     * // Update one Support_requests
     * const support_requests = await prisma.support_requests.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends support_requestsUpdateArgs>(args: SelectSubset<T, support_requestsUpdateArgs<ExtArgs>>): Prisma__support_requestsClient<$Result.GetResult<Prisma.$support_requestsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Support_requests.
     * @param {support_requestsDeleteManyArgs} args - Arguments to filter Support_requests to delete.
     * @example
     * // Delete a few Support_requests
     * const { count } = await prisma.support_requests.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends support_requestsDeleteManyArgs>(args?: SelectSubset<T, support_requestsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Support_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {support_requestsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Support_requests
     * const support_requests = await prisma.support_requests.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends support_requestsUpdateManyArgs>(args: SelectSubset<T, support_requestsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Support_requests and returns the data updated in the database.
     * @param {support_requestsUpdateManyAndReturnArgs} args - Arguments to update many Support_requests.
     * @example
     * // Update many Support_requests
     * const support_requests = await prisma.support_requests.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Support_requests and only return the `id`
     * const support_requestsWithIdOnly = await prisma.support_requests.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends support_requestsUpdateManyAndReturnArgs>(args: SelectSubset<T, support_requestsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$support_requestsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Support_requests.
     * @param {support_requestsUpsertArgs} args - Arguments to update or create a Support_requests.
     * @example
     * // Update or create a Support_requests
     * const support_requests = await prisma.support_requests.upsert({
     *   create: {
     *     // ... data to create a Support_requests
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Support_requests we want to update
     *   }
     * })
     */
    upsert<T extends support_requestsUpsertArgs>(args: SelectSubset<T, support_requestsUpsertArgs<ExtArgs>>): Prisma__support_requestsClient<$Result.GetResult<Prisma.$support_requestsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Support_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {support_requestsCountArgs} args - Arguments to filter Support_requests to count.
     * @example
     * // Count the number of Support_requests
     * const count = await prisma.support_requests.count({
     *   where: {
     *     // ... the filter for the Support_requests we want to count
     *   }
     * })
    **/
    count<T extends support_requestsCountArgs>(
      args?: Subset<T, support_requestsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Support_requestsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Support_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Support_requestsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Support_requestsAggregateArgs>(args: Subset<T, Support_requestsAggregateArgs>): Prisma.PrismaPromise<GetSupport_requestsAggregateType<T>>

    /**
     * Group by Support_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {support_requestsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends support_requestsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: support_requestsGroupByArgs['orderBy'] }
        : { orderBy?: support_requestsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, support_requestsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupport_requestsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the support_requests model
   */
  readonly fields: support_requestsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for support_requests.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__support_requestsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    operator<T extends support_requests$operatorArgs<ExtArgs> = {}>(args?: Subset<T, support_requests$operatorArgs<ExtArgs>>): Prisma__staff_membersClient<$Result.GetResult<Prisma.$staff_membersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the support_requests model
   */
  interface support_requestsFieldRefs {
    readonly id: FieldRef<"support_requests", 'String'>
    readonly user_id: FieldRef<"support_requests", 'String'>
    readonly title: FieldRef<"support_requests", 'String'>
    readonly description: FieldRef<"support_requests", 'String'>
    readonly created_at: FieldRef<"support_requests", 'DateTime'>
    readonly operator_description: FieldRef<"support_requests", 'String'>
    readonly operator_id: FieldRef<"support_requests", 'String'>
    readonly updated_at: FieldRef<"support_requests", 'DateTime'>
    readonly status: FieldRef<"support_requests", 'SupportStatus'>
  }
    

  // Custom InputTypes
  /**
   * support_requests findUnique
   */
  export type support_requestsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the support_requests
     */
    select?: support_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the support_requests
     */
    omit?: support_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: support_requestsInclude<ExtArgs> | null
    /**
     * Filter, which support_requests to fetch.
     */
    where: support_requestsWhereUniqueInput
  }

  /**
   * support_requests findUniqueOrThrow
   */
  export type support_requestsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the support_requests
     */
    select?: support_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the support_requests
     */
    omit?: support_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: support_requestsInclude<ExtArgs> | null
    /**
     * Filter, which support_requests to fetch.
     */
    where: support_requestsWhereUniqueInput
  }

  /**
   * support_requests findFirst
   */
  export type support_requestsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the support_requests
     */
    select?: support_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the support_requests
     */
    omit?: support_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: support_requestsInclude<ExtArgs> | null
    /**
     * Filter, which support_requests to fetch.
     */
    where?: support_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of support_requests to fetch.
     */
    orderBy?: support_requestsOrderByWithRelationInput | support_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for support_requests.
     */
    cursor?: support_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` support_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` support_requests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of support_requests.
     */
    distinct?: Support_requestsScalarFieldEnum | Support_requestsScalarFieldEnum[]
  }

  /**
   * support_requests findFirstOrThrow
   */
  export type support_requestsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the support_requests
     */
    select?: support_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the support_requests
     */
    omit?: support_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: support_requestsInclude<ExtArgs> | null
    /**
     * Filter, which support_requests to fetch.
     */
    where?: support_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of support_requests to fetch.
     */
    orderBy?: support_requestsOrderByWithRelationInput | support_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for support_requests.
     */
    cursor?: support_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` support_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` support_requests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of support_requests.
     */
    distinct?: Support_requestsScalarFieldEnum | Support_requestsScalarFieldEnum[]
  }

  /**
   * support_requests findMany
   */
  export type support_requestsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the support_requests
     */
    select?: support_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the support_requests
     */
    omit?: support_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: support_requestsInclude<ExtArgs> | null
    /**
     * Filter, which support_requests to fetch.
     */
    where?: support_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of support_requests to fetch.
     */
    orderBy?: support_requestsOrderByWithRelationInput | support_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing support_requests.
     */
    cursor?: support_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` support_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` support_requests.
     */
    skip?: number
    distinct?: Support_requestsScalarFieldEnum | Support_requestsScalarFieldEnum[]
  }

  /**
   * support_requests create
   */
  export type support_requestsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the support_requests
     */
    select?: support_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the support_requests
     */
    omit?: support_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: support_requestsInclude<ExtArgs> | null
    /**
     * The data needed to create a support_requests.
     */
    data: XOR<support_requestsCreateInput, support_requestsUncheckedCreateInput>
  }

  /**
   * support_requests createMany
   */
  export type support_requestsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many support_requests.
     */
    data: support_requestsCreateManyInput | support_requestsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * support_requests createManyAndReturn
   */
  export type support_requestsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the support_requests
     */
    select?: support_requestsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the support_requests
     */
    omit?: support_requestsOmit<ExtArgs> | null
    /**
     * The data used to create many support_requests.
     */
    data: support_requestsCreateManyInput | support_requestsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: support_requestsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * support_requests update
   */
  export type support_requestsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the support_requests
     */
    select?: support_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the support_requests
     */
    omit?: support_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: support_requestsInclude<ExtArgs> | null
    /**
     * The data needed to update a support_requests.
     */
    data: XOR<support_requestsUpdateInput, support_requestsUncheckedUpdateInput>
    /**
     * Choose, which support_requests to update.
     */
    where: support_requestsWhereUniqueInput
  }

  /**
   * support_requests updateMany
   */
  export type support_requestsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update support_requests.
     */
    data: XOR<support_requestsUpdateManyMutationInput, support_requestsUncheckedUpdateManyInput>
    /**
     * Filter which support_requests to update
     */
    where?: support_requestsWhereInput
    /**
     * Limit how many support_requests to update.
     */
    limit?: number
  }

  /**
   * support_requests updateManyAndReturn
   */
  export type support_requestsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the support_requests
     */
    select?: support_requestsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the support_requests
     */
    omit?: support_requestsOmit<ExtArgs> | null
    /**
     * The data used to update support_requests.
     */
    data: XOR<support_requestsUpdateManyMutationInput, support_requestsUncheckedUpdateManyInput>
    /**
     * Filter which support_requests to update
     */
    where?: support_requestsWhereInput
    /**
     * Limit how many support_requests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: support_requestsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * support_requests upsert
   */
  export type support_requestsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the support_requests
     */
    select?: support_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the support_requests
     */
    omit?: support_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: support_requestsInclude<ExtArgs> | null
    /**
     * The filter to search for the support_requests to update in case it exists.
     */
    where: support_requestsWhereUniqueInput
    /**
     * In case the support_requests found by the `where` argument doesn't exist, create a new support_requests with this data.
     */
    create: XOR<support_requestsCreateInput, support_requestsUncheckedCreateInput>
    /**
     * In case the support_requests was found with the provided `where` argument, update it with this data.
     */
    update: XOR<support_requestsUpdateInput, support_requestsUncheckedUpdateInput>
  }

  /**
   * support_requests delete
   */
  export type support_requestsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the support_requests
     */
    select?: support_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the support_requests
     */
    omit?: support_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: support_requestsInclude<ExtArgs> | null
    /**
     * Filter which support_requests to delete.
     */
    where: support_requestsWhereUniqueInput
  }

  /**
   * support_requests deleteMany
   */
  export type support_requestsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which support_requests to delete
     */
    where?: support_requestsWhereInput
    /**
     * Limit how many support_requests to delete.
     */
    limit?: number
  }

  /**
   * support_requests.operator
   */
  export type support_requests$operatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_members
     */
    select?: staff_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_members
     */
    omit?: staff_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_membersInclude<ExtArgs> | null
    where?: staff_membersWhereInput
  }

  /**
   * support_requests without action
   */
  export type support_requestsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the support_requests
     */
    select?: support_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the support_requests
     */
    omit?: support_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: support_requestsInclude<ExtArgs> | null
  }


  /**
   * Model promocodes
   */

  export type AggregatePromocodes = {
    _count: PromocodesCountAggregateOutputType | null
    _avg: PromocodesAvgAggregateOutputType | null
    _sum: PromocodesSumAggregateOutputType | null
    _min: PromocodesMinAggregateOutputType | null
    _max: PromocodesMaxAggregateOutputType | null
  }

  export type PromocodesAvgAggregateOutputType = {
    denomination: number | null
  }

  export type PromocodesSumAggregateOutputType = {
    denomination: number | null
  }

  export type PromocodesMinAggregateOutputType = {
    id: string | null
    code: string | null
    expires_at: Date | null
    denomination: number | null
    type: string | null
  }

  export type PromocodesMaxAggregateOutputType = {
    id: string | null
    code: string | null
    expires_at: Date | null
    denomination: number | null
    type: string | null
  }

  export type PromocodesCountAggregateOutputType = {
    id: number
    code: number
    expires_at: number
    denomination: number
    type: number
    _all: number
  }


  export type PromocodesAvgAggregateInputType = {
    denomination?: true
  }

  export type PromocodesSumAggregateInputType = {
    denomination?: true
  }

  export type PromocodesMinAggregateInputType = {
    id?: true
    code?: true
    expires_at?: true
    denomination?: true
    type?: true
  }

  export type PromocodesMaxAggregateInputType = {
    id?: true
    code?: true
    expires_at?: true
    denomination?: true
    type?: true
  }

  export type PromocodesCountAggregateInputType = {
    id?: true
    code?: true
    expires_at?: true
    denomination?: true
    type?: true
    _all?: true
  }

  export type PromocodesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which promocodes to aggregate.
     */
    where?: promocodesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promocodes to fetch.
     */
    orderBy?: promocodesOrderByWithRelationInput | promocodesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: promocodesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promocodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promocodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned promocodes
    **/
    _count?: true | PromocodesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromocodesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromocodesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromocodesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromocodesMaxAggregateInputType
  }

  export type GetPromocodesAggregateType<T extends PromocodesAggregateArgs> = {
        [P in keyof T & keyof AggregatePromocodes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromocodes[P]>
      : GetScalarType<T[P], AggregatePromocodes[P]>
  }




  export type promocodesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: promocodesWhereInput
    orderBy?: promocodesOrderByWithAggregationInput | promocodesOrderByWithAggregationInput[]
    by: PromocodesScalarFieldEnum[] | PromocodesScalarFieldEnum
    having?: promocodesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromocodesCountAggregateInputType | true
    _avg?: PromocodesAvgAggregateInputType
    _sum?: PromocodesSumAggregateInputType
    _min?: PromocodesMinAggregateInputType
    _max?: PromocodesMaxAggregateInputType
  }

  export type PromocodesGroupByOutputType = {
    id: string
    code: string
    expires_at: Date | null
    denomination: number
    type: string
    _count: PromocodesCountAggregateOutputType | null
    _avg: PromocodesAvgAggregateOutputType | null
    _sum: PromocodesSumAggregateOutputType | null
    _min: PromocodesMinAggregateOutputType | null
    _max: PromocodesMaxAggregateOutputType | null
  }

  type GetPromocodesGroupByPayload<T extends promocodesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromocodesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromocodesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromocodesGroupByOutputType[P]>
            : GetScalarType<T[P], PromocodesGroupByOutputType[P]>
        }
      >
    >


  export type promocodesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    expires_at?: boolean
    denomination?: boolean
    type?: boolean
    promo_usage?: boolean | promocodes$promo_usageArgs<ExtArgs>
    _count?: boolean | PromocodesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promocodes"]>

  export type promocodesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    expires_at?: boolean
    denomination?: boolean
    type?: boolean
  }, ExtArgs["result"]["promocodes"]>

  export type promocodesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    expires_at?: boolean
    denomination?: boolean
    type?: boolean
  }, ExtArgs["result"]["promocodes"]>

  export type promocodesSelectScalar = {
    id?: boolean
    code?: boolean
    expires_at?: boolean
    denomination?: boolean
    type?: boolean
  }

  export type promocodesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "code" | "expires_at" | "denomination" | "type", ExtArgs["result"]["promocodes"]>
  export type promocodesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promo_usage?: boolean | promocodes$promo_usageArgs<ExtArgs>
    _count?: boolean | PromocodesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type promocodesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type promocodesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $promocodesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "promocodes"
    objects: {
      promo_usage: Prisma.$promo_usagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      code: string
      expires_at: Date | null
      denomination: number
      type: string
    }, ExtArgs["result"]["promocodes"]>
    composites: {}
  }

  type promocodesGetPayload<S extends boolean | null | undefined | promocodesDefaultArgs> = $Result.GetResult<Prisma.$promocodesPayload, S>

  type promocodesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<promocodesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PromocodesCountAggregateInputType | true
    }

  export interface promocodesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['promocodes'], meta: { name: 'promocodes' } }
    /**
     * Find zero or one Promocodes that matches the filter.
     * @param {promocodesFindUniqueArgs} args - Arguments to find a Promocodes
     * @example
     * // Get one Promocodes
     * const promocodes = await prisma.promocodes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends promocodesFindUniqueArgs>(args: SelectSubset<T, promocodesFindUniqueArgs<ExtArgs>>): Prisma__promocodesClient<$Result.GetResult<Prisma.$promocodesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Promocodes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {promocodesFindUniqueOrThrowArgs} args - Arguments to find a Promocodes
     * @example
     * // Get one Promocodes
     * const promocodes = await prisma.promocodes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends promocodesFindUniqueOrThrowArgs>(args: SelectSubset<T, promocodesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__promocodesClient<$Result.GetResult<Prisma.$promocodesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promocodes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocodesFindFirstArgs} args - Arguments to find a Promocodes
     * @example
     * // Get one Promocodes
     * const promocodes = await prisma.promocodes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends promocodesFindFirstArgs>(args?: SelectSubset<T, promocodesFindFirstArgs<ExtArgs>>): Prisma__promocodesClient<$Result.GetResult<Prisma.$promocodesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promocodes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocodesFindFirstOrThrowArgs} args - Arguments to find a Promocodes
     * @example
     * // Get one Promocodes
     * const promocodes = await prisma.promocodes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends promocodesFindFirstOrThrowArgs>(args?: SelectSubset<T, promocodesFindFirstOrThrowArgs<ExtArgs>>): Prisma__promocodesClient<$Result.GetResult<Prisma.$promocodesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Promocodes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocodesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Promocodes
     * const promocodes = await prisma.promocodes.findMany()
     * 
     * // Get first 10 Promocodes
     * const promocodes = await prisma.promocodes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promocodesWithIdOnly = await prisma.promocodes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends promocodesFindManyArgs>(args?: SelectSubset<T, promocodesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$promocodesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Promocodes.
     * @param {promocodesCreateArgs} args - Arguments to create a Promocodes.
     * @example
     * // Create one Promocodes
     * const Promocodes = await prisma.promocodes.create({
     *   data: {
     *     // ... data to create a Promocodes
     *   }
     * })
     * 
     */
    create<T extends promocodesCreateArgs>(args: SelectSubset<T, promocodesCreateArgs<ExtArgs>>): Prisma__promocodesClient<$Result.GetResult<Prisma.$promocodesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Promocodes.
     * @param {promocodesCreateManyArgs} args - Arguments to create many Promocodes.
     * @example
     * // Create many Promocodes
     * const promocodes = await prisma.promocodes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends promocodesCreateManyArgs>(args?: SelectSubset<T, promocodesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Promocodes and returns the data saved in the database.
     * @param {promocodesCreateManyAndReturnArgs} args - Arguments to create many Promocodes.
     * @example
     * // Create many Promocodes
     * const promocodes = await prisma.promocodes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Promocodes and only return the `id`
     * const promocodesWithIdOnly = await prisma.promocodes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends promocodesCreateManyAndReturnArgs>(args?: SelectSubset<T, promocodesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$promocodesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Promocodes.
     * @param {promocodesDeleteArgs} args - Arguments to delete one Promocodes.
     * @example
     * // Delete one Promocodes
     * const Promocodes = await prisma.promocodes.delete({
     *   where: {
     *     // ... filter to delete one Promocodes
     *   }
     * })
     * 
     */
    delete<T extends promocodesDeleteArgs>(args: SelectSubset<T, promocodesDeleteArgs<ExtArgs>>): Prisma__promocodesClient<$Result.GetResult<Prisma.$promocodesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Promocodes.
     * @param {promocodesUpdateArgs} args - Arguments to update one Promocodes.
     * @example
     * // Update one Promocodes
     * const promocodes = await prisma.promocodes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends promocodesUpdateArgs>(args: SelectSubset<T, promocodesUpdateArgs<ExtArgs>>): Prisma__promocodesClient<$Result.GetResult<Prisma.$promocodesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Promocodes.
     * @param {promocodesDeleteManyArgs} args - Arguments to filter Promocodes to delete.
     * @example
     * // Delete a few Promocodes
     * const { count } = await prisma.promocodes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends promocodesDeleteManyArgs>(args?: SelectSubset<T, promocodesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promocodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocodesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Promocodes
     * const promocodes = await prisma.promocodes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends promocodesUpdateManyArgs>(args: SelectSubset<T, promocodesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promocodes and returns the data updated in the database.
     * @param {promocodesUpdateManyAndReturnArgs} args - Arguments to update many Promocodes.
     * @example
     * // Update many Promocodes
     * const promocodes = await prisma.promocodes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Promocodes and only return the `id`
     * const promocodesWithIdOnly = await prisma.promocodes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends promocodesUpdateManyAndReturnArgs>(args: SelectSubset<T, promocodesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$promocodesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Promocodes.
     * @param {promocodesUpsertArgs} args - Arguments to update or create a Promocodes.
     * @example
     * // Update or create a Promocodes
     * const promocodes = await prisma.promocodes.upsert({
     *   create: {
     *     // ... data to create a Promocodes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Promocodes we want to update
     *   }
     * })
     */
    upsert<T extends promocodesUpsertArgs>(args: SelectSubset<T, promocodesUpsertArgs<ExtArgs>>): Prisma__promocodesClient<$Result.GetResult<Prisma.$promocodesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Promocodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocodesCountArgs} args - Arguments to filter Promocodes to count.
     * @example
     * // Count the number of Promocodes
     * const count = await prisma.promocodes.count({
     *   where: {
     *     // ... the filter for the Promocodes we want to count
     *   }
     * })
    **/
    count<T extends promocodesCountArgs>(
      args?: Subset<T, promocodesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromocodesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Promocodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromocodesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromocodesAggregateArgs>(args: Subset<T, PromocodesAggregateArgs>): Prisma.PrismaPromise<GetPromocodesAggregateType<T>>

    /**
     * Group by Promocodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocodesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends promocodesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: promocodesGroupByArgs['orderBy'] }
        : { orderBy?: promocodesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, promocodesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromocodesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the promocodes model
   */
  readonly fields: promocodesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for promocodes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__promocodesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    promo_usage<T extends promocodes$promo_usageArgs<ExtArgs> = {}>(args?: Subset<T, promocodes$promo_usageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$promo_usagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the promocodes model
   */
  interface promocodesFieldRefs {
    readonly id: FieldRef<"promocodes", 'String'>
    readonly code: FieldRef<"promocodes", 'String'>
    readonly expires_at: FieldRef<"promocodes", 'DateTime'>
    readonly denomination: FieldRef<"promocodes", 'Int'>
    readonly type: FieldRef<"promocodes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * promocodes findUnique
   */
  export type promocodesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocodes
     */
    select?: promocodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocodes
     */
    omit?: promocodesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promocodesInclude<ExtArgs> | null
    /**
     * Filter, which promocodes to fetch.
     */
    where: promocodesWhereUniqueInput
  }

  /**
   * promocodes findUniqueOrThrow
   */
  export type promocodesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocodes
     */
    select?: promocodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocodes
     */
    omit?: promocodesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promocodesInclude<ExtArgs> | null
    /**
     * Filter, which promocodes to fetch.
     */
    where: promocodesWhereUniqueInput
  }

  /**
   * promocodes findFirst
   */
  export type promocodesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocodes
     */
    select?: promocodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocodes
     */
    omit?: promocodesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promocodesInclude<ExtArgs> | null
    /**
     * Filter, which promocodes to fetch.
     */
    where?: promocodesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promocodes to fetch.
     */
    orderBy?: promocodesOrderByWithRelationInput | promocodesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for promocodes.
     */
    cursor?: promocodesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promocodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promocodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of promocodes.
     */
    distinct?: PromocodesScalarFieldEnum | PromocodesScalarFieldEnum[]
  }

  /**
   * promocodes findFirstOrThrow
   */
  export type promocodesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocodes
     */
    select?: promocodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocodes
     */
    omit?: promocodesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promocodesInclude<ExtArgs> | null
    /**
     * Filter, which promocodes to fetch.
     */
    where?: promocodesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promocodes to fetch.
     */
    orderBy?: promocodesOrderByWithRelationInput | promocodesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for promocodes.
     */
    cursor?: promocodesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promocodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promocodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of promocodes.
     */
    distinct?: PromocodesScalarFieldEnum | PromocodesScalarFieldEnum[]
  }

  /**
   * promocodes findMany
   */
  export type promocodesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocodes
     */
    select?: promocodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocodes
     */
    omit?: promocodesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promocodesInclude<ExtArgs> | null
    /**
     * Filter, which promocodes to fetch.
     */
    where?: promocodesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promocodes to fetch.
     */
    orderBy?: promocodesOrderByWithRelationInput | promocodesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing promocodes.
     */
    cursor?: promocodesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promocodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promocodes.
     */
    skip?: number
    distinct?: PromocodesScalarFieldEnum | PromocodesScalarFieldEnum[]
  }

  /**
   * promocodes create
   */
  export type promocodesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocodes
     */
    select?: promocodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocodes
     */
    omit?: promocodesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promocodesInclude<ExtArgs> | null
    /**
     * The data needed to create a promocodes.
     */
    data: XOR<promocodesCreateInput, promocodesUncheckedCreateInput>
  }

  /**
   * promocodes createMany
   */
  export type promocodesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many promocodes.
     */
    data: promocodesCreateManyInput | promocodesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * promocodes createManyAndReturn
   */
  export type promocodesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocodes
     */
    select?: promocodesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the promocodes
     */
    omit?: promocodesOmit<ExtArgs> | null
    /**
     * The data used to create many promocodes.
     */
    data: promocodesCreateManyInput | promocodesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * promocodes update
   */
  export type promocodesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocodes
     */
    select?: promocodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocodes
     */
    omit?: promocodesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promocodesInclude<ExtArgs> | null
    /**
     * The data needed to update a promocodes.
     */
    data: XOR<promocodesUpdateInput, promocodesUncheckedUpdateInput>
    /**
     * Choose, which promocodes to update.
     */
    where: promocodesWhereUniqueInput
  }

  /**
   * promocodes updateMany
   */
  export type promocodesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update promocodes.
     */
    data: XOR<promocodesUpdateManyMutationInput, promocodesUncheckedUpdateManyInput>
    /**
     * Filter which promocodes to update
     */
    where?: promocodesWhereInput
    /**
     * Limit how many promocodes to update.
     */
    limit?: number
  }

  /**
   * promocodes updateManyAndReturn
   */
  export type promocodesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocodes
     */
    select?: promocodesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the promocodes
     */
    omit?: promocodesOmit<ExtArgs> | null
    /**
     * The data used to update promocodes.
     */
    data: XOR<promocodesUpdateManyMutationInput, promocodesUncheckedUpdateManyInput>
    /**
     * Filter which promocodes to update
     */
    where?: promocodesWhereInput
    /**
     * Limit how many promocodes to update.
     */
    limit?: number
  }

  /**
   * promocodes upsert
   */
  export type promocodesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocodes
     */
    select?: promocodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocodes
     */
    omit?: promocodesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promocodesInclude<ExtArgs> | null
    /**
     * The filter to search for the promocodes to update in case it exists.
     */
    where: promocodesWhereUniqueInput
    /**
     * In case the promocodes found by the `where` argument doesn't exist, create a new promocodes with this data.
     */
    create: XOR<promocodesCreateInput, promocodesUncheckedCreateInput>
    /**
     * In case the promocodes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<promocodesUpdateInput, promocodesUncheckedUpdateInput>
  }

  /**
   * promocodes delete
   */
  export type promocodesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocodes
     */
    select?: promocodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocodes
     */
    omit?: promocodesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promocodesInclude<ExtArgs> | null
    /**
     * Filter which promocodes to delete.
     */
    where: promocodesWhereUniqueInput
  }

  /**
   * promocodes deleteMany
   */
  export type promocodesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which promocodes to delete
     */
    where?: promocodesWhereInput
    /**
     * Limit how many promocodes to delete.
     */
    limit?: number
  }

  /**
   * promocodes.promo_usage
   */
  export type promocodes$promo_usageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promo_usage
     */
    select?: promo_usageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promo_usage
     */
    omit?: promo_usageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promo_usageInclude<ExtArgs> | null
    where?: promo_usageWhereInput
    orderBy?: promo_usageOrderByWithRelationInput | promo_usageOrderByWithRelationInput[]
    cursor?: promo_usageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Promo_usageScalarFieldEnum | Promo_usageScalarFieldEnum[]
  }

  /**
   * promocodes without action
   */
  export type promocodesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocodes
     */
    select?: promocodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocodes
     */
    omit?: promocodesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promocodesInclude<ExtArgs> | null
  }


  /**
   * Model promo_usage
   */

  export type AggregatePromo_usage = {
    _count: Promo_usageCountAggregateOutputType | null
    _min: Promo_usageMinAggregateOutputType | null
    _max: Promo_usageMaxAggregateOutputType | null
  }

  export type Promo_usageMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    promocode_id: string | null
    used_at: Date | null
  }

  export type Promo_usageMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    promocode_id: string | null
    used_at: Date | null
  }

  export type Promo_usageCountAggregateOutputType = {
    id: number
    user_id: number
    promocode_id: number
    used_at: number
    _all: number
  }


  export type Promo_usageMinAggregateInputType = {
    id?: true
    user_id?: true
    promocode_id?: true
    used_at?: true
  }

  export type Promo_usageMaxAggregateInputType = {
    id?: true
    user_id?: true
    promocode_id?: true
    used_at?: true
  }

  export type Promo_usageCountAggregateInputType = {
    id?: true
    user_id?: true
    promocode_id?: true
    used_at?: true
    _all?: true
  }

  export type Promo_usageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which promo_usage to aggregate.
     */
    where?: promo_usageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promo_usages to fetch.
     */
    orderBy?: promo_usageOrderByWithRelationInput | promo_usageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: promo_usageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promo_usages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promo_usages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned promo_usages
    **/
    _count?: true | Promo_usageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Promo_usageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Promo_usageMaxAggregateInputType
  }

  export type GetPromo_usageAggregateType<T extends Promo_usageAggregateArgs> = {
        [P in keyof T & keyof AggregatePromo_usage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromo_usage[P]>
      : GetScalarType<T[P], AggregatePromo_usage[P]>
  }




  export type promo_usageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: promo_usageWhereInput
    orderBy?: promo_usageOrderByWithAggregationInput | promo_usageOrderByWithAggregationInput[]
    by: Promo_usageScalarFieldEnum[] | Promo_usageScalarFieldEnum
    having?: promo_usageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Promo_usageCountAggregateInputType | true
    _min?: Promo_usageMinAggregateInputType
    _max?: Promo_usageMaxAggregateInputType
  }

  export type Promo_usageGroupByOutputType = {
    id: string
    user_id: string
    promocode_id: string
    used_at: Date | null
    _count: Promo_usageCountAggregateOutputType | null
    _min: Promo_usageMinAggregateOutputType | null
    _max: Promo_usageMaxAggregateOutputType | null
  }

  type GetPromo_usageGroupByPayload<T extends promo_usageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Promo_usageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Promo_usageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Promo_usageGroupByOutputType[P]>
            : GetScalarType<T[P], Promo_usageGroupByOutputType[P]>
        }
      >
    >


  export type promo_usageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    promocode_id?: boolean
    used_at?: boolean
    promocodes?: boolean | promocodesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promo_usage"]>

  export type promo_usageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    promocode_id?: boolean
    used_at?: boolean
    promocodes?: boolean | promocodesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promo_usage"]>

  export type promo_usageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    promocode_id?: boolean
    used_at?: boolean
    promocodes?: boolean | promocodesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promo_usage"]>

  export type promo_usageSelectScalar = {
    id?: boolean
    user_id?: boolean
    promocode_id?: boolean
    used_at?: boolean
  }

  export type promo_usageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "promocode_id" | "used_at", ExtArgs["result"]["promo_usage"]>
  export type promo_usageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promocodes?: boolean | promocodesDefaultArgs<ExtArgs>
  }
  export type promo_usageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promocodes?: boolean | promocodesDefaultArgs<ExtArgs>
  }
  export type promo_usageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promocodes?: boolean | promocodesDefaultArgs<ExtArgs>
  }

  export type $promo_usagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "promo_usage"
    objects: {
      promocodes: Prisma.$promocodesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      promocode_id: string
      used_at: Date | null
    }, ExtArgs["result"]["promo_usage"]>
    composites: {}
  }

  type promo_usageGetPayload<S extends boolean | null | undefined | promo_usageDefaultArgs> = $Result.GetResult<Prisma.$promo_usagePayload, S>

  type promo_usageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<promo_usageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Promo_usageCountAggregateInputType | true
    }

  export interface promo_usageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['promo_usage'], meta: { name: 'promo_usage' } }
    /**
     * Find zero or one Promo_usage that matches the filter.
     * @param {promo_usageFindUniqueArgs} args - Arguments to find a Promo_usage
     * @example
     * // Get one Promo_usage
     * const promo_usage = await prisma.promo_usage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends promo_usageFindUniqueArgs>(args: SelectSubset<T, promo_usageFindUniqueArgs<ExtArgs>>): Prisma__promo_usageClient<$Result.GetResult<Prisma.$promo_usagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Promo_usage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {promo_usageFindUniqueOrThrowArgs} args - Arguments to find a Promo_usage
     * @example
     * // Get one Promo_usage
     * const promo_usage = await prisma.promo_usage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends promo_usageFindUniqueOrThrowArgs>(args: SelectSubset<T, promo_usageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__promo_usageClient<$Result.GetResult<Prisma.$promo_usagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promo_usage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promo_usageFindFirstArgs} args - Arguments to find a Promo_usage
     * @example
     * // Get one Promo_usage
     * const promo_usage = await prisma.promo_usage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends promo_usageFindFirstArgs>(args?: SelectSubset<T, promo_usageFindFirstArgs<ExtArgs>>): Prisma__promo_usageClient<$Result.GetResult<Prisma.$promo_usagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promo_usage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promo_usageFindFirstOrThrowArgs} args - Arguments to find a Promo_usage
     * @example
     * // Get one Promo_usage
     * const promo_usage = await prisma.promo_usage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends promo_usageFindFirstOrThrowArgs>(args?: SelectSubset<T, promo_usageFindFirstOrThrowArgs<ExtArgs>>): Prisma__promo_usageClient<$Result.GetResult<Prisma.$promo_usagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Promo_usages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promo_usageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Promo_usages
     * const promo_usages = await prisma.promo_usage.findMany()
     * 
     * // Get first 10 Promo_usages
     * const promo_usages = await prisma.promo_usage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promo_usageWithIdOnly = await prisma.promo_usage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends promo_usageFindManyArgs>(args?: SelectSubset<T, promo_usageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$promo_usagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Promo_usage.
     * @param {promo_usageCreateArgs} args - Arguments to create a Promo_usage.
     * @example
     * // Create one Promo_usage
     * const Promo_usage = await prisma.promo_usage.create({
     *   data: {
     *     // ... data to create a Promo_usage
     *   }
     * })
     * 
     */
    create<T extends promo_usageCreateArgs>(args: SelectSubset<T, promo_usageCreateArgs<ExtArgs>>): Prisma__promo_usageClient<$Result.GetResult<Prisma.$promo_usagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Promo_usages.
     * @param {promo_usageCreateManyArgs} args - Arguments to create many Promo_usages.
     * @example
     * // Create many Promo_usages
     * const promo_usage = await prisma.promo_usage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends promo_usageCreateManyArgs>(args?: SelectSubset<T, promo_usageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Promo_usages and returns the data saved in the database.
     * @param {promo_usageCreateManyAndReturnArgs} args - Arguments to create many Promo_usages.
     * @example
     * // Create many Promo_usages
     * const promo_usage = await prisma.promo_usage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Promo_usages and only return the `id`
     * const promo_usageWithIdOnly = await prisma.promo_usage.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends promo_usageCreateManyAndReturnArgs>(args?: SelectSubset<T, promo_usageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$promo_usagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Promo_usage.
     * @param {promo_usageDeleteArgs} args - Arguments to delete one Promo_usage.
     * @example
     * // Delete one Promo_usage
     * const Promo_usage = await prisma.promo_usage.delete({
     *   where: {
     *     // ... filter to delete one Promo_usage
     *   }
     * })
     * 
     */
    delete<T extends promo_usageDeleteArgs>(args: SelectSubset<T, promo_usageDeleteArgs<ExtArgs>>): Prisma__promo_usageClient<$Result.GetResult<Prisma.$promo_usagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Promo_usage.
     * @param {promo_usageUpdateArgs} args - Arguments to update one Promo_usage.
     * @example
     * // Update one Promo_usage
     * const promo_usage = await prisma.promo_usage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends promo_usageUpdateArgs>(args: SelectSubset<T, promo_usageUpdateArgs<ExtArgs>>): Prisma__promo_usageClient<$Result.GetResult<Prisma.$promo_usagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Promo_usages.
     * @param {promo_usageDeleteManyArgs} args - Arguments to filter Promo_usages to delete.
     * @example
     * // Delete a few Promo_usages
     * const { count } = await prisma.promo_usage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends promo_usageDeleteManyArgs>(args?: SelectSubset<T, promo_usageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promo_usages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promo_usageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Promo_usages
     * const promo_usage = await prisma.promo_usage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends promo_usageUpdateManyArgs>(args: SelectSubset<T, promo_usageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promo_usages and returns the data updated in the database.
     * @param {promo_usageUpdateManyAndReturnArgs} args - Arguments to update many Promo_usages.
     * @example
     * // Update many Promo_usages
     * const promo_usage = await prisma.promo_usage.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Promo_usages and only return the `id`
     * const promo_usageWithIdOnly = await prisma.promo_usage.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends promo_usageUpdateManyAndReturnArgs>(args: SelectSubset<T, promo_usageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$promo_usagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Promo_usage.
     * @param {promo_usageUpsertArgs} args - Arguments to update or create a Promo_usage.
     * @example
     * // Update or create a Promo_usage
     * const promo_usage = await prisma.promo_usage.upsert({
     *   create: {
     *     // ... data to create a Promo_usage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Promo_usage we want to update
     *   }
     * })
     */
    upsert<T extends promo_usageUpsertArgs>(args: SelectSubset<T, promo_usageUpsertArgs<ExtArgs>>): Prisma__promo_usageClient<$Result.GetResult<Prisma.$promo_usagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Promo_usages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promo_usageCountArgs} args - Arguments to filter Promo_usages to count.
     * @example
     * // Count the number of Promo_usages
     * const count = await prisma.promo_usage.count({
     *   where: {
     *     // ... the filter for the Promo_usages we want to count
     *   }
     * })
    **/
    count<T extends promo_usageCountArgs>(
      args?: Subset<T, promo_usageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Promo_usageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Promo_usage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Promo_usageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Promo_usageAggregateArgs>(args: Subset<T, Promo_usageAggregateArgs>): Prisma.PrismaPromise<GetPromo_usageAggregateType<T>>

    /**
     * Group by Promo_usage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promo_usageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends promo_usageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: promo_usageGroupByArgs['orderBy'] }
        : { orderBy?: promo_usageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, promo_usageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromo_usageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the promo_usage model
   */
  readonly fields: promo_usageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for promo_usage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__promo_usageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    promocodes<T extends promocodesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, promocodesDefaultArgs<ExtArgs>>): Prisma__promocodesClient<$Result.GetResult<Prisma.$promocodesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the promo_usage model
   */
  interface promo_usageFieldRefs {
    readonly id: FieldRef<"promo_usage", 'String'>
    readonly user_id: FieldRef<"promo_usage", 'String'>
    readonly promocode_id: FieldRef<"promo_usage", 'String'>
    readonly used_at: FieldRef<"promo_usage", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * promo_usage findUnique
   */
  export type promo_usageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promo_usage
     */
    select?: promo_usageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promo_usage
     */
    omit?: promo_usageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promo_usageInclude<ExtArgs> | null
    /**
     * Filter, which promo_usage to fetch.
     */
    where: promo_usageWhereUniqueInput
  }

  /**
   * promo_usage findUniqueOrThrow
   */
  export type promo_usageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promo_usage
     */
    select?: promo_usageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promo_usage
     */
    omit?: promo_usageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promo_usageInclude<ExtArgs> | null
    /**
     * Filter, which promo_usage to fetch.
     */
    where: promo_usageWhereUniqueInput
  }

  /**
   * promo_usage findFirst
   */
  export type promo_usageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promo_usage
     */
    select?: promo_usageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promo_usage
     */
    omit?: promo_usageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promo_usageInclude<ExtArgs> | null
    /**
     * Filter, which promo_usage to fetch.
     */
    where?: promo_usageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promo_usages to fetch.
     */
    orderBy?: promo_usageOrderByWithRelationInput | promo_usageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for promo_usages.
     */
    cursor?: promo_usageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promo_usages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promo_usages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of promo_usages.
     */
    distinct?: Promo_usageScalarFieldEnum | Promo_usageScalarFieldEnum[]
  }

  /**
   * promo_usage findFirstOrThrow
   */
  export type promo_usageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promo_usage
     */
    select?: promo_usageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promo_usage
     */
    omit?: promo_usageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promo_usageInclude<ExtArgs> | null
    /**
     * Filter, which promo_usage to fetch.
     */
    where?: promo_usageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promo_usages to fetch.
     */
    orderBy?: promo_usageOrderByWithRelationInput | promo_usageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for promo_usages.
     */
    cursor?: promo_usageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promo_usages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promo_usages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of promo_usages.
     */
    distinct?: Promo_usageScalarFieldEnum | Promo_usageScalarFieldEnum[]
  }

  /**
   * promo_usage findMany
   */
  export type promo_usageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promo_usage
     */
    select?: promo_usageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promo_usage
     */
    omit?: promo_usageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promo_usageInclude<ExtArgs> | null
    /**
     * Filter, which promo_usages to fetch.
     */
    where?: promo_usageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promo_usages to fetch.
     */
    orderBy?: promo_usageOrderByWithRelationInput | promo_usageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing promo_usages.
     */
    cursor?: promo_usageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promo_usages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promo_usages.
     */
    skip?: number
    distinct?: Promo_usageScalarFieldEnum | Promo_usageScalarFieldEnum[]
  }

  /**
   * promo_usage create
   */
  export type promo_usageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promo_usage
     */
    select?: promo_usageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promo_usage
     */
    omit?: promo_usageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promo_usageInclude<ExtArgs> | null
    /**
     * The data needed to create a promo_usage.
     */
    data: XOR<promo_usageCreateInput, promo_usageUncheckedCreateInput>
  }

  /**
   * promo_usage createMany
   */
  export type promo_usageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many promo_usages.
     */
    data: promo_usageCreateManyInput | promo_usageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * promo_usage createManyAndReturn
   */
  export type promo_usageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promo_usage
     */
    select?: promo_usageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the promo_usage
     */
    omit?: promo_usageOmit<ExtArgs> | null
    /**
     * The data used to create many promo_usages.
     */
    data: promo_usageCreateManyInput | promo_usageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promo_usageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * promo_usage update
   */
  export type promo_usageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promo_usage
     */
    select?: promo_usageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promo_usage
     */
    omit?: promo_usageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promo_usageInclude<ExtArgs> | null
    /**
     * The data needed to update a promo_usage.
     */
    data: XOR<promo_usageUpdateInput, promo_usageUncheckedUpdateInput>
    /**
     * Choose, which promo_usage to update.
     */
    where: promo_usageWhereUniqueInput
  }

  /**
   * promo_usage updateMany
   */
  export type promo_usageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update promo_usages.
     */
    data: XOR<promo_usageUpdateManyMutationInput, promo_usageUncheckedUpdateManyInput>
    /**
     * Filter which promo_usages to update
     */
    where?: promo_usageWhereInput
    /**
     * Limit how many promo_usages to update.
     */
    limit?: number
  }

  /**
   * promo_usage updateManyAndReturn
   */
  export type promo_usageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promo_usage
     */
    select?: promo_usageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the promo_usage
     */
    omit?: promo_usageOmit<ExtArgs> | null
    /**
     * The data used to update promo_usages.
     */
    data: XOR<promo_usageUpdateManyMutationInput, promo_usageUncheckedUpdateManyInput>
    /**
     * Filter which promo_usages to update
     */
    where?: promo_usageWhereInput
    /**
     * Limit how many promo_usages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promo_usageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * promo_usage upsert
   */
  export type promo_usageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promo_usage
     */
    select?: promo_usageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promo_usage
     */
    omit?: promo_usageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promo_usageInclude<ExtArgs> | null
    /**
     * The filter to search for the promo_usage to update in case it exists.
     */
    where: promo_usageWhereUniqueInput
    /**
     * In case the promo_usage found by the `where` argument doesn't exist, create a new promo_usage with this data.
     */
    create: XOR<promo_usageCreateInput, promo_usageUncheckedCreateInput>
    /**
     * In case the promo_usage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<promo_usageUpdateInput, promo_usageUncheckedUpdateInput>
  }

  /**
   * promo_usage delete
   */
  export type promo_usageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promo_usage
     */
    select?: promo_usageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promo_usage
     */
    omit?: promo_usageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promo_usageInclude<ExtArgs> | null
    /**
     * Filter which promo_usage to delete.
     */
    where: promo_usageWhereUniqueInput
  }

  /**
   * promo_usage deleteMany
   */
  export type promo_usageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which promo_usages to delete
     */
    where?: promo_usageWhereInput
    /**
     * Limit how many promo_usages to delete.
     */
    limit?: number
  }

  /**
   * promo_usage without action
   */
  export type promo_usageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promo_usage
     */
    select?: promo_usageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promo_usage
     */
    omit?: promo_usageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promo_usageInclude<ExtArgs> | null
  }


  /**
   * Model categories
   */

  export type AggregateCategories = {
    _count: CategoriesCountAggregateOutputType | null
    _min: CategoriesMinAggregateOutputType | null
    _max: CategoriesMaxAggregateOutputType | null
  }

  export type CategoriesMinAggregateOutputType = {
    id: string | null
    name: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CategoriesMaxAggregateOutputType = {
    id: string | null
    name: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CategoriesCountAggregateOutputType = {
    id: number
    name: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type CategoriesMinAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
  }

  export type CategoriesMaxAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
  }

  export type CategoriesCountAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type CategoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categories to aggregate.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned categories
    **/
    _count?: true | CategoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriesMaxAggregateInputType
  }

  export type GetCategoriesAggregateType<T extends CategoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateCategories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategories[P]>
      : GetScalarType<T[P], AggregateCategories[P]>
  }




  export type categoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: categoriesWhereInput
    orderBy?: categoriesOrderByWithAggregationInput | categoriesOrderByWithAggregationInput[]
    by: CategoriesScalarFieldEnum[] | CategoriesScalarFieldEnum
    having?: categoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriesCountAggregateInputType | true
    _min?: CategoriesMinAggregateInputType
    _max?: CategoriesMaxAggregateInputType
  }

  export type CategoriesGroupByOutputType = {
    id: string
    name: string
    created_at: Date | null
    updated_at: Date | null
    _count: CategoriesCountAggregateOutputType | null
    _min: CategoriesMinAggregateOutputType | null
    _max: CategoriesMaxAggregateOutputType | null
  }

  type GetCategoriesGroupByPayload<T extends categoriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriesGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriesGroupByOutputType[P]>
        }
      >
    >


  export type categoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    created_at?: boolean
    updated_at?: boolean
    products?: boolean | categories$productsArgs<ExtArgs>
    _count?: boolean | CategoriesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categories"]>

  export type categoriesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["categories"]>

  export type categoriesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["categories"]>

  export type categoriesSelectScalar = {
    id?: boolean
    name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type categoriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "created_at" | "updated_at", ExtArgs["result"]["categories"]>
  export type categoriesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | categories$productsArgs<ExtArgs>
    _count?: boolean | CategoriesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type categoriesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type categoriesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $categoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "categories"
    objects: {
      products: Prisma.$productsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["categories"]>
    composites: {}
  }

  type categoriesGetPayload<S extends boolean | null | undefined | categoriesDefaultArgs> = $Result.GetResult<Prisma.$categoriesPayload, S>

  type categoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<categoriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoriesCountAggregateInputType | true
    }

  export interface categoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['categories'], meta: { name: 'categories' } }
    /**
     * Find zero or one Categories that matches the filter.
     * @param {categoriesFindUniqueArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends categoriesFindUniqueArgs>(args: SelectSubset<T, categoriesFindUniqueArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Categories that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {categoriesFindUniqueOrThrowArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends categoriesFindUniqueOrThrowArgs>(args: SelectSubset<T, categoriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesFindFirstArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends categoriesFindFirstArgs>(args?: SelectSubset<T, categoriesFindFirstArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesFindFirstOrThrowArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends categoriesFindFirstOrThrowArgs>(args?: SelectSubset<T, categoriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.categories.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.categories.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriesWithIdOnly = await prisma.categories.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends categoriesFindManyArgs>(args?: SelectSubset<T, categoriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Categories.
     * @param {categoriesCreateArgs} args - Arguments to create a Categories.
     * @example
     * // Create one Categories
     * const Categories = await prisma.categories.create({
     *   data: {
     *     // ... data to create a Categories
     *   }
     * })
     * 
     */
    create<T extends categoriesCreateArgs>(args: SelectSubset<T, categoriesCreateArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories.
     * @param {categoriesCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const categories = await prisma.categories.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends categoriesCreateManyArgs>(args?: SelectSubset<T, categoriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categories and returns the data saved in the database.
     * @param {categoriesCreateManyAndReturnArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const categories = await prisma.categories.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categories and only return the `id`
     * const categoriesWithIdOnly = await prisma.categories.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends categoriesCreateManyAndReturnArgs>(args?: SelectSubset<T, categoriesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Categories.
     * @param {categoriesDeleteArgs} args - Arguments to delete one Categories.
     * @example
     * // Delete one Categories
     * const Categories = await prisma.categories.delete({
     *   where: {
     *     // ... filter to delete one Categories
     *   }
     * })
     * 
     */
    delete<T extends categoriesDeleteArgs>(args: SelectSubset<T, categoriesDeleteArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Categories.
     * @param {categoriesUpdateArgs} args - Arguments to update one Categories.
     * @example
     * // Update one Categories
     * const categories = await prisma.categories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends categoriesUpdateArgs>(args: SelectSubset<T, categoriesUpdateArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories.
     * @param {categoriesDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.categories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends categoriesDeleteManyArgs>(args?: SelectSubset<T, categoriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const categories = await prisma.categories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends categoriesUpdateManyArgs>(args: SelectSubset<T, categoriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories and returns the data updated in the database.
     * @param {categoriesUpdateManyAndReturnArgs} args - Arguments to update many Categories.
     * @example
     * // Update many Categories
     * const categories = await prisma.categories.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categories and only return the `id`
     * const categoriesWithIdOnly = await prisma.categories.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends categoriesUpdateManyAndReturnArgs>(args: SelectSubset<T, categoriesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Categories.
     * @param {categoriesUpsertArgs} args - Arguments to update or create a Categories.
     * @example
     * // Update or create a Categories
     * const categories = await prisma.categories.upsert({
     *   create: {
     *     // ... data to create a Categories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categories we want to update
     *   }
     * })
     */
    upsert<T extends categoriesUpsertArgs>(args: SelectSubset<T, categoriesUpsertArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.categories.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends categoriesCountArgs>(
      args?: Subset<T, categoriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriesAggregateArgs>(args: Subset<T, CategoriesAggregateArgs>): Prisma.PrismaPromise<GetCategoriesAggregateType<T>>

    /**
     * Group by Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends categoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: categoriesGroupByArgs['orderBy'] }
        : { orderBy?: categoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, categoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the categories model
   */
  readonly fields: categoriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for categories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__categoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends categories$productsArgs<ExtArgs> = {}>(args?: Subset<T, categories$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the categories model
   */
  interface categoriesFieldRefs {
    readonly id: FieldRef<"categories", 'String'>
    readonly name: FieldRef<"categories", 'String'>
    readonly created_at: FieldRef<"categories", 'DateTime'>
    readonly updated_at: FieldRef<"categories", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * categories findUnique
   */
  export type categoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories findUniqueOrThrow
   */
  export type categoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories findFirst
   */
  export type categoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categories.
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categories.
     */
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }

  /**
   * categories findFirstOrThrow
   */
  export type categoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categories.
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categories.
     */
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }

  /**
   * categories findMany
   */
  export type categoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing categories.
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }

  /**
   * categories create
   */
  export type categoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * The data needed to create a categories.
     */
    data: XOR<categoriesCreateInput, categoriesUncheckedCreateInput>
  }

  /**
   * categories createMany
   */
  export type categoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many categories.
     */
    data: categoriesCreateManyInput | categoriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * categories createManyAndReturn
   */
  export type categoriesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * The data used to create many categories.
     */
    data: categoriesCreateManyInput | categoriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * categories update
   */
  export type categoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * The data needed to update a categories.
     */
    data: XOR<categoriesUpdateInput, categoriesUncheckedUpdateInput>
    /**
     * Choose, which categories to update.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories updateMany
   */
  export type categoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update categories.
     */
    data: XOR<categoriesUpdateManyMutationInput, categoriesUncheckedUpdateManyInput>
    /**
     * Filter which categories to update
     */
    where?: categoriesWhereInput
    /**
     * Limit how many categories to update.
     */
    limit?: number
  }

  /**
   * categories updateManyAndReturn
   */
  export type categoriesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * The data used to update categories.
     */
    data: XOR<categoriesUpdateManyMutationInput, categoriesUncheckedUpdateManyInput>
    /**
     * Filter which categories to update
     */
    where?: categoriesWhereInput
    /**
     * Limit how many categories to update.
     */
    limit?: number
  }

  /**
   * categories upsert
   */
  export type categoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * The filter to search for the categories to update in case it exists.
     */
    where: categoriesWhereUniqueInput
    /**
     * In case the categories found by the `where` argument doesn't exist, create a new categories with this data.
     */
    create: XOR<categoriesCreateInput, categoriesUncheckedCreateInput>
    /**
     * In case the categories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<categoriesUpdateInput, categoriesUncheckedUpdateInput>
  }

  /**
   * categories delete
   */
  export type categoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter which categories to delete.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories deleteMany
   */
  export type categoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categories to delete
     */
    where?: categoriesWhereInput
    /**
     * Limit how many categories to delete.
     */
    limit?: number
  }

  /**
   * categories.products
   */
  export type categories$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    where?: productsWhereInput
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    cursor?: productsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * categories without action
   */
  export type categoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
  }


  /**
   * Model products
   */

  export type AggregateProducts = {
    _count: ProductsCountAggregateOutputType | null
    _avg: ProductsAvgAggregateOutputType | null
    _sum: ProductsSumAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  export type ProductsAvgAggregateOutputType = {
    price: Decimal | null
    total_amount: number | null
    life_duration: number | null
  }

  export type ProductsSumAggregateOutputType = {
    price: Decimal | null
    total_amount: number | null
    life_duration: number | null
  }

  export type ProductsMinAggregateOutputType = {
    id: string | null
    name: string | null
    price: Decimal | null
    category_id: string | null
    denomination: string | null
    total_amount: number | null
    created_at: Date | null
    updated_at: Date | null
    img: string | null
    description: string | null
    life_duration: number | null
  }

  export type ProductsMaxAggregateOutputType = {
    id: string | null
    name: string | null
    price: Decimal | null
    category_id: string | null
    denomination: string | null
    total_amount: number | null
    created_at: Date | null
    updated_at: Date | null
    img: string | null
    description: string | null
    life_duration: number | null
  }

  export type ProductsCountAggregateOutputType = {
    id: number
    name: number
    price: number
    category_id: number
    denomination: number
    total_amount: number
    created_at: number
    updated_at: number
    img: number
    description: number
    life_duration: number
    _all: number
  }


  export type ProductsAvgAggregateInputType = {
    price?: true
    total_amount?: true
    life_duration?: true
  }

  export type ProductsSumAggregateInputType = {
    price?: true
    total_amount?: true
    life_duration?: true
  }

  export type ProductsMinAggregateInputType = {
    id?: true
    name?: true
    price?: true
    category_id?: true
    denomination?: true
    total_amount?: true
    created_at?: true
    updated_at?: true
    img?: true
    description?: true
    life_duration?: true
  }

  export type ProductsMaxAggregateInputType = {
    id?: true
    name?: true
    price?: true
    category_id?: true
    denomination?: true
    total_amount?: true
    created_at?: true
    updated_at?: true
    img?: true
    description?: true
    life_duration?: true
  }

  export type ProductsCountAggregateInputType = {
    id?: true
    name?: true
    price?: true
    category_id?: true
    denomination?: true
    total_amount?: true
    created_at?: true
    updated_at?: true
    img?: true
    description?: true
    life_duration?: true
    _all?: true
  }

  export type ProductsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which products to aggregate.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned products
    **/
    _count?: true | ProductsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductsMaxAggregateInputType
  }

  export type GetProductsAggregateType<T extends ProductsAggregateArgs> = {
        [P in keyof T & keyof AggregateProducts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducts[P]>
      : GetScalarType<T[P], AggregateProducts[P]>
  }




  export type productsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productsWhereInput
    orderBy?: productsOrderByWithAggregationInput | productsOrderByWithAggregationInput[]
    by: ProductsScalarFieldEnum[] | ProductsScalarFieldEnum
    having?: productsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductsCountAggregateInputType | true
    _avg?: ProductsAvgAggregateInputType
    _sum?: ProductsSumAggregateInputType
    _min?: ProductsMinAggregateInputType
    _max?: ProductsMaxAggregateInputType
  }

  export type ProductsGroupByOutputType = {
    id: string
    name: string
    price: Decimal
    category_id: string | null
    denomination: string | null
    total_amount: number | null
    created_at: Date | null
    updated_at: Date | null
    img: string | null
    description: string | null
    life_duration: number | null
    _count: ProductsCountAggregateOutputType | null
    _avg: ProductsAvgAggregateOutputType | null
    _sum: ProductsSumAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  type GetProductsGroupByPayload<T extends productsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductsGroupByOutputType[P]>
            : GetScalarType<T[P], ProductsGroupByOutputType[P]>
        }
      >
    >


  export type productsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    price?: boolean
    category_id?: boolean
    denomination?: boolean
    total_amount?: boolean
    created_at?: boolean
    updated_at?: boolean
    img?: boolean
    description?: boolean
    life_duration?: boolean
    order_items?: boolean | products$order_itemsArgs<ExtArgs>
    product_keys?: boolean | products$product_keysArgs<ExtArgs>
    categories?: boolean | products$categoriesArgs<ExtArgs>
    user_products?: boolean | products$user_productsArgs<ExtArgs>
    _count?: boolean | ProductsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["products"]>

  export type productsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    price?: boolean
    category_id?: boolean
    denomination?: boolean
    total_amount?: boolean
    created_at?: boolean
    updated_at?: boolean
    img?: boolean
    description?: boolean
    life_duration?: boolean
    categories?: boolean | products$categoriesArgs<ExtArgs>
  }, ExtArgs["result"]["products"]>

  export type productsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    price?: boolean
    category_id?: boolean
    denomination?: boolean
    total_amount?: boolean
    created_at?: boolean
    updated_at?: boolean
    img?: boolean
    description?: boolean
    life_duration?: boolean
    categories?: boolean | products$categoriesArgs<ExtArgs>
  }, ExtArgs["result"]["products"]>

  export type productsSelectScalar = {
    id?: boolean
    name?: boolean
    price?: boolean
    category_id?: boolean
    denomination?: boolean
    total_amount?: boolean
    created_at?: boolean
    updated_at?: boolean
    img?: boolean
    description?: boolean
    life_duration?: boolean
  }

  export type productsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "price" | "category_id" | "denomination" | "total_amount" | "created_at" | "updated_at" | "img" | "description" | "life_duration", ExtArgs["result"]["products"]>
  export type productsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_items?: boolean | products$order_itemsArgs<ExtArgs>
    product_keys?: boolean | products$product_keysArgs<ExtArgs>
    categories?: boolean | products$categoriesArgs<ExtArgs>
    user_products?: boolean | products$user_productsArgs<ExtArgs>
    _count?: boolean | ProductsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type productsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categories?: boolean | products$categoriesArgs<ExtArgs>
  }
  export type productsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categories?: boolean | products$categoriesArgs<ExtArgs>
  }

  export type $productsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "products"
    objects: {
      order_items: Prisma.$order_itemsPayload<ExtArgs>[]
      product_keys: Prisma.$product_keysPayload<ExtArgs>[]
      categories: Prisma.$categoriesPayload<ExtArgs> | null
      user_products: Prisma.$user_productsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      price: Prisma.Decimal
      category_id: string | null
      denomination: string | null
      total_amount: number | null
      created_at: Date | null
      updated_at: Date | null
      img: string | null
      description: string | null
      life_duration: number | null
    }, ExtArgs["result"]["products"]>
    composites: {}
  }

  type productsGetPayload<S extends boolean | null | undefined | productsDefaultArgs> = $Result.GetResult<Prisma.$productsPayload, S>

  type productsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<productsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductsCountAggregateInputType | true
    }

  export interface productsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['products'], meta: { name: 'products' } }
    /**
     * Find zero or one Products that matches the filter.
     * @param {productsFindUniqueArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends productsFindUniqueArgs>(args: SelectSubset<T, productsFindUniqueArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Products that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {productsFindUniqueOrThrowArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends productsFindUniqueOrThrowArgs>(args: SelectSubset<T, productsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindFirstArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends productsFindFirstArgs>(args?: SelectSubset<T, productsFindFirstArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Products that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindFirstOrThrowArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends productsFindFirstOrThrowArgs>(args?: SelectSubset<T, productsFindFirstOrThrowArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.products.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.products.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productsWithIdOnly = await prisma.products.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends productsFindManyArgs>(args?: SelectSubset<T, productsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Products.
     * @param {productsCreateArgs} args - Arguments to create a Products.
     * @example
     * // Create one Products
     * const Products = await prisma.products.create({
     *   data: {
     *     // ... data to create a Products
     *   }
     * })
     * 
     */
    create<T extends productsCreateArgs>(args: SelectSubset<T, productsCreateArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {productsCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const products = await prisma.products.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends productsCreateManyArgs>(args?: SelectSubset<T, productsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {productsCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const products = await prisma.products.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productsWithIdOnly = await prisma.products.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends productsCreateManyAndReturnArgs>(args?: SelectSubset<T, productsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Products.
     * @param {productsDeleteArgs} args - Arguments to delete one Products.
     * @example
     * // Delete one Products
     * const Products = await prisma.products.delete({
     *   where: {
     *     // ... filter to delete one Products
     *   }
     * })
     * 
     */
    delete<T extends productsDeleteArgs>(args: SelectSubset<T, productsDeleteArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Products.
     * @param {productsUpdateArgs} args - Arguments to update one Products.
     * @example
     * // Update one Products
     * const products = await prisma.products.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends productsUpdateArgs>(args: SelectSubset<T, productsUpdateArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {productsDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.products.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends productsDeleteManyArgs>(args?: SelectSubset<T, productsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const products = await prisma.products.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends productsUpdateManyArgs>(args: SelectSubset<T, productsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products and returns the data updated in the database.
     * @param {productsUpdateManyAndReturnArgs} args - Arguments to update many Products.
     * @example
     * // Update many Products
     * const products = await prisma.products.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Products and only return the `id`
     * const productsWithIdOnly = await prisma.products.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends productsUpdateManyAndReturnArgs>(args: SelectSubset<T, productsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Products.
     * @param {productsUpsertArgs} args - Arguments to update or create a Products.
     * @example
     * // Update or create a Products
     * const products = await prisma.products.upsert({
     *   create: {
     *     // ... data to create a Products
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Products we want to update
     *   }
     * })
     */
    upsert<T extends productsUpsertArgs>(args: SelectSubset<T, productsUpsertArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.products.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends productsCountArgs>(
      args?: Subset<T, productsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductsAggregateArgs>(args: Subset<T, ProductsAggregateArgs>): Prisma.PrismaPromise<GetProductsAggregateType<T>>

    /**
     * Group by Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends productsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: productsGroupByArgs['orderBy'] }
        : { orderBy?: productsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, productsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the products model
   */
  readonly fields: productsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for products.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__productsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order_items<T extends products$order_itemsArgs<ExtArgs> = {}>(args?: Subset<T, products$order_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    product_keys<T extends products$product_keysArgs<ExtArgs> = {}>(args?: Subset<T, products$product_keysArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_keysPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    categories<T extends products$categoriesArgs<ExtArgs> = {}>(args?: Subset<T, products$categoriesArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_products<T extends products$user_productsArgs<ExtArgs> = {}>(args?: Subset<T, products$user_productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the products model
   */
  interface productsFieldRefs {
    readonly id: FieldRef<"products", 'String'>
    readonly name: FieldRef<"products", 'String'>
    readonly price: FieldRef<"products", 'Decimal'>
    readonly category_id: FieldRef<"products", 'String'>
    readonly denomination: FieldRef<"products", 'String'>
    readonly total_amount: FieldRef<"products", 'Int'>
    readonly created_at: FieldRef<"products", 'DateTime'>
    readonly updated_at: FieldRef<"products", 'DateTime'>
    readonly img: FieldRef<"products", 'String'>
    readonly description: FieldRef<"products", 'String'>
    readonly life_duration: FieldRef<"products", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * products findUnique
   */
  export type productsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products findUniqueOrThrow
   */
  export type productsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products findFirst
   */
  export type productsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products.
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products.
     */
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * products findFirstOrThrow
   */
  export type productsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products.
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products.
     */
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * products findMany
   */
  export type productsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing products.
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * products create
   */
  export type productsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * The data needed to create a products.
     */
    data: XOR<productsCreateInput, productsUncheckedCreateInput>
  }

  /**
   * products createMany
   */
  export type productsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many products.
     */
    data: productsCreateManyInput | productsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * products createManyAndReturn
   */
  export type productsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * The data used to create many products.
     */
    data: productsCreateManyInput | productsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * products update
   */
  export type productsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * The data needed to update a products.
     */
    data: XOR<productsUpdateInput, productsUncheckedUpdateInput>
    /**
     * Choose, which products to update.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products updateMany
   */
  export type productsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update products.
     */
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyInput>
    /**
     * Filter which products to update
     */
    where?: productsWhereInput
    /**
     * Limit how many products to update.
     */
    limit?: number
  }

  /**
   * products updateManyAndReturn
   */
  export type productsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * The data used to update products.
     */
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyInput>
    /**
     * Filter which products to update
     */
    where?: productsWhereInput
    /**
     * Limit how many products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * products upsert
   */
  export type productsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * The filter to search for the products to update in case it exists.
     */
    where: productsWhereUniqueInput
    /**
     * In case the products found by the `where` argument doesn't exist, create a new products with this data.
     */
    create: XOR<productsCreateInput, productsUncheckedCreateInput>
    /**
     * In case the products was found with the provided `where` argument, update it with this data.
     */
    update: XOR<productsUpdateInput, productsUncheckedUpdateInput>
  }

  /**
   * products delete
   */
  export type productsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter which products to delete.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products deleteMany
   */
  export type productsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which products to delete
     */
    where?: productsWhereInput
    /**
     * Limit how many products to delete.
     */
    limit?: number
  }

  /**
   * products.order_items
   */
  export type products$order_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    where?: order_itemsWhereInput
    orderBy?: order_itemsOrderByWithRelationInput | order_itemsOrderByWithRelationInput[]
    cursor?: order_itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Order_itemsScalarFieldEnum | Order_itemsScalarFieldEnum[]
  }

  /**
   * products.product_keys
   */
  export type products$product_keysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_keys
     */
    select?: product_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_keys
     */
    omit?: product_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_keysInclude<ExtArgs> | null
    where?: product_keysWhereInput
    orderBy?: product_keysOrderByWithRelationInput | product_keysOrderByWithRelationInput[]
    cursor?: product_keysWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Product_keysScalarFieldEnum | Product_keysScalarFieldEnum[]
  }

  /**
   * products.categories
   */
  export type products$categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    where?: categoriesWhereInput
  }

  /**
   * products.user_products
   */
  export type products$user_productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_products
     */
    select?: user_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_products
     */
    omit?: user_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_productsInclude<ExtArgs> | null
    where?: user_productsWhereInput
    orderBy?: user_productsOrderByWithRelationInput | user_productsOrderByWithRelationInput[]
    cursor?: user_productsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_productsScalarFieldEnum | User_productsScalarFieldEnum[]
  }

  /**
   * products without action
   */
  export type productsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
  }


  /**
   * Model product_keys
   */

  export type AggregateProduct_keys = {
    _count: Product_keysCountAggregateOutputType | null
    _min: Product_keysMinAggregateOutputType | null
    _max: Product_keysMaxAggregateOutputType | null
  }

  export type Product_keysMinAggregateOutputType = {
    id: string | null
    product_id: string | null
    key_encrypted: string | null
    used: boolean | null
    created_at: Date | null
    updated_at: Date | null
    reserved_by_order_id: string | null
    reserved_until: Date | null
  }

  export type Product_keysMaxAggregateOutputType = {
    id: string | null
    product_id: string | null
    key_encrypted: string | null
    used: boolean | null
    created_at: Date | null
    updated_at: Date | null
    reserved_by_order_id: string | null
    reserved_until: Date | null
  }

  export type Product_keysCountAggregateOutputType = {
    id: number
    product_id: number
    key_encrypted: number
    used: number
    created_at: number
    updated_at: number
    reserved_by_order_id: number
    reserved_until: number
    _all: number
  }


  export type Product_keysMinAggregateInputType = {
    id?: true
    product_id?: true
    key_encrypted?: true
    used?: true
    created_at?: true
    updated_at?: true
    reserved_by_order_id?: true
    reserved_until?: true
  }

  export type Product_keysMaxAggregateInputType = {
    id?: true
    product_id?: true
    key_encrypted?: true
    used?: true
    created_at?: true
    updated_at?: true
    reserved_by_order_id?: true
    reserved_until?: true
  }

  export type Product_keysCountAggregateInputType = {
    id?: true
    product_id?: true
    key_encrypted?: true
    used?: true
    created_at?: true
    updated_at?: true
    reserved_by_order_id?: true
    reserved_until?: true
    _all?: true
  }

  export type Product_keysAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_keys to aggregate.
     */
    where?: product_keysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_keys to fetch.
     */
    orderBy?: product_keysOrderByWithRelationInput | product_keysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: product_keysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_keys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_keys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned product_keys
    **/
    _count?: true | Product_keysCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Product_keysMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Product_keysMaxAggregateInputType
  }

  export type GetProduct_keysAggregateType<T extends Product_keysAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct_keys]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct_keys[P]>
      : GetScalarType<T[P], AggregateProduct_keys[P]>
  }




  export type product_keysGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_keysWhereInput
    orderBy?: product_keysOrderByWithAggregationInput | product_keysOrderByWithAggregationInput[]
    by: Product_keysScalarFieldEnum[] | Product_keysScalarFieldEnum
    having?: product_keysScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Product_keysCountAggregateInputType | true
    _min?: Product_keysMinAggregateInputType
    _max?: Product_keysMaxAggregateInputType
  }

  export type Product_keysGroupByOutputType = {
    id: string
    product_id: string | null
    key_encrypted: string
    used: boolean | null
    created_at: Date | null
    updated_at: Date | null
    reserved_by_order_id: string | null
    reserved_until: Date | null
    _count: Product_keysCountAggregateOutputType | null
    _min: Product_keysMinAggregateOutputType | null
    _max: Product_keysMaxAggregateOutputType | null
  }

  type GetProduct_keysGroupByPayload<T extends product_keysGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Product_keysGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Product_keysGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Product_keysGroupByOutputType[P]>
            : GetScalarType<T[P], Product_keysGroupByOutputType[P]>
        }
      >
    >


  export type product_keysSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_id?: boolean
    key_encrypted?: boolean
    used?: boolean
    created_at?: boolean
    updated_at?: boolean
    reserved_by_order_id?: boolean
    reserved_until?: boolean
    key_events?: boolean | product_keys$key_eventsArgs<ExtArgs>
    keys_aliases?: boolean | product_keys$keys_aliasesArgs<ExtArgs>
    products?: boolean | product_keys$productsArgs<ExtArgs>
    user_products_user_products_product_key_idToproduct_keys?: boolean | product_keys$user_products_user_products_product_key_idToproduct_keysArgs<ExtArgs>
    _count?: boolean | Product_keysCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product_keys"]>

  export type product_keysSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_id?: boolean
    key_encrypted?: boolean
    used?: boolean
    created_at?: boolean
    updated_at?: boolean
    reserved_by_order_id?: boolean
    reserved_until?: boolean
    products?: boolean | product_keys$productsArgs<ExtArgs>
  }, ExtArgs["result"]["product_keys"]>

  export type product_keysSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_id?: boolean
    key_encrypted?: boolean
    used?: boolean
    created_at?: boolean
    updated_at?: boolean
    reserved_by_order_id?: boolean
    reserved_until?: boolean
    products?: boolean | product_keys$productsArgs<ExtArgs>
  }, ExtArgs["result"]["product_keys"]>

  export type product_keysSelectScalar = {
    id?: boolean
    product_id?: boolean
    key_encrypted?: boolean
    used?: boolean
    created_at?: boolean
    updated_at?: boolean
    reserved_by_order_id?: boolean
    reserved_until?: boolean
  }

  export type product_keysOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "product_id" | "key_encrypted" | "used" | "created_at" | "updated_at" | "reserved_by_order_id" | "reserved_until", ExtArgs["result"]["product_keys"]>
  export type product_keysInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    key_events?: boolean | product_keys$key_eventsArgs<ExtArgs>
    keys_aliases?: boolean | product_keys$keys_aliasesArgs<ExtArgs>
    products?: boolean | product_keys$productsArgs<ExtArgs>
    user_products_user_products_product_key_idToproduct_keys?: boolean | product_keys$user_products_user_products_product_key_idToproduct_keysArgs<ExtArgs>
    _count?: boolean | Product_keysCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type product_keysIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | product_keys$productsArgs<ExtArgs>
  }
  export type product_keysIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | product_keys$productsArgs<ExtArgs>
  }

  export type $product_keysPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "product_keys"
    objects: {
      key_events: Prisma.$key_eventsPayload<ExtArgs>[]
      keys_aliases: Prisma.$keys_aliasesPayload<ExtArgs>[]
      products: Prisma.$productsPayload<ExtArgs> | null
      user_products_user_products_product_key_idToproduct_keys: Prisma.$user_productsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      product_id: string | null
      key_encrypted: string
      used: boolean | null
      created_at: Date | null
      updated_at: Date | null
      reserved_by_order_id: string | null
      reserved_until: Date | null
    }, ExtArgs["result"]["product_keys"]>
    composites: {}
  }

  type product_keysGetPayload<S extends boolean | null | undefined | product_keysDefaultArgs> = $Result.GetResult<Prisma.$product_keysPayload, S>

  type product_keysCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<product_keysFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Product_keysCountAggregateInputType | true
    }

  export interface product_keysDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['product_keys'], meta: { name: 'product_keys' } }
    /**
     * Find zero or one Product_keys that matches the filter.
     * @param {product_keysFindUniqueArgs} args - Arguments to find a Product_keys
     * @example
     * // Get one Product_keys
     * const product_keys = await prisma.product_keys.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends product_keysFindUniqueArgs>(args: SelectSubset<T, product_keysFindUniqueArgs<ExtArgs>>): Prisma__product_keysClient<$Result.GetResult<Prisma.$product_keysPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product_keys that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {product_keysFindUniqueOrThrowArgs} args - Arguments to find a Product_keys
     * @example
     * // Get one Product_keys
     * const product_keys = await prisma.product_keys.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends product_keysFindUniqueOrThrowArgs>(args: SelectSubset<T, product_keysFindUniqueOrThrowArgs<ExtArgs>>): Prisma__product_keysClient<$Result.GetResult<Prisma.$product_keysPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product_keys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_keysFindFirstArgs} args - Arguments to find a Product_keys
     * @example
     * // Get one Product_keys
     * const product_keys = await prisma.product_keys.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends product_keysFindFirstArgs>(args?: SelectSubset<T, product_keysFindFirstArgs<ExtArgs>>): Prisma__product_keysClient<$Result.GetResult<Prisma.$product_keysPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product_keys that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_keysFindFirstOrThrowArgs} args - Arguments to find a Product_keys
     * @example
     * // Get one Product_keys
     * const product_keys = await prisma.product_keys.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends product_keysFindFirstOrThrowArgs>(args?: SelectSubset<T, product_keysFindFirstOrThrowArgs<ExtArgs>>): Prisma__product_keysClient<$Result.GetResult<Prisma.$product_keysPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Product_keys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_keysFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Product_keys
     * const product_keys = await prisma.product_keys.findMany()
     * 
     * // Get first 10 Product_keys
     * const product_keys = await prisma.product_keys.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const product_keysWithIdOnly = await prisma.product_keys.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends product_keysFindManyArgs>(args?: SelectSubset<T, product_keysFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_keysPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product_keys.
     * @param {product_keysCreateArgs} args - Arguments to create a Product_keys.
     * @example
     * // Create one Product_keys
     * const Product_keys = await prisma.product_keys.create({
     *   data: {
     *     // ... data to create a Product_keys
     *   }
     * })
     * 
     */
    create<T extends product_keysCreateArgs>(args: SelectSubset<T, product_keysCreateArgs<ExtArgs>>): Prisma__product_keysClient<$Result.GetResult<Prisma.$product_keysPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Product_keys.
     * @param {product_keysCreateManyArgs} args - Arguments to create many Product_keys.
     * @example
     * // Create many Product_keys
     * const product_keys = await prisma.product_keys.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends product_keysCreateManyArgs>(args?: SelectSubset<T, product_keysCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Product_keys and returns the data saved in the database.
     * @param {product_keysCreateManyAndReturnArgs} args - Arguments to create many Product_keys.
     * @example
     * // Create many Product_keys
     * const product_keys = await prisma.product_keys.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Product_keys and only return the `id`
     * const product_keysWithIdOnly = await prisma.product_keys.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends product_keysCreateManyAndReturnArgs>(args?: SelectSubset<T, product_keysCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_keysPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Product_keys.
     * @param {product_keysDeleteArgs} args - Arguments to delete one Product_keys.
     * @example
     * // Delete one Product_keys
     * const Product_keys = await prisma.product_keys.delete({
     *   where: {
     *     // ... filter to delete one Product_keys
     *   }
     * })
     * 
     */
    delete<T extends product_keysDeleteArgs>(args: SelectSubset<T, product_keysDeleteArgs<ExtArgs>>): Prisma__product_keysClient<$Result.GetResult<Prisma.$product_keysPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product_keys.
     * @param {product_keysUpdateArgs} args - Arguments to update one Product_keys.
     * @example
     * // Update one Product_keys
     * const product_keys = await prisma.product_keys.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends product_keysUpdateArgs>(args: SelectSubset<T, product_keysUpdateArgs<ExtArgs>>): Prisma__product_keysClient<$Result.GetResult<Prisma.$product_keysPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Product_keys.
     * @param {product_keysDeleteManyArgs} args - Arguments to filter Product_keys to delete.
     * @example
     * // Delete a few Product_keys
     * const { count } = await prisma.product_keys.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends product_keysDeleteManyArgs>(args?: SelectSubset<T, product_keysDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Product_keys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_keysUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Product_keys
     * const product_keys = await prisma.product_keys.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends product_keysUpdateManyArgs>(args: SelectSubset<T, product_keysUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Product_keys and returns the data updated in the database.
     * @param {product_keysUpdateManyAndReturnArgs} args - Arguments to update many Product_keys.
     * @example
     * // Update many Product_keys
     * const product_keys = await prisma.product_keys.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Product_keys and only return the `id`
     * const product_keysWithIdOnly = await prisma.product_keys.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends product_keysUpdateManyAndReturnArgs>(args: SelectSubset<T, product_keysUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_keysPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Product_keys.
     * @param {product_keysUpsertArgs} args - Arguments to update or create a Product_keys.
     * @example
     * // Update or create a Product_keys
     * const product_keys = await prisma.product_keys.upsert({
     *   create: {
     *     // ... data to create a Product_keys
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product_keys we want to update
     *   }
     * })
     */
    upsert<T extends product_keysUpsertArgs>(args: SelectSubset<T, product_keysUpsertArgs<ExtArgs>>): Prisma__product_keysClient<$Result.GetResult<Prisma.$product_keysPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Product_keys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_keysCountArgs} args - Arguments to filter Product_keys to count.
     * @example
     * // Count the number of Product_keys
     * const count = await prisma.product_keys.count({
     *   where: {
     *     // ... the filter for the Product_keys we want to count
     *   }
     * })
    **/
    count<T extends product_keysCountArgs>(
      args?: Subset<T, product_keysCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Product_keysCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product_keys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Product_keysAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Product_keysAggregateArgs>(args: Subset<T, Product_keysAggregateArgs>): Prisma.PrismaPromise<GetProduct_keysAggregateType<T>>

    /**
     * Group by Product_keys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_keysGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends product_keysGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: product_keysGroupByArgs['orderBy'] }
        : { orderBy?: product_keysGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, product_keysGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProduct_keysGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the product_keys model
   */
  readonly fields: product_keysFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for product_keys.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__product_keysClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    key_events<T extends product_keys$key_eventsArgs<ExtArgs> = {}>(args?: Subset<T, product_keys$key_eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$key_eventsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    keys_aliases<T extends product_keys$keys_aliasesArgs<ExtArgs> = {}>(args?: Subset<T, product_keys$keys_aliasesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$keys_aliasesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    products<T extends product_keys$productsArgs<ExtArgs> = {}>(args?: Subset<T, product_keys$productsArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_products_user_products_product_key_idToproduct_keys<T extends product_keys$user_products_user_products_product_key_idToproduct_keysArgs<ExtArgs> = {}>(args?: Subset<T, product_keys$user_products_user_products_product_key_idToproduct_keysArgs<ExtArgs>>): Prisma__user_productsClient<$Result.GetResult<Prisma.$user_productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the product_keys model
   */
  interface product_keysFieldRefs {
    readonly id: FieldRef<"product_keys", 'String'>
    readonly product_id: FieldRef<"product_keys", 'String'>
    readonly key_encrypted: FieldRef<"product_keys", 'String'>
    readonly used: FieldRef<"product_keys", 'Boolean'>
    readonly created_at: FieldRef<"product_keys", 'DateTime'>
    readonly updated_at: FieldRef<"product_keys", 'DateTime'>
    readonly reserved_by_order_id: FieldRef<"product_keys", 'String'>
    readonly reserved_until: FieldRef<"product_keys", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * product_keys findUnique
   */
  export type product_keysFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_keys
     */
    select?: product_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_keys
     */
    omit?: product_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_keysInclude<ExtArgs> | null
    /**
     * Filter, which product_keys to fetch.
     */
    where: product_keysWhereUniqueInput
  }

  /**
   * product_keys findUniqueOrThrow
   */
  export type product_keysFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_keys
     */
    select?: product_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_keys
     */
    omit?: product_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_keysInclude<ExtArgs> | null
    /**
     * Filter, which product_keys to fetch.
     */
    where: product_keysWhereUniqueInput
  }

  /**
   * product_keys findFirst
   */
  export type product_keysFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_keys
     */
    select?: product_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_keys
     */
    omit?: product_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_keysInclude<ExtArgs> | null
    /**
     * Filter, which product_keys to fetch.
     */
    where?: product_keysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_keys to fetch.
     */
    orderBy?: product_keysOrderByWithRelationInput | product_keysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_keys.
     */
    cursor?: product_keysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_keys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_keys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_keys.
     */
    distinct?: Product_keysScalarFieldEnum | Product_keysScalarFieldEnum[]
  }

  /**
   * product_keys findFirstOrThrow
   */
  export type product_keysFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_keys
     */
    select?: product_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_keys
     */
    omit?: product_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_keysInclude<ExtArgs> | null
    /**
     * Filter, which product_keys to fetch.
     */
    where?: product_keysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_keys to fetch.
     */
    orderBy?: product_keysOrderByWithRelationInput | product_keysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_keys.
     */
    cursor?: product_keysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_keys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_keys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_keys.
     */
    distinct?: Product_keysScalarFieldEnum | Product_keysScalarFieldEnum[]
  }

  /**
   * product_keys findMany
   */
  export type product_keysFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_keys
     */
    select?: product_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_keys
     */
    omit?: product_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_keysInclude<ExtArgs> | null
    /**
     * Filter, which product_keys to fetch.
     */
    where?: product_keysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_keys to fetch.
     */
    orderBy?: product_keysOrderByWithRelationInput | product_keysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing product_keys.
     */
    cursor?: product_keysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_keys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_keys.
     */
    skip?: number
    distinct?: Product_keysScalarFieldEnum | Product_keysScalarFieldEnum[]
  }

  /**
   * product_keys create
   */
  export type product_keysCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_keys
     */
    select?: product_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_keys
     */
    omit?: product_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_keysInclude<ExtArgs> | null
    /**
     * The data needed to create a product_keys.
     */
    data: XOR<product_keysCreateInput, product_keysUncheckedCreateInput>
  }

  /**
   * product_keys createMany
   */
  export type product_keysCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many product_keys.
     */
    data: product_keysCreateManyInput | product_keysCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * product_keys createManyAndReturn
   */
  export type product_keysCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_keys
     */
    select?: product_keysSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the product_keys
     */
    omit?: product_keysOmit<ExtArgs> | null
    /**
     * The data used to create many product_keys.
     */
    data: product_keysCreateManyInput | product_keysCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_keysIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * product_keys update
   */
  export type product_keysUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_keys
     */
    select?: product_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_keys
     */
    omit?: product_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_keysInclude<ExtArgs> | null
    /**
     * The data needed to update a product_keys.
     */
    data: XOR<product_keysUpdateInput, product_keysUncheckedUpdateInput>
    /**
     * Choose, which product_keys to update.
     */
    where: product_keysWhereUniqueInput
  }

  /**
   * product_keys updateMany
   */
  export type product_keysUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update product_keys.
     */
    data: XOR<product_keysUpdateManyMutationInput, product_keysUncheckedUpdateManyInput>
    /**
     * Filter which product_keys to update
     */
    where?: product_keysWhereInput
    /**
     * Limit how many product_keys to update.
     */
    limit?: number
  }

  /**
   * product_keys updateManyAndReturn
   */
  export type product_keysUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_keys
     */
    select?: product_keysSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the product_keys
     */
    omit?: product_keysOmit<ExtArgs> | null
    /**
     * The data used to update product_keys.
     */
    data: XOR<product_keysUpdateManyMutationInput, product_keysUncheckedUpdateManyInput>
    /**
     * Filter which product_keys to update
     */
    where?: product_keysWhereInput
    /**
     * Limit how many product_keys to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_keysIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * product_keys upsert
   */
  export type product_keysUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_keys
     */
    select?: product_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_keys
     */
    omit?: product_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_keysInclude<ExtArgs> | null
    /**
     * The filter to search for the product_keys to update in case it exists.
     */
    where: product_keysWhereUniqueInput
    /**
     * In case the product_keys found by the `where` argument doesn't exist, create a new product_keys with this data.
     */
    create: XOR<product_keysCreateInput, product_keysUncheckedCreateInput>
    /**
     * In case the product_keys was found with the provided `where` argument, update it with this data.
     */
    update: XOR<product_keysUpdateInput, product_keysUncheckedUpdateInput>
  }

  /**
   * product_keys delete
   */
  export type product_keysDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_keys
     */
    select?: product_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_keys
     */
    omit?: product_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_keysInclude<ExtArgs> | null
    /**
     * Filter which product_keys to delete.
     */
    where: product_keysWhereUniqueInput
  }

  /**
   * product_keys deleteMany
   */
  export type product_keysDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_keys to delete
     */
    where?: product_keysWhereInput
    /**
     * Limit how many product_keys to delete.
     */
    limit?: number
  }

  /**
   * product_keys.key_events
   */
  export type product_keys$key_eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the key_events
     */
    select?: key_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the key_events
     */
    omit?: key_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: key_eventsInclude<ExtArgs> | null
    where?: key_eventsWhereInput
    orderBy?: key_eventsOrderByWithRelationInput | key_eventsOrderByWithRelationInput[]
    cursor?: key_eventsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Key_eventsScalarFieldEnum | Key_eventsScalarFieldEnum[]
  }

  /**
   * product_keys.keys_aliases
   */
  export type product_keys$keys_aliasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keys_aliases
     */
    select?: keys_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keys_aliases
     */
    omit?: keys_aliasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keys_aliasesInclude<ExtArgs> | null
    where?: keys_aliasesWhereInput
    orderBy?: keys_aliasesOrderByWithRelationInput | keys_aliasesOrderByWithRelationInput[]
    cursor?: keys_aliasesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Keys_aliasesScalarFieldEnum | Keys_aliasesScalarFieldEnum[]
  }

  /**
   * product_keys.products
   */
  export type product_keys$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    where?: productsWhereInput
  }

  /**
   * product_keys.user_products_user_products_product_key_idToproduct_keys
   */
  export type product_keys$user_products_user_products_product_key_idToproduct_keysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_products
     */
    select?: user_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_products
     */
    omit?: user_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_productsInclude<ExtArgs> | null
    where?: user_productsWhereInput
  }

  /**
   * product_keys without action
   */
  export type product_keysDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_keys
     */
    select?: product_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_keys
     */
    omit?: product_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_keysInclude<ExtArgs> | null
  }


  /**
   * Model user_products
   */

  export type AggregateUser_products = {
    _count: User_productsCountAggregateOutputType | null
    _min: User_productsMinAggregateOutputType | null
    _max: User_productsMaxAggregateOutputType | null
  }

  export type User_productsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    product_id: string | null
    added_at: Date | null
    product_key_id: string | null
    code: string | null
  }

  export type User_productsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    product_id: string | null
    added_at: Date | null
    product_key_id: string | null
    code: string | null
  }

  export type User_productsCountAggregateOutputType = {
    id: number
    user_id: number
    product_id: number
    added_at: number
    product_key_id: number
    code: number
    _all: number
  }


  export type User_productsMinAggregateInputType = {
    id?: true
    user_id?: true
    product_id?: true
    added_at?: true
    product_key_id?: true
    code?: true
  }

  export type User_productsMaxAggregateInputType = {
    id?: true
    user_id?: true
    product_id?: true
    added_at?: true
    product_key_id?: true
    code?: true
  }

  export type User_productsCountAggregateInputType = {
    id?: true
    user_id?: true
    product_id?: true
    added_at?: true
    product_key_id?: true
    code?: true
    _all?: true
  }

  export type User_productsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_products to aggregate.
     */
    where?: user_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_products to fetch.
     */
    orderBy?: user_productsOrderByWithRelationInput | user_productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_products
    **/
    _count?: true | User_productsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_productsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_productsMaxAggregateInputType
  }

  export type GetUser_productsAggregateType<T extends User_productsAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_products]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_products[P]>
      : GetScalarType<T[P], AggregateUser_products[P]>
  }




  export type user_productsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_productsWhereInput
    orderBy?: user_productsOrderByWithAggregationInput | user_productsOrderByWithAggregationInput[]
    by: User_productsScalarFieldEnum[] | User_productsScalarFieldEnum
    having?: user_productsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_productsCountAggregateInputType | true
    _min?: User_productsMinAggregateInputType
    _max?: User_productsMaxAggregateInputType
  }

  export type User_productsGroupByOutputType = {
    id: string
    user_id: string
    product_id: string
    added_at: Date
    product_key_id: string | null
    code: string | null
    _count: User_productsCountAggregateOutputType | null
    _min: User_productsMinAggregateOutputType | null
    _max: User_productsMaxAggregateOutputType | null
  }

  type GetUser_productsGroupByPayload<T extends user_productsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_productsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_productsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_productsGroupByOutputType[P]>
            : GetScalarType<T[P], User_productsGroupByOutputType[P]>
        }
      >
    >


  export type user_productsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    product_id?: boolean
    added_at?: boolean
    product_key_id?: boolean
    code?: boolean
    products?: boolean | productsDefaultArgs<ExtArgs>
    product_keys_user_products_product_key_idToproduct_keys?: boolean | user_products$product_keys_user_products_product_key_idToproduct_keysArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_products"]>

  export type user_productsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    product_id?: boolean
    added_at?: boolean
    product_key_id?: boolean
    code?: boolean
    products?: boolean | productsDefaultArgs<ExtArgs>
    product_keys_user_products_product_key_idToproduct_keys?: boolean | user_products$product_keys_user_products_product_key_idToproduct_keysArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_products"]>

  export type user_productsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    product_id?: boolean
    added_at?: boolean
    product_key_id?: boolean
    code?: boolean
    products?: boolean | productsDefaultArgs<ExtArgs>
    product_keys_user_products_product_key_idToproduct_keys?: boolean | user_products$product_keys_user_products_product_key_idToproduct_keysArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_products"]>

  export type user_productsSelectScalar = {
    id?: boolean
    user_id?: boolean
    product_id?: boolean
    added_at?: boolean
    product_key_id?: boolean
    code?: boolean
  }

  export type user_productsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "product_id" | "added_at" | "product_key_id" | "code", ExtArgs["result"]["user_products"]>
  export type user_productsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | productsDefaultArgs<ExtArgs>
    product_keys_user_products_product_key_idToproduct_keys?: boolean | user_products$product_keys_user_products_product_key_idToproduct_keysArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_productsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | productsDefaultArgs<ExtArgs>
    product_keys_user_products_product_key_idToproduct_keys?: boolean | user_products$product_keys_user_products_product_key_idToproduct_keysArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_productsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | productsDefaultArgs<ExtArgs>
    product_keys_user_products_product_key_idToproduct_keys?: boolean | user_products$product_keys_user_products_product_key_idToproduct_keysArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $user_productsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_products"
    objects: {
      products: Prisma.$productsPayload<ExtArgs>
      product_keys_user_products_product_key_idToproduct_keys: Prisma.$product_keysPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      product_id: string
      added_at: Date
      product_key_id: string | null
      code: string | null
    }, ExtArgs["result"]["user_products"]>
    composites: {}
  }

  type user_productsGetPayload<S extends boolean | null | undefined | user_productsDefaultArgs> = $Result.GetResult<Prisma.$user_productsPayload, S>

  type user_productsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_productsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_productsCountAggregateInputType | true
    }

  export interface user_productsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_products'], meta: { name: 'user_products' } }
    /**
     * Find zero or one User_products that matches the filter.
     * @param {user_productsFindUniqueArgs} args - Arguments to find a User_products
     * @example
     * // Get one User_products
     * const user_products = await prisma.user_products.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_productsFindUniqueArgs>(args: SelectSubset<T, user_productsFindUniqueArgs<ExtArgs>>): Prisma__user_productsClient<$Result.GetResult<Prisma.$user_productsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_products that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_productsFindUniqueOrThrowArgs} args - Arguments to find a User_products
     * @example
     * // Get one User_products
     * const user_products = await prisma.user_products.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_productsFindUniqueOrThrowArgs>(args: SelectSubset<T, user_productsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_productsClient<$Result.GetResult<Prisma.$user_productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_productsFindFirstArgs} args - Arguments to find a User_products
     * @example
     * // Get one User_products
     * const user_products = await prisma.user_products.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_productsFindFirstArgs>(args?: SelectSubset<T, user_productsFindFirstArgs<ExtArgs>>): Prisma__user_productsClient<$Result.GetResult<Prisma.$user_productsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_products that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_productsFindFirstOrThrowArgs} args - Arguments to find a User_products
     * @example
     * // Get one User_products
     * const user_products = await prisma.user_products.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_productsFindFirstOrThrowArgs>(args?: SelectSubset<T, user_productsFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_productsClient<$Result.GetResult<Prisma.$user_productsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_productsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_products
     * const user_products = await prisma.user_products.findMany()
     * 
     * // Get first 10 User_products
     * const user_products = await prisma.user_products.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_productsWithIdOnly = await prisma.user_products.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_productsFindManyArgs>(args?: SelectSubset<T, user_productsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_products.
     * @param {user_productsCreateArgs} args - Arguments to create a User_products.
     * @example
     * // Create one User_products
     * const User_products = await prisma.user_products.create({
     *   data: {
     *     // ... data to create a User_products
     *   }
     * })
     * 
     */
    create<T extends user_productsCreateArgs>(args: SelectSubset<T, user_productsCreateArgs<ExtArgs>>): Prisma__user_productsClient<$Result.GetResult<Prisma.$user_productsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_products.
     * @param {user_productsCreateManyArgs} args - Arguments to create many User_products.
     * @example
     * // Create many User_products
     * const user_products = await prisma.user_products.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_productsCreateManyArgs>(args?: SelectSubset<T, user_productsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_products and returns the data saved in the database.
     * @param {user_productsCreateManyAndReturnArgs} args - Arguments to create many User_products.
     * @example
     * // Create many User_products
     * const user_products = await prisma.user_products.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_products and only return the `id`
     * const user_productsWithIdOnly = await prisma.user_products.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_productsCreateManyAndReturnArgs>(args?: SelectSubset<T, user_productsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_productsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_products.
     * @param {user_productsDeleteArgs} args - Arguments to delete one User_products.
     * @example
     * // Delete one User_products
     * const User_products = await prisma.user_products.delete({
     *   where: {
     *     // ... filter to delete one User_products
     *   }
     * })
     * 
     */
    delete<T extends user_productsDeleteArgs>(args: SelectSubset<T, user_productsDeleteArgs<ExtArgs>>): Prisma__user_productsClient<$Result.GetResult<Prisma.$user_productsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_products.
     * @param {user_productsUpdateArgs} args - Arguments to update one User_products.
     * @example
     * // Update one User_products
     * const user_products = await prisma.user_products.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_productsUpdateArgs>(args: SelectSubset<T, user_productsUpdateArgs<ExtArgs>>): Prisma__user_productsClient<$Result.GetResult<Prisma.$user_productsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_products.
     * @param {user_productsDeleteManyArgs} args - Arguments to filter User_products to delete.
     * @example
     * // Delete a few User_products
     * const { count } = await prisma.user_products.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_productsDeleteManyArgs>(args?: SelectSubset<T, user_productsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_productsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_products
     * const user_products = await prisma.user_products.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_productsUpdateManyArgs>(args: SelectSubset<T, user_productsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_products and returns the data updated in the database.
     * @param {user_productsUpdateManyAndReturnArgs} args - Arguments to update many User_products.
     * @example
     * // Update many User_products
     * const user_products = await prisma.user_products.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_products and only return the `id`
     * const user_productsWithIdOnly = await prisma.user_products.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_productsUpdateManyAndReturnArgs>(args: SelectSubset<T, user_productsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_productsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_products.
     * @param {user_productsUpsertArgs} args - Arguments to update or create a User_products.
     * @example
     * // Update or create a User_products
     * const user_products = await prisma.user_products.upsert({
     *   create: {
     *     // ... data to create a User_products
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_products we want to update
     *   }
     * })
     */
    upsert<T extends user_productsUpsertArgs>(args: SelectSubset<T, user_productsUpsertArgs<ExtArgs>>): Prisma__user_productsClient<$Result.GetResult<Prisma.$user_productsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_productsCountArgs} args - Arguments to filter User_products to count.
     * @example
     * // Count the number of User_products
     * const count = await prisma.user_products.count({
     *   where: {
     *     // ... the filter for the User_products we want to count
     *   }
     * })
    **/
    count<T extends user_productsCountArgs>(
      args?: Subset<T, user_productsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_productsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_productsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_productsAggregateArgs>(args: Subset<T, User_productsAggregateArgs>): Prisma.PrismaPromise<GetUser_productsAggregateType<T>>

    /**
     * Group by User_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_productsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_productsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_productsGroupByArgs['orderBy'] }
        : { orderBy?: user_productsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_productsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_productsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_products model
   */
  readonly fields: user_productsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_products.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_productsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends productsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, productsDefaultArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product_keys_user_products_product_key_idToproduct_keys<T extends user_products$product_keys_user_products_product_key_idToproduct_keysArgs<ExtArgs> = {}>(args?: Subset<T, user_products$product_keys_user_products_product_key_idToproduct_keysArgs<ExtArgs>>): Prisma__product_keysClient<$Result.GetResult<Prisma.$product_keysPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_products model
   */
  interface user_productsFieldRefs {
    readonly id: FieldRef<"user_products", 'String'>
    readonly user_id: FieldRef<"user_products", 'String'>
    readonly product_id: FieldRef<"user_products", 'String'>
    readonly added_at: FieldRef<"user_products", 'DateTime'>
    readonly product_key_id: FieldRef<"user_products", 'String'>
    readonly code: FieldRef<"user_products", 'String'>
  }
    

  // Custom InputTypes
  /**
   * user_products findUnique
   */
  export type user_productsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_products
     */
    select?: user_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_products
     */
    omit?: user_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_productsInclude<ExtArgs> | null
    /**
     * Filter, which user_products to fetch.
     */
    where: user_productsWhereUniqueInput
  }

  /**
   * user_products findUniqueOrThrow
   */
  export type user_productsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_products
     */
    select?: user_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_products
     */
    omit?: user_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_productsInclude<ExtArgs> | null
    /**
     * Filter, which user_products to fetch.
     */
    where: user_productsWhereUniqueInput
  }

  /**
   * user_products findFirst
   */
  export type user_productsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_products
     */
    select?: user_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_products
     */
    omit?: user_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_productsInclude<ExtArgs> | null
    /**
     * Filter, which user_products to fetch.
     */
    where?: user_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_products to fetch.
     */
    orderBy?: user_productsOrderByWithRelationInput | user_productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_products.
     */
    cursor?: user_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_products.
     */
    distinct?: User_productsScalarFieldEnum | User_productsScalarFieldEnum[]
  }

  /**
   * user_products findFirstOrThrow
   */
  export type user_productsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_products
     */
    select?: user_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_products
     */
    omit?: user_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_productsInclude<ExtArgs> | null
    /**
     * Filter, which user_products to fetch.
     */
    where?: user_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_products to fetch.
     */
    orderBy?: user_productsOrderByWithRelationInput | user_productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_products.
     */
    cursor?: user_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_products.
     */
    distinct?: User_productsScalarFieldEnum | User_productsScalarFieldEnum[]
  }

  /**
   * user_products findMany
   */
  export type user_productsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_products
     */
    select?: user_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_products
     */
    omit?: user_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_productsInclude<ExtArgs> | null
    /**
     * Filter, which user_products to fetch.
     */
    where?: user_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_products to fetch.
     */
    orderBy?: user_productsOrderByWithRelationInput | user_productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_products.
     */
    cursor?: user_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_products.
     */
    skip?: number
    distinct?: User_productsScalarFieldEnum | User_productsScalarFieldEnum[]
  }

  /**
   * user_products create
   */
  export type user_productsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_products
     */
    select?: user_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_products
     */
    omit?: user_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_productsInclude<ExtArgs> | null
    /**
     * The data needed to create a user_products.
     */
    data: XOR<user_productsCreateInput, user_productsUncheckedCreateInput>
  }

  /**
   * user_products createMany
   */
  export type user_productsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_products.
     */
    data: user_productsCreateManyInput | user_productsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_products createManyAndReturn
   */
  export type user_productsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_products
     */
    select?: user_productsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_products
     */
    omit?: user_productsOmit<ExtArgs> | null
    /**
     * The data used to create many user_products.
     */
    data: user_productsCreateManyInput | user_productsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_productsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_products update
   */
  export type user_productsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_products
     */
    select?: user_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_products
     */
    omit?: user_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_productsInclude<ExtArgs> | null
    /**
     * The data needed to update a user_products.
     */
    data: XOR<user_productsUpdateInput, user_productsUncheckedUpdateInput>
    /**
     * Choose, which user_products to update.
     */
    where: user_productsWhereUniqueInput
  }

  /**
   * user_products updateMany
   */
  export type user_productsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_products.
     */
    data: XOR<user_productsUpdateManyMutationInput, user_productsUncheckedUpdateManyInput>
    /**
     * Filter which user_products to update
     */
    where?: user_productsWhereInput
    /**
     * Limit how many user_products to update.
     */
    limit?: number
  }

  /**
   * user_products updateManyAndReturn
   */
  export type user_productsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_products
     */
    select?: user_productsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_products
     */
    omit?: user_productsOmit<ExtArgs> | null
    /**
     * The data used to update user_products.
     */
    data: XOR<user_productsUpdateManyMutationInput, user_productsUncheckedUpdateManyInput>
    /**
     * Filter which user_products to update
     */
    where?: user_productsWhereInput
    /**
     * Limit how many user_products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_productsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_products upsert
   */
  export type user_productsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_products
     */
    select?: user_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_products
     */
    omit?: user_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_productsInclude<ExtArgs> | null
    /**
     * The filter to search for the user_products to update in case it exists.
     */
    where: user_productsWhereUniqueInput
    /**
     * In case the user_products found by the `where` argument doesn't exist, create a new user_products with this data.
     */
    create: XOR<user_productsCreateInput, user_productsUncheckedCreateInput>
    /**
     * In case the user_products was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_productsUpdateInput, user_productsUncheckedUpdateInput>
  }

  /**
   * user_products delete
   */
  export type user_productsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_products
     */
    select?: user_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_products
     */
    omit?: user_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_productsInclude<ExtArgs> | null
    /**
     * Filter which user_products to delete.
     */
    where: user_productsWhereUniqueInput
  }

  /**
   * user_products deleteMany
   */
  export type user_productsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_products to delete
     */
    where?: user_productsWhereInput
    /**
     * Limit how many user_products to delete.
     */
    limit?: number
  }

  /**
   * user_products.product_keys_user_products_product_key_idToproduct_keys
   */
  export type user_products$product_keys_user_products_product_key_idToproduct_keysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_keys
     */
    select?: product_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_keys
     */
    omit?: product_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_keysInclude<ExtArgs> | null
    where?: product_keysWhereInput
  }

  /**
   * user_products without action
   */
  export type user_productsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_products
     */
    select?: user_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_products
     */
    omit?: user_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_productsInclude<ExtArgs> | null
  }


  /**
   * Model db_name_aliases
   */

  export type AggregateDb_name_aliases = {
    _count: Db_name_aliasesCountAggregateOutputType | null
    _min: Db_name_aliasesMinAggregateOutputType | null
    _max: Db_name_aliasesMaxAggregateOutputType | null
  }

  export type Db_name_aliasesMinAggregateOutputType = {
    id: string | null
    table_name: string | null
    alias_name: string | null
    description: string | null
  }

  export type Db_name_aliasesMaxAggregateOutputType = {
    id: string | null
    table_name: string | null
    alias_name: string | null
    description: string | null
  }

  export type Db_name_aliasesCountAggregateOutputType = {
    id: number
    table_name: number
    alias_name: number
    description: number
    _all: number
  }


  export type Db_name_aliasesMinAggregateInputType = {
    id?: true
    table_name?: true
    alias_name?: true
    description?: true
  }

  export type Db_name_aliasesMaxAggregateInputType = {
    id?: true
    table_name?: true
    alias_name?: true
    description?: true
  }

  export type Db_name_aliasesCountAggregateInputType = {
    id?: true
    table_name?: true
    alias_name?: true
    description?: true
    _all?: true
  }

  export type Db_name_aliasesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which db_name_aliases to aggregate.
     */
    where?: db_name_aliasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of db_name_aliases to fetch.
     */
    orderBy?: db_name_aliasesOrderByWithRelationInput | db_name_aliasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: db_name_aliasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` db_name_aliases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` db_name_aliases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned db_name_aliases
    **/
    _count?: true | Db_name_aliasesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Db_name_aliasesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Db_name_aliasesMaxAggregateInputType
  }

  export type GetDb_name_aliasesAggregateType<T extends Db_name_aliasesAggregateArgs> = {
        [P in keyof T & keyof AggregateDb_name_aliases]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDb_name_aliases[P]>
      : GetScalarType<T[P], AggregateDb_name_aliases[P]>
  }




  export type db_name_aliasesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: db_name_aliasesWhereInput
    orderBy?: db_name_aliasesOrderByWithAggregationInput | db_name_aliasesOrderByWithAggregationInput[]
    by: Db_name_aliasesScalarFieldEnum[] | Db_name_aliasesScalarFieldEnum
    having?: db_name_aliasesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Db_name_aliasesCountAggregateInputType | true
    _min?: Db_name_aliasesMinAggregateInputType
    _max?: Db_name_aliasesMaxAggregateInputType
  }

  export type Db_name_aliasesGroupByOutputType = {
    id: string
    table_name: string
    alias_name: string
    description: string | null
    _count: Db_name_aliasesCountAggregateOutputType | null
    _min: Db_name_aliasesMinAggregateOutputType | null
    _max: Db_name_aliasesMaxAggregateOutputType | null
  }

  type GetDb_name_aliasesGroupByPayload<T extends db_name_aliasesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Db_name_aliasesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Db_name_aliasesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Db_name_aliasesGroupByOutputType[P]>
            : GetScalarType<T[P], Db_name_aliasesGroupByOutputType[P]>
        }
      >
    >


  export type db_name_aliasesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    table_name?: boolean
    alias_name?: boolean
    description?: boolean
  }, ExtArgs["result"]["db_name_aliases"]>

  export type db_name_aliasesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    table_name?: boolean
    alias_name?: boolean
    description?: boolean
  }, ExtArgs["result"]["db_name_aliases"]>

  export type db_name_aliasesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    table_name?: boolean
    alias_name?: boolean
    description?: boolean
  }, ExtArgs["result"]["db_name_aliases"]>

  export type db_name_aliasesSelectScalar = {
    id?: boolean
    table_name?: boolean
    alias_name?: boolean
    description?: boolean
  }

  export type db_name_aliasesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "table_name" | "alias_name" | "description", ExtArgs["result"]["db_name_aliases"]>

  export type $db_name_aliasesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "db_name_aliases"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      table_name: string
      alias_name: string
      description: string | null
    }, ExtArgs["result"]["db_name_aliases"]>
    composites: {}
  }

  type db_name_aliasesGetPayload<S extends boolean | null | undefined | db_name_aliasesDefaultArgs> = $Result.GetResult<Prisma.$db_name_aliasesPayload, S>

  type db_name_aliasesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<db_name_aliasesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Db_name_aliasesCountAggregateInputType | true
    }

  export interface db_name_aliasesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['db_name_aliases'], meta: { name: 'db_name_aliases' } }
    /**
     * Find zero or one Db_name_aliases that matches the filter.
     * @param {db_name_aliasesFindUniqueArgs} args - Arguments to find a Db_name_aliases
     * @example
     * // Get one Db_name_aliases
     * const db_name_aliases = await prisma.db_name_aliases.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends db_name_aliasesFindUniqueArgs>(args: SelectSubset<T, db_name_aliasesFindUniqueArgs<ExtArgs>>): Prisma__db_name_aliasesClient<$Result.GetResult<Prisma.$db_name_aliasesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Db_name_aliases that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {db_name_aliasesFindUniqueOrThrowArgs} args - Arguments to find a Db_name_aliases
     * @example
     * // Get one Db_name_aliases
     * const db_name_aliases = await prisma.db_name_aliases.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends db_name_aliasesFindUniqueOrThrowArgs>(args: SelectSubset<T, db_name_aliasesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__db_name_aliasesClient<$Result.GetResult<Prisma.$db_name_aliasesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Db_name_aliases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {db_name_aliasesFindFirstArgs} args - Arguments to find a Db_name_aliases
     * @example
     * // Get one Db_name_aliases
     * const db_name_aliases = await prisma.db_name_aliases.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends db_name_aliasesFindFirstArgs>(args?: SelectSubset<T, db_name_aliasesFindFirstArgs<ExtArgs>>): Prisma__db_name_aliasesClient<$Result.GetResult<Prisma.$db_name_aliasesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Db_name_aliases that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {db_name_aliasesFindFirstOrThrowArgs} args - Arguments to find a Db_name_aliases
     * @example
     * // Get one Db_name_aliases
     * const db_name_aliases = await prisma.db_name_aliases.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends db_name_aliasesFindFirstOrThrowArgs>(args?: SelectSubset<T, db_name_aliasesFindFirstOrThrowArgs<ExtArgs>>): Prisma__db_name_aliasesClient<$Result.GetResult<Prisma.$db_name_aliasesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Db_name_aliases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {db_name_aliasesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Db_name_aliases
     * const db_name_aliases = await prisma.db_name_aliases.findMany()
     * 
     * // Get first 10 Db_name_aliases
     * const db_name_aliases = await prisma.db_name_aliases.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const db_name_aliasesWithIdOnly = await prisma.db_name_aliases.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends db_name_aliasesFindManyArgs>(args?: SelectSubset<T, db_name_aliasesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$db_name_aliasesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Db_name_aliases.
     * @param {db_name_aliasesCreateArgs} args - Arguments to create a Db_name_aliases.
     * @example
     * // Create one Db_name_aliases
     * const Db_name_aliases = await prisma.db_name_aliases.create({
     *   data: {
     *     // ... data to create a Db_name_aliases
     *   }
     * })
     * 
     */
    create<T extends db_name_aliasesCreateArgs>(args: SelectSubset<T, db_name_aliasesCreateArgs<ExtArgs>>): Prisma__db_name_aliasesClient<$Result.GetResult<Prisma.$db_name_aliasesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Db_name_aliases.
     * @param {db_name_aliasesCreateManyArgs} args - Arguments to create many Db_name_aliases.
     * @example
     * // Create many Db_name_aliases
     * const db_name_aliases = await prisma.db_name_aliases.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends db_name_aliasesCreateManyArgs>(args?: SelectSubset<T, db_name_aliasesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Db_name_aliases and returns the data saved in the database.
     * @param {db_name_aliasesCreateManyAndReturnArgs} args - Arguments to create many Db_name_aliases.
     * @example
     * // Create many Db_name_aliases
     * const db_name_aliases = await prisma.db_name_aliases.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Db_name_aliases and only return the `id`
     * const db_name_aliasesWithIdOnly = await prisma.db_name_aliases.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends db_name_aliasesCreateManyAndReturnArgs>(args?: SelectSubset<T, db_name_aliasesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$db_name_aliasesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Db_name_aliases.
     * @param {db_name_aliasesDeleteArgs} args - Arguments to delete one Db_name_aliases.
     * @example
     * // Delete one Db_name_aliases
     * const Db_name_aliases = await prisma.db_name_aliases.delete({
     *   where: {
     *     // ... filter to delete one Db_name_aliases
     *   }
     * })
     * 
     */
    delete<T extends db_name_aliasesDeleteArgs>(args: SelectSubset<T, db_name_aliasesDeleteArgs<ExtArgs>>): Prisma__db_name_aliasesClient<$Result.GetResult<Prisma.$db_name_aliasesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Db_name_aliases.
     * @param {db_name_aliasesUpdateArgs} args - Arguments to update one Db_name_aliases.
     * @example
     * // Update one Db_name_aliases
     * const db_name_aliases = await prisma.db_name_aliases.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends db_name_aliasesUpdateArgs>(args: SelectSubset<T, db_name_aliasesUpdateArgs<ExtArgs>>): Prisma__db_name_aliasesClient<$Result.GetResult<Prisma.$db_name_aliasesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Db_name_aliases.
     * @param {db_name_aliasesDeleteManyArgs} args - Arguments to filter Db_name_aliases to delete.
     * @example
     * // Delete a few Db_name_aliases
     * const { count } = await prisma.db_name_aliases.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends db_name_aliasesDeleteManyArgs>(args?: SelectSubset<T, db_name_aliasesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Db_name_aliases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {db_name_aliasesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Db_name_aliases
     * const db_name_aliases = await prisma.db_name_aliases.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends db_name_aliasesUpdateManyArgs>(args: SelectSubset<T, db_name_aliasesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Db_name_aliases and returns the data updated in the database.
     * @param {db_name_aliasesUpdateManyAndReturnArgs} args - Arguments to update many Db_name_aliases.
     * @example
     * // Update many Db_name_aliases
     * const db_name_aliases = await prisma.db_name_aliases.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Db_name_aliases and only return the `id`
     * const db_name_aliasesWithIdOnly = await prisma.db_name_aliases.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends db_name_aliasesUpdateManyAndReturnArgs>(args: SelectSubset<T, db_name_aliasesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$db_name_aliasesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Db_name_aliases.
     * @param {db_name_aliasesUpsertArgs} args - Arguments to update or create a Db_name_aliases.
     * @example
     * // Update or create a Db_name_aliases
     * const db_name_aliases = await prisma.db_name_aliases.upsert({
     *   create: {
     *     // ... data to create a Db_name_aliases
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Db_name_aliases we want to update
     *   }
     * })
     */
    upsert<T extends db_name_aliasesUpsertArgs>(args: SelectSubset<T, db_name_aliasesUpsertArgs<ExtArgs>>): Prisma__db_name_aliasesClient<$Result.GetResult<Prisma.$db_name_aliasesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Db_name_aliases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {db_name_aliasesCountArgs} args - Arguments to filter Db_name_aliases to count.
     * @example
     * // Count the number of Db_name_aliases
     * const count = await prisma.db_name_aliases.count({
     *   where: {
     *     // ... the filter for the Db_name_aliases we want to count
     *   }
     * })
    **/
    count<T extends db_name_aliasesCountArgs>(
      args?: Subset<T, db_name_aliasesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Db_name_aliasesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Db_name_aliases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Db_name_aliasesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Db_name_aliasesAggregateArgs>(args: Subset<T, Db_name_aliasesAggregateArgs>): Prisma.PrismaPromise<GetDb_name_aliasesAggregateType<T>>

    /**
     * Group by Db_name_aliases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {db_name_aliasesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends db_name_aliasesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: db_name_aliasesGroupByArgs['orderBy'] }
        : { orderBy?: db_name_aliasesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, db_name_aliasesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDb_name_aliasesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the db_name_aliases model
   */
  readonly fields: db_name_aliasesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for db_name_aliases.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__db_name_aliasesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the db_name_aliases model
   */
  interface db_name_aliasesFieldRefs {
    readonly id: FieldRef<"db_name_aliases", 'String'>
    readonly table_name: FieldRef<"db_name_aliases", 'String'>
    readonly alias_name: FieldRef<"db_name_aliases", 'String'>
    readonly description: FieldRef<"db_name_aliases", 'String'>
  }
    

  // Custom InputTypes
  /**
   * db_name_aliases findUnique
   */
  export type db_name_aliasesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the db_name_aliases
     */
    select?: db_name_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the db_name_aliases
     */
    omit?: db_name_aliasesOmit<ExtArgs> | null
    /**
     * Filter, which db_name_aliases to fetch.
     */
    where: db_name_aliasesWhereUniqueInput
  }

  /**
   * db_name_aliases findUniqueOrThrow
   */
  export type db_name_aliasesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the db_name_aliases
     */
    select?: db_name_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the db_name_aliases
     */
    omit?: db_name_aliasesOmit<ExtArgs> | null
    /**
     * Filter, which db_name_aliases to fetch.
     */
    where: db_name_aliasesWhereUniqueInput
  }

  /**
   * db_name_aliases findFirst
   */
  export type db_name_aliasesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the db_name_aliases
     */
    select?: db_name_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the db_name_aliases
     */
    omit?: db_name_aliasesOmit<ExtArgs> | null
    /**
     * Filter, which db_name_aliases to fetch.
     */
    where?: db_name_aliasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of db_name_aliases to fetch.
     */
    orderBy?: db_name_aliasesOrderByWithRelationInput | db_name_aliasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for db_name_aliases.
     */
    cursor?: db_name_aliasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` db_name_aliases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` db_name_aliases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of db_name_aliases.
     */
    distinct?: Db_name_aliasesScalarFieldEnum | Db_name_aliasesScalarFieldEnum[]
  }

  /**
   * db_name_aliases findFirstOrThrow
   */
  export type db_name_aliasesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the db_name_aliases
     */
    select?: db_name_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the db_name_aliases
     */
    omit?: db_name_aliasesOmit<ExtArgs> | null
    /**
     * Filter, which db_name_aliases to fetch.
     */
    where?: db_name_aliasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of db_name_aliases to fetch.
     */
    orderBy?: db_name_aliasesOrderByWithRelationInput | db_name_aliasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for db_name_aliases.
     */
    cursor?: db_name_aliasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` db_name_aliases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` db_name_aliases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of db_name_aliases.
     */
    distinct?: Db_name_aliasesScalarFieldEnum | Db_name_aliasesScalarFieldEnum[]
  }

  /**
   * db_name_aliases findMany
   */
  export type db_name_aliasesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the db_name_aliases
     */
    select?: db_name_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the db_name_aliases
     */
    omit?: db_name_aliasesOmit<ExtArgs> | null
    /**
     * Filter, which db_name_aliases to fetch.
     */
    where?: db_name_aliasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of db_name_aliases to fetch.
     */
    orderBy?: db_name_aliasesOrderByWithRelationInput | db_name_aliasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing db_name_aliases.
     */
    cursor?: db_name_aliasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` db_name_aliases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` db_name_aliases.
     */
    skip?: number
    distinct?: Db_name_aliasesScalarFieldEnum | Db_name_aliasesScalarFieldEnum[]
  }

  /**
   * db_name_aliases create
   */
  export type db_name_aliasesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the db_name_aliases
     */
    select?: db_name_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the db_name_aliases
     */
    omit?: db_name_aliasesOmit<ExtArgs> | null
    /**
     * The data needed to create a db_name_aliases.
     */
    data: XOR<db_name_aliasesCreateInput, db_name_aliasesUncheckedCreateInput>
  }

  /**
   * db_name_aliases createMany
   */
  export type db_name_aliasesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many db_name_aliases.
     */
    data: db_name_aliasesCreateManyInput | db_name_aliasesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * db_name_aliases createManyAndReturn
   */
  export type db_name_aliasesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the db_name_aliases
     */
    select?: db_name_aliasesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the db_name_aliases
     */
    omit?: db_name_aliasesOmit<ExtArgs> | null
    /**
     * The data used to create many db_name_aliases.
     */
    data: db_name_aliasesCreateManyInput | db_name_aliasesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * db_name_aliases update
   */
  export type db_name_aliasesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the db_name_aliases
     */
    select?: db_name_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the db_name_aliases
     */
    omit?: db_name_aliasesOmit<ExtArgs> | null
    /**
     * The data needed to update a db_name_aliases.
     */
    data: XOR<db_name_aliasesUpdateInput, db_name_aliasesUncheckedUpdateInput>
    /**
     * Choose, which db_name_aliases to update.
     */
    where: db_name_aliasesWhereUniqueInput
  }

  /**
   * db_name_aliases updateMany
   */
  export type db_name_aliasesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update db_name_aliases.
     */
    data: XOR<db_name_aliasesUpdateManyMutationInput, db_name_aliasesUncheckedUpdateManyInput>
    /**
     * Filter which db_name_aliases to update
     */
    where?: db_name_aliasesWhereInput
    /**
     * Limit how many db_name_aliases to update.
     */
    limit?: number
  }

  /**
   * db_name_aliases updateManyAndReturn
   */
  export type db_name_aliasesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the db_name_aliases
     */
    select?: db_name_aliasesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the db_name_aliases
     */
    omit?: db_name_aliasesOmit<ExtArgs> | null
    /**
     * The data used to update db_name_aliases.
     */
    data: XOR<db_name_aliasesUpdateManyMutationInput, db_name_aliasesUncheckedUpdateManyInput>
    /**
     * Filter which db_name_aliases to update
     */
    where?: db_name_aliasesWhereInput
    /**
     * Limit how many db_name_aliases to update.
     */
    limit?: number
  }

  /**
   * db_name_aliases upsert
   */
  export type db_name_aliasesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the db_name_aliases
     */
    select?: db_name_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the db_name_aliases
     */
    omit?: db_name_aliasesOmit<ExtArgs> | null
    /**
     * The filter to search for the db_name_aliases to update in case it exists.
     */
    where: db_name_aliasesWhereUniqueInput
    /**
     * In case the db_name_aliases found by the `where` argument doesn't exist, create a new db_name_aliases with this data.
     */
    create: XOR<db_name_aliasesCreateInput, db_name_aliasesUncheckedCreateInput>
    /**
     * In case the db_name_aliases was found with the provided `where` argument, update it with this data.
     */
    update: XOR<db_name_aliasesUpdateInput, db_name_aliasesUncheckedUpdateInput>
  }

  /**
   * db_name_aliases delete
   */
  export type db_name_aliasesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the db_name_aliases
     */
    select?: db_name_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the db_name_aliases
     */
    omit?: db_name_aliasesOmit<ExtArgs> | null
    /**
     * Filter which db_name_aliases to delete.
     */
    where: db_name_aliasesWhereUniqueInput
  }

  /**
   * db_name_aliases deleteMany
   */
  export type db_name_aliasesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which db_name_aliases to delete
     */
    where?: db_name_aliasesWhereInput
    /**
     * Limit how many db_name_aliases to delete.
     */
    limit?: number
  }

  /**
   * db_name_aliases without action
   */
  export type db_name_aliasesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the db_name_aliases
     */
    select?: db_name_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the db_name_aliases
     */
    omit?: db_name_aliasesOmit<ExtArgs> | null
  }


  /**
   * Model staff_members
   */

  export type AggregateStaff_members = {
    _count: Staff_membersCountAggregateOutputType | null
    _min: Staff_membersMinAggregateOutputType | null
    _max: Staff_membersMaxAggregateOutputType | null
  }

  export type Staff_membersMinAggregateOutputType = {
    id: string | null
    username: string | null
    email: string | null
    password: string | null
    created_at: Date | null
    updated_at: Date | null
    role: $Enums.StaffRole | null
  }

  export type Staff_membersMaxAggregateOutputType = {
    id: string | null
    username: string | null
    email: string | null
    password: string | null
    created_at: Date | null
    updated_at: Date | null
    role: $Enums.StaffRole | null
  }

  export type Staff_membersCountAggregateOutputType = {
    id: number
    username: number
    email: number
    password: number
    created_at: number
    updated_at: number
    role: number
    _all: number
  }


  export type Staff_membersMinAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    created_at?: true
    updated_at?: true
    role?: true
  }

  export type Staff_membersMaxAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    created_at?: true
    updated_at?: true
    role?: true
  }

  export type Staff_membersCountAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    created_at?: true
    updated_at?: true
    role?: true
    _all?: true
  }

  export type Staff_membersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which staff_members to aggregate.
     */
    where?: staff_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff_members to fetch.
     */
    orderBy?: staff_membersOrderByWithRelationInput | staff_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: staff_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned staff_members
    **/
    _count?: true | Staff_membersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Staff_membersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Staff_membersMaxAggregateInputType
  }

  export type GetStaff_membersAggregateType<T extends Staff_membersAggregateArgs> = {
        [P in keyof T & keyof AggregateStaff_members]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStaff_members[P]>
      : GetScalarType<T[P], AggregateStaff_members[P]>
  }




  export type staff_membersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: staff_membersWhereInput
    orderBy?: staff_membersOrderByWithAggregationInput | staff_membersOrderByWithAggregationInput[]
    by: Staff_membersScalarFieldEnum[] | Staff_membersScalarFieldEnum
    having?: staff_membersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Staff_membersCountAggregateInputType | true
    _min?: Staff_membersMinAggregateInputType
    _max?: Staff_membersMaxAggregateInputType
  }

  export type Staff_membersGroupByOutputType = {
    id: string
    username: string
    email: string
    password: string
    created_at: Date | null
    updated_at: Date | null
    role: $Enums.StaffRole
    _count: Staff_membersCountAggregateOutputType | null
    _min: Staff_membersMinAggregateOutputType | null
    _max: Staff_membersMaxAggregateOutputType | null
  }

  type GetStaff_membersGroupByPayload<T extends staff_membersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Staff_membersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Staff_membersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Staff_membersGroupByOutputType[P]>
            : GetScalarType<T[P], Staff_membersGroupByOutputType[P]>
        }
      >
    >


  export type staff_membersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    created_at?: boolean
    updated_at?: boolean
    role?: boolean
    staff_rights?: boolean | staff_members$staff_rightsArgs<ExtArgs>
    support_requests?: boolean | staff_members$support_requestsArgs<ExtArgs>
    _count?: boolean | Staff_membersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["staff_members"]>

  export type staff_membersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    created_at?: boolean
    updated_at?: boolean
    role?: boolean
  }, ExtArgs["result"]["staff_members"]>

  export type staff_membersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    created_at?: boolean
    updated_at?: boolean
    role?: boolean
  }, ExtArgs["result"]["staff_members"]>

  export type staff_membersSelectScalar = {
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    created_at?: boolean
    updated_at?: boolean
    role?: boolean
  }

  export type staff_membersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "email" | "password" | "created_at" | "updated_at" | "role", ExtArgs["result"]["staff_members"]>
  export type staff_membersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    staff_rights?: boolean | staff_members$staff_rightsArgs<ExtArgs>
    support_requests?: boolean | staff_members$support_requestsArgs<ExtArgs>
    _count?: boolean | Staff_membersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type staff_membersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type staff_membersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $staff_membersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "staff_members"
    objects: {
      staff_rights: Prisma.$staff_rightsPayload<ExtArgs>[]
      support_requests: Prisma.$support_requestsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      username: string
      email: string
      password: string
      created_at: Date | null
      updated_at: Date | null
      role: $Enums.StaffRole
    }, ExtArgs["result"]["staff_members"]>
    composites: {}
  }

  type staff_membersGetPayload<S extends boolean | null | undefined | staff_membersDefaultArgs> = $Result.GetResult<Prisma.$staff_membersPayload, S>

  type staff_membersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<staff_membersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Staff_membersCountAggregateInputType | true
    }

  export interface staff_membersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['staff_members'], meta: { name: 'staff_members' } }
    /**
     * Find zero or one Staff_members that matches the filter.
     * @param {staff_membersFindUniqueArgs} args - Arguments to find a Staff_members
     * @example
     * // Get one Staff_members
     * const staff_members = await prisma.staff_members.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends staff_membersFindUniqueArgs>(args: SelectSubset<T, staff_membersFindUniqueArgs<ExtArgs>>): Prisma__staff_membersClient<$Result.GetResult<Prisma.$staff_membersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Staff_members that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {staff_membersFindUniqueOrThrowArgs} args - Arguments to find a Staff_members
     * @example
     * // Get one Staff_members
     * const staff_members = await prisma.staff_members.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends staff_membersFindUniqueOrThrowArgs>(args: SelectSubset<T, staff_membersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__staff_membersClient<$Result.GetResult<Prisma.$staff_membersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Staff_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_membersFindFirstArgs} args - Arguments to find a Staff_members
     * @example
     * // Get one Staff_members
     * const staff_members = await prisma.staff_members.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends staff_membersFindFirstArgs>(args?: SelectSubset<T, staff_membersFindFirstArgs<ExtArgs>>): Prisma__staff_membersClient<$Result.GetResult<Prisma.$staff_membersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Staff_members that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_membersFindFirstOrThrowArgs} args - Arguments to find a Staff_members
     * @example
     * // Get one Staff_members
     * const staff_members = await prisma.staff_members.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends staff_membersFindFirstOrThrowArgs>(args?: SelectSubset<T, staff_membersFindFirstOrThrowArgs<ExtArgs>>): Prisma__staff_membersClient<$Result.GetResult<Prisma.$staff_membersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Staff_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_membersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Staff_members
     * const staff_members = await prisma.staff_members.findMany()
     * 
     * // Get first 10 Staff_members
     * const staff_members = await prisma.staff_members.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const staff_membersWithIdOnly = await prisma.staff_members.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends staff_membersFindManyArgs>(args?: SelectSubset<T, staff_membersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$staff_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Staff_members.
     * @param {staff_membersCreateArgs} args - Arguments to create a Staff_members.
     * @example
     * // Create one Staff_members
     * const Staff_members = await prisma.staff_members.create({
     *   data: {
     *     // ... data to create a Staff_members
     *   }
     * })
     * 
     */
    create<T extends staff_membersCreateArgs>(args: SelectSubset<T, staff_membersCreateArgs<ExtArgs>>): Prisma__staff_membersClient<$Result.GetResult<Prisma.$staff_membersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Staff_members.
     * @param {staff_membersCreateManyArgs} args - Arguments to create many Staff_members.
     * @example
     * // Create many Staff_members
     * const staff_members = await prisma.staff_members.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends staff_membersCreateManyArgs>(args?: SelectSubset<T, staff_membersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Staff_members and returns the data saved in the database.
     * @param {staff_membersCreateManyAndReturnArgs} args - Arguments to create many Staff_members.
     * @example
     * // Create many Staff_members
     * const staff_members = await prisma.staff_members.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Staff_members and only return the `id`
     * const staff_membersWithIdOnly = await prisma.staff_members.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends staff_membersCreateManyAndReturnArgs>(args?: SelectSubset<T, staff_membersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$staff_membersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Staff_members.
     * @param {staff_membersDeleteArgs} args - Arguments to delete one Staff_members.
     * @example
     * // Delete one Staff_members
     * const Staff_members = await prisma.staff_members.delete({
     *   where: {
     *     // ... filter to delete one Staff_members
     *   }
     * })
     * 
     */
    delete<T extends staff_membersDeleteArgs>(args: SelectSubset<T, staff_membersDeleteArgs<ExtArgs>>): Prisma__staff_membersClient<$Result.GetResult<Prisma.$staff_membersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Staff_members.
     * @param {staff_membersUpdateArgs} args - Arguments to update one Staff_members.
     * @example
     * // Update one Staff_members
     * const staff_members = await prisma.staff_members.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends staff_membersUpdateArgs>(args: SelectSubset<T, staff_membersUpdateArgs<ExtArgs>>): Prisma__staff_membersClient<$Result.GetResult<Prisma.$staff_membersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Staff_members.
     * @param {staff_membersDeleteManyArgs} args - Arguments to filter Staff_members to delete.
     * @example
     * // Delete a few Staff_members
     * const { count } = await prisma.staff_members.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends staff_membersDeleteManyArgs>(args?: SelectSubset<T, staff_membersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Staff_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_membersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Staff_members
     * const staff_members = await prisma.staff_members.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends staff_membersUpdateManyArgs>(args: SelectSubset<T, staff_membersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Staff_members and returns the data updated in the database.
     * @param {staff_membersUpdateManyAndReturnArgs} args - Arguments to update many Staff_members.
     * @example
     * // Update many Staff_members
     * const staff_members = await prisma.staff_members.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Staff_members and only return the `id`
     * const staff_membersWithIdOnly = await prisma.staff_members.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends staff_membersUpdateManyAndReturnArgs>(args: SelectSubset<T, staff_membersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$staff_membersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Staff_members.
     * @param {staff_membersUpsertArgs} args - Arguments to update or create a Staff_members.
     * @example
     * // Update or create a Staff_members
     * const staff_members = await prisma.staff_members.upsert({
     *   create: {
     *     // ... data to create a Staff_members
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Staff_members we want to update
     *   }
     * })
     */
    upsert<T extends staff_membersUpsertArgs>(args: SelectSubset<T, staff_membersUpsertArgs<ExtArgs>>): Prisma__staff_membersClient<$Result.GetResult<Prisma.$staff_membersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Staff_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_membersCountArgs} args - Arguments to filter Staff_members to count.
     * @example
     * // Count the number of Staff_members
     * const count = await prisma.staff_members.count({
     *   where: {
     *     // ... the filter for the Staff_members we want to count
     *   }
     * })
    **/
    count<T extends staff_membersCountArgs>(
      args?: Subset<T, staff_membersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Staff_membersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Staff_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Staff_membersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Staff_membersAggregateArgs>(args: Subset<T, Staff_membersAggregateArgs>): Prisma.PrismaPromise<GetStaff_membersAggregateType<T>>

    /**
     * Group by Staff_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_membersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends staff_membersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: staff_membersGroupByArgs['orderBy'] }
        : { orderBy?: staff_membersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, staff_membersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStaff_membersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the staff_members model
   */
  readonly fields: staff_membersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for staff_members.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__staff_membersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    staff_rights<T extends staff_members$staff_rightsArgs<ExtArgs> = {}>(args?: Subset<T, staff_members$staff_rightsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$staff_rightsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    support_requests<T extends staff_members$support_requestsArgs<ExtArgs> = {}>(args?: Subset<T, staff_members$support_requestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$support_requestsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the staff_members model
   */
  interface staff_membersFieldRefs {
    readonly id: FieldRef<"staff_members", 'String'>
    readonly username: FieldRef<"staff_members", 'String'>
    readonly email: FieldRef<"staff_members", 'String'>
    readonly password: FieldRef<"staff_members", 'String'>
    readonly created_at: FieldRef<"staff_members", 'DateTime'>
    readonly updated_at: FieldRef<"staff_members", 'DateTime'>
    readonly role: FieldRef<"staff_members", 'StaffRole'>
  }
    

  // Custom InputTypes
  /**
   * staff_members findUnique
   */
  export type staff_membersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_members
     */
    select?: staff_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_members
     */
    omit?: staff_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_membersInclude<ExtArgs> | null
    /**
     * Filter, which staff_members to fetch.
     */
    where: staff_membersWhereUniqueInput
  }

  /**
   * staff_members findUniqueOrThrow
   */
  export type staff_membersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_members
     */
    select?: staff_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_members
     */
    omit?: staff_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_membersInclude<ExtArgs> | null
    /**
     * Filter, which staff_members to fetch.
     */
    where: staff_membersWhereUniqueInput
  }

  /**
   * staff_members findFirst
   */
  export type staff_membersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_members
     */
    select?: staff_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_members
     */
    omit?: staff_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_membersInclude<ExtArgs> | null
    /**
     * Filter, which staff_members to fetch.
     */
    where?: staff_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff_members to fetch.
     */
    orderBy?: staff_membersOrderByWithRelationInput | staff_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for staff_members.
     */
    cursor?: staff_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of staff_members.
     */
    distinct?: Staff_membersScalarFieldEnum | Staff_membersScalarFieldEnum[]
  }

  /**
   * staff_members findFirstOrThrow
   */
  export type staff_membersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_members
     */
    select?: staff_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_members
     */
    omit?: staff_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_membersInclude<ExtArgs> | null
    /**
     * Filter, which staff_members to fetch.
     */
    where?: staff_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff_members to fetch.
     */
    orderBy?: staff_membersOrderByWithRelationInput | staff_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for staff_members.
     */
    cursor?: staff_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of staff_members.
     */
    distinct?: Staff_membersScalarFieldEnum | Staff_membersScalarFieldEnum[]
  }

  /**
   * staff_members findMany
   */
  export type staff_membersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_members
     */
    select?: staff_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_members
     */
    omit?: staff_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_membersInclude<ExtArgs> | null
    /**
     * Filter, which staff_members to fetch.
     */
    where?: staff_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff_members to fetch.
     */
    orderBy?: staff_membersOrderByWithRelationInput | staff_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing staff_members.
     */
    cursor?: staff_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff_members.
     */
    skip?: number
    distinct?: Staff_membersScalarFieldEnum | Staff_membersScalarFieldEnum[]
  }

  /**
   * staff_members create
   */
  export type staff_membersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_members
     */
    select?: staff_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_members
     */
    omit?: staff_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_membersInclude<ExtArgs> | null
    /**
     * The data needed to create a staff_members.
     */
    data: XOR<staff_membersCreateInput, staff_membersUncheckedCreateInput>
  }

  /**
   * staff_members createMany
   */
  export type staff_membersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many staff_members.
     */
    data: staff_membersCreateManyInput | staff_membersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * staff_members createManyAndReturn
   */
  export type staff_membersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_members
     */
    select?: staff_membersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the staff_members
     */
    omit?: staff_membersOmit<ExtArgs> | null
    /**
     * The data used to create many staff_members.
     */
    data: staff_membersCreateManyInput | staff_membersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * staff_members update
   */
  export type staff_membersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_members
     */
    select?: staff_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_members
     */
    omit?: staff_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_membersInclude<ExtArgs> | null
    /**
     * The data needed to update a staff_members.
     */
    data: XOR<staff_membersUpdateInput, staff_membersUncheckedUpdateInput>
    /**
     * Choose, which staff_members to update.
     */
    where: staff_membersWhereUniqueInput
  }

  /**
   * staff_members updateMany
   */
  export type staff_membersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update staff_members.
     */
    data: XOR<staff_membersUpdateManyMutationInput, staff_membersUncheckedUpdateManyInput>
    /**
     * Filter which staff_members to update
     */
    where?: staff_membersWhereInput
    /**
     * Limit how many staff_members to update.
     */
    limit?: number
  }

  /**
   * staff_members updateManyAndReturn
   */
  export type staff_membersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_members
     */
    select?: staff_membersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the staff_members
     */
    omit?: staff_membersOmit<ExtArgs> | null
    /**
     * The data used to update staff_members.
     */
    data: XOR<staff_membersUpdateManyMutationInput, staff_membersUncheckedUpdateManyInput>
    /**
     * Filter which staff_members to update
     */
    where?: staff_membersWhereInput
    /**
     * Limit how many staff_members to update.
     */
    limit?: number
  }

  /**
   * staff_members upsert
   */
  export type staff_membersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_members
     */
    select?: staff_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_members
     */
    omit?: staff_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_membersInclude<ExtArgs> | null
    /**
     * The filter to search for the staff_members to update in case it exists.
     */
    where: staff_membersWhereUniqueInput
    /**
     * In case the staff_members found by the `where` argument doesn't exist, create a new staff_members with this data.
     */
    create: XOR<staff_membersCreateInput, staff_membersUncheckedCreateInput>
    /**
     * In case the staff_members was found with the provided `where` argument, update it with this data.
     */
    update: XOR<staff_membersUpdateInput, staff_membersUncheckedUpdateInput>
  }

  /**
   * staff_members delete
   */
  export type staff_membersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_members
     */
    select?: staff_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_members
     */
    omit?: staff_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_membersInclude<ExtArgs> | null
    /**
     * Filter which staff_members to delete.
     */
    where: staff_membersWhereUniqueInput
  }

  /**
   * staff_members deleteMany
   */
  export type staff_membersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which staff_members to delete
     */
    where?: staff_membersWhereInput
    /**
     * Limit how many staff_members to delete.
     */
    limit?: number
  }

  /**
   * staff_members.staff_rights
   */
  export type staff_members$staff_rightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_rights
     */
    select?: staff_rightsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_rights
     */
    omit?: staff_rightsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_rightsInclude<ExtArgs> | null
    where?: staff_rightsWhereInput
    orderBy?: staff_rightsOrderByWithRelationInput | staff_rightsOrderByWithRelationInput[]
    cursor?: staff_rightsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Staff_rightsScalarFieldEnum | Staff_rightsScalarFieldEnum[]
  }

  /**
   * staff_members.support_requests
   */
  export type staff_members$support_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the support_requests
     */
    select?: support_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the support_requests
     */
    omit?: support_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: support_requestsInclude<ExtArgs> | null
    where?: support_requestsWhereInput
    orderBy?: support_requestsOrderByWithRelationInput | support_requestsOrderByWithRelationInput[]
    cursor?: support_requestsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Support_requestsScalarFieldEnum | Support_requestsScalarFieldEnum[]
  }

  /**
   * staff_members without action
   */
  export type staff_membersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_members
     */
    select?: staff_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_members
     */
    omit?: staff_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_membersInclude<ExtArgs> | null
  }


  /**
   * Model staff_rights
   */

  export type AggregateStaff_rights = {
    _count: Staff_rightsCountAggregateOutputType | null
    _min: Staff_rightsMinAggregateOutputType | null
    _max: Staff_rightsMaxAggregateOutputType | null
  }

  export type Staff_rightsMinAggregateOutputType = {
    id: string | null
    component_name: string | null
    can_access: boolean | null
    staff_member_id: string | null
    role: $Enums.StaffRole | null
  }

  export type Staff_rightsMaxAggregateOutputType = {
    id: string | null
    component_name: string | null
    can_access: boolean | null
    staff_member_id: string | null
    role: $Enums.StaffRole | null
  }

  export type Staff_rightsCountAggregateOutputType = {
    id: number
    component_name: number
    can_access: number
    staff_member_id: number
    role: number
    _all: number
  }


  export type Staff_rightsMinAggregateInputType = {
    id?: true
    component_name?: true
    can_access?: true
    staff_member_id?: true
    role?: true
  }

  export type Staff_rightsMaxAggregateInputType = {
    id?: true
    component_name?: true
    can_access?: true
    staff_member_id?: true
    role?: true
  }

  export type Staff_rightsCountAggregateInputType = {
    id?: true
    component_name?: true
    can_access?: true
    staff_member_id?: true
    role?: true
    _all?: true
  }

  export type Staff_rightsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which staff_rights to aggregate.
     */
    where?: staff_rightsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff_rights to fetch.
     */
    orderBy?: staff_rightsOrderByWithRelationInput | staff_rightsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: staff_rightsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff_rights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff_rights.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned staff_rights
    **/
    _count?: true | Staff_rightsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Staff_rightsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Staff_rightsMaxAggregateInputType
  }

  export type GetStaff_rightsAggregateType<T extends Staff_rightsAggregateArgs> = {
        [P in keyof T & keyof AggregateStaff_rights]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStaff_rights[P]>
      : GetScalarType<T[P], AggregateStaff_rights[P]>
  }




  export type staff_rightsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: staff_rightsWhereInput
    orderBy?: staff_rightsOrderByWithAggregationInput | staff_rightsOrderByWithAggregationInput[]
    by: Staff_rightsScalarFieldEnum[] | Staff_rightsScalarFieldEnum
    having?: staff_rightsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Staff_rightsCountAggregateInputType | true
    _min?: Staff_rightsMinAggregateInputType
    _max?: Staff_rightsMaxAggregateInputType
  }

  export type Staff_rightsGroupByOutputType = {
    id: string
    component_name: string
    can_access: boolean | null
    staff_member_id: string | null
    role: $Enums.StaffRole | null
    _count: Staff_rightsCountAggregateOutputType | null
    _min: Staff_rightsMinAggregateOutputType | null
    _max: Staff_rightsMaxAggregateOutputType | null
  }

  type GetStaff_rightsGroupByPayload<T extends staff_rightsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Staff_rightsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Staff_rightsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Staff_rightsGroupByOutputType[P]>
            : GetScalarType<T[P], Staff_rightsGroupByOutputType[P]>
        }
      >
    >


  export type staff_rightsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    component_name?: boolean
    can_access?: boolean
    staff_member_id?: boolean
    role?: boolean
    staff_members?: boolean | staff_rights$staff_membersArgs<ExtArgs>
  }, ExtArgs["result"]["staff_rights"]>

  export type staff_rightsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    component_name?: boolean
    can_access?: boolean
    staff_member_id?: boolean
    role?: boolean
    staff_members?: boolean | staff_rights$staff_membersArgs<ExtArgs>
  }, ExtArgs["result"]["staff_rights"]>

  export type staff_rightsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    component_name?: boolean
    can_access?: boolean
    staff_member_id?: boolean
    role?: boolean
    staff_members?: boolean | staff_rights$staff_membersArgs<ExtArgs>
  }, ExtArgs["result"]["staff_rights"]>

  export type staff_rightsSelectScalar = {
    id?: boolean
    component_name?: boolean
    can_access?: boolean
    staff_member_id?: boolean
    role?: boolean
  }

  export type staff_rightsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "component_name" | "can_access" | "staff_member_id" | "role", ExtArgs["result"]["staff_rights"]>
  export type staff_rightsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    staff_members?: boolean | staff_rights$staff_membersArgs<ExtArgs>
  }
  export type staff_rightsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    staff_members?: boolean | staff_rights$staff_membersArgs<ExtArgs>
  }
  export type staff_rightsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    staff_members?: boolean | staff_rights$staff_membersArgs<ExtArgs>
  }

  export type $staff_rightsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "staff_rights"
    objects: {
      staff_members: Prisma.$staff_membersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      component_name: string
      can_access: boolean | null
      staff_member_id: string | null
      role: $Enums.StaffRole | null
    }, ExtArgs["result"]["staff_rights"]>
    composites: {}
  }

  type staff_rightsGetPayload<S extends boolean | null | undefined | staff_rightsDefaultArgs> = $Result.GetResult<Prisma.$staff_rightsPayload, S>

  type staff_rightsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<staff_rightsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Staff_rightsCountAggregateInputType | true
    }

  export interface staff_rightsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['staff_rights'], meta: { name: 'staff_rights' } }
    /**
     * Find zero or one Staff_rights that matches the filter.
     * @param {staff_rightsFindUniqueArgs} args - Arguments to find a Staff_rights
     * @example
     * // Get one Staff_rights
     * const staff_rights = await prisma.staff_rights.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends staff_rightsFindUniqueArgs>(args: SelectSubset<T, staff_rightsFindUniqueArgs<ExtArgs>>): Prisma__staff_rightsClient<$Result.GetResult<Prisma.$staff_rightsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Staff_rights that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {staff_rightsFindUniqueOrThrowArgs} args - Arguments to find a Staff_rights
     * @example
     * // Get one Staff_rights
     * const staff_rights = await prisma.staff_rights.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends staff_rightsFindUniqueOrThrowArgs>(args: SelectSubset<T, staff_rightsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__staff_rightsClient<$Result.GetResult<Prisma.$staff_rightsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Staff_rights that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_rightsFindFirstArgs} args - Arguments to find a Staff_rights
     * @example
     * // Get one Staff_rights
     * const staff_rights = await prisma.staff_rights.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends staff_rightsFindFirstArgs>(args?: SelectSubset<T, staff_rightsFindFirstArgs<ExtArgs>>): Prisma__staff_rightsClient<$Result.GetResult<Prisma.$staff_rightsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Staff_rights that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_rightsFindFirstOrThrowArgs} args - Arguments to find a Staff_rights
     * @example
     * // Get one Staff_rights
     * const staff_rights = await prisma.staff_rights.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends staff_rightsFindFirstOrThrowArgs>(args?: SelectSubset<T, staff_rightsFindFirstOrThrowArgs<ExtArgs>>): Prisma__staff_rightsClient<$Result.GetResult<Prisma.$staff_rightsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Staff_rights that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_rightsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Staff_rights
     * const staff_rights = await prisma.staff_rights.findMany()
     * 
     * // Get first 10 Staff_rights
     * const staff_rights = await prisma.staff_rights.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const staff_rightsWithIdOnly = await prisma.staff_rights.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends staff_rightsFindManyArgs>(args?: SelectSubset<T, staff_rightsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$staff_rightsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Staff_rights.
     * @param {staff_rightsCreateArgs} args - Arguments to create a Staff_rights.
     * @example
     * // Create one Staff_rights
     * const Staff_rights = await prisma.staff_rights.create({
     *   data: {
     *     // ... data to create a Staff_rights
     *   }
     * })
     * 
     */
    create<T extends staff_rightsCreateArgs>(args: SelectSubset<T, staff_rightsCreateArgs<ExtArgs>>): Prisma__staff_rightsClient<$Result.GetResult<Prisma.$staff_rightsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Staff_rights.
     * @param {staff_rightsCreateManyArgs} args - Arguments to create many Staff_rights.
     * @example
     * // Create many Staff_rights
     * const staff_rights = await prisma.staff_rights.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends staff_rightsCreateManyArgs>(args?: SelectSubset<T, staff_rightsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Staff_rights and returns the data saved in the database.
     * @param {staff_rightsCreateManyAndReturnArgs} args - Arguments to create many Staff_rights.
     * @example
     * // Create many Staff_rights
     * const staff_rights = await prisma.staff_rights.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Staff_rights and only return the `id`
     * const staff_rightsWithIdOnly = await prisma.staff_rights.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends staff_rightsCreateManyAndReturnArgs>(args?: SelectSubset<T, staff_rightsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$staff_rightsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Staff_rights.
     * @param {staff_rightsDeleteArgs} args - Arguments to delete one Staff_rights.
     * @example
     * // Delete one Staff_rights
     * const Staff_rights = await prisma.staff_rights.delete({
     *   where: {
     *     // ... filter to delete one Staff_rights
     *   }
     * })
     * 
     */
    delete<T extends staff_rightsDeleteArgs>(args: SelectSubset<T, staff_rightsDeleteArgs<ExtArgs>>): Prisma__staff_rightsClient<$Result.GetResult<Prisma.$staff_rightsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Staff_rights.
     * @param {staff_rightsUpdateArgs} args - Arguments to update one Staff_rights.
     * @example
     * // Update one Staff_rights
     * const staff_rights = await prisma.staff_rights.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends staff_rightsUpdateArgs>(args: SelectSubset<T, staff_rightsUpdateArgs<ExtArgs>>): Prisma__staff_rightsClient<$Result.GetResult<Prisma.$staff_rightsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Staff_rights.
     * @param {staff_rightsDeleteManyArgs} args - Arguments to filter Staff_rights to delete.
     * @example
     * // Delete a few Staff_rights
     * const { count } = await prisma.staff_rights.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends staff_rightsDeleteManyArgs>(args?: SelectSubset<T, staff_rightsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Staff_rights.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_rightsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Staff_rights
     * const staff_rights = await prisma.staff_rights.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends staff_rightsUpdateManyArgs>(args: SelectSubset<T, staff_rightsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Staff_rights and returns the data updated in the database.
     * @param {staff_rightsUpdateManyAndReturnArgs} args - Arguments to update many Staff_rights.
     * @example
     * // Update many Staff_rights
     * const staff_rights = await prisma.staff_rights.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Staff_rights and only return the `id`
     * const staff_rightsWithIdOnly = await prisma.staff_rights.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends staff_rightsUpdateManyAndReturnArgs>(args: SelectSubset<T, staff_rightsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$staff_rightsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Staff_rights.
     * @param {staff_rightsUpsertArgs} args - Arguments to update or create a Staff_rights.
     * @example
     * // Update or create a Staff_rights
     * const staff_rights = await prisma.staff_rights.upsert({
     *   create: {
     *     // ... data to create a Staff_rights
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Staff_rights we want to update
     *   }
     * })
     */
    upsert<T extends staff_rightsUpsertArgs>(args: SelectSubset<T, staff_rightsUpsertArgs<ExtArgs>>): Prisma__staff_rightsClient<$Result.GetResult<Prisma.$staff_rightsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Staff_rights.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_rightsCountArgs} args - Arguments to filter Staff_rights to count.
     * @example
     * // Count the number of Staff_rights
     * const count = await prisma.staff_rights.count({
     *   where: {
     *     // ... the filter for the Staff_rights we want to count
     *   }
     * })
    **/
    count<T extends staff_rightsCountArgs>(
      args?: Subset<T, staff_rightsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Staff_rightsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Staff_rights.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Staff_rightsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Staff_rightsAggregateArgs>(args: Subset<T, Staff_rightsAggregateArgs>): Prisma.PrismaPromise<GetStaff_rightsAggregateType<T>>

    /**
     * Group by Staff_rights.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_rightsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends staff_rightsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: staff_rightsGroupByArgs['orderBy'] }
        : { orderBy?: staff_rightsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, staff_rightsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStaff_rightsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the staff_rights model
   */
  readonly fields: staff_rightsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for staff_rights.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__staff_rightsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    staff_members<T extends staff_rights$staff_membersArgs<ExtArgs> = {}>(args?: Subset<T, staff_rights$staff_membersArgs<ExtArgs>>): Prisma__staff_membersClient<$Result.GetResult<Prisma.$staff_membersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the staff_rights model
   */
  interface staff_rightsFieldRefs {
    readonly id: FieldRef<"staff_rights", 'String'>
    readonly component_name: FieldRef<"staff_rights", 'String'>
    readonly can_access: FieldRef<"staff_rights", 'Boolean'>
    readonly staff_member_id: FieldRef<"staff_rights", 'String'>
    readonly role: FieldRef<"staff_rights", 'StaffRole'>
  }
    

  // Custom InputTypes
  /**
   * staff_rights findUnique
   */
  export type staff_rightsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_rights
     */
    select?: staff_rightsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_rights
     */
    omit?: staff_rightsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_rightsInclude<ExtArgs> | null
    /**
     * Filter, which staff_rights to fetch.
     */
    where: staff_rightsWhereUniqueInput
  }

  /**
   * staff_rights findUniqueOrThrow
   */
  export type staff_rightsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_rights
     */
    select?: staff_rightsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_rights
     */
    omit?: staff_rightsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_rightsInclude<ExtArgs> | null
    /**
     * Filter, which staff_rights to fetch.
     */
    where: staff_rightsWhereUniqueInput
  }

  /**
   * staff_rights findFirst
   */
  export type staff_rightsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_rights
     */
    select?: staff_rightsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_rights
     */
    omit?: staff_rightsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_rightsInclude<ExtArgs> | null
    /**
     * Filter, which staff_rights to fetch.
     */
    where?: staff_rightsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff_rights to fetch.
     */
    orderBy?: staff_rightsOrderByWithRelationInput | staff_rightsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for staff_rights.
     */
    cursor?: staff_rightsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff_rights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff_rights.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of staff_rights.
     */
    distinct?: Staff_rightsScalarFieldEnum | Staff_rightsScalarFieldEnum[]
  }

  /**
   * staff_rights findFirstOrThrow
   */
  export type staff_rightsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_rights
     */
    select?: staff_rightsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_rights
     */
    omit?: staff_rightsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_rightsInclude<ExtArgs> | null
    /**
     * Filter, which staff_rights to fetch.
     */
    where?: staff_rightsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff_rights to fetch.
     */
    orderBy?: staff_rightsOrderByWithRelationInput | staff_rightsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for staff_rights.
     */
    cursor?: staff_rightsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff_rights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff_rights.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of staff_rights.
     */
    distinct?: Staff_rightsScalarFieldEnum | Staff_rightsScalarFieldEnum[]
  }

  /**
   * staff_rights findMany
   */
  export type staff_rightsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_rights
     */
    select?: staff_rightsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_rights
     */
    omit?: staff_rightsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_rightsInclude<ExtArgs> | null
    /**
     * Filter, which staff_rights to fetch.
     */
    where?: staff_rightsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff_rights to fetch.
     */
    orderBy?: staff_rightsOrderByWithRelationInput | staff_rightsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing staff_rights.
     */
    cursor?: staff_rightsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff_rights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff_rights.
     */
    skip?: number
    distinct?: Staff_rightsScalarFieldEnum | Staff_rightsScalarFieldEnum[]
  }

  /**
   * staff_rights create
   */
  export type staff_rightsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_rights
     */
    select?: staff_rightsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_rights
     */
    omit?: staff_rightsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_rightsInclude<ExtArgs> | null
    /**
     * The data needed to create a staff_rights.
     */
    data: XOR<staff_rightsCreateInput, staff_rightsUncheckedCreateInput>
  }

  /**
   * staff_rights createMany
   */
  export type staff_rightsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many staff_rights.
     */
    data: staff_rightsCreateManyInput | staff_rightsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * staff_rights createManyAndReturn
   */
  export type staff_rightsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_rights
     */
    select?: staff_rightsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the staff_rights
     */
    omit?: staff_rightsOmit<ExtArgs> | null
    /**
     * The data used to create many staff_rights.
     */
    data: staff_rightsCreateManyInput | staff_rightsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_rightsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * staff_rights update
   */
  export type staff_rightsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_rights
     */
    select?: staff_rightsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_rights
     */
    omit?: staff_rightsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_rightsInclude<ExtArgs> | null
    /**
     * The data needed to update a staff_rights.
     */
    data: XOR<staff_rightsUpdateInput, staff_rightsUncheckedUpdateInput>
    /**
     * Choose, which staff_rights to update.
     */
    where: staff_rightsWhereUniqueInput
  }

  /**
   * staff_rights updateMany
   */
  export type staff_rightsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update staff_rights.
     */
    data: XOR<staff_rightsUpdateManyMutationInput, staff_rightsUncheckedUpdateManyInput>
    /**
     * Filter which staff_rights to update
     */
    where?: staff_rightsWhereInput
    /**
     * Limit how many staff_rights to update.
     */
    limit?: number
  }

  /**
   * staff_rights updateManyAndReturn
   */
  export type staff_rightsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_rights
     */
    select?: staff_rightsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the staff_rights
     */
    omit?: staff_rightsOmit<ExtArgs> | null
    /**
     * The data used to update staff_rights.
     */
    data: XOR<staff_rightsUpdateManyMutationInput, staff_rightsUncheckedUpdateManyInput>
    /**
     * Filter which staff_rights to update
     */
    where?: staff_rightsWhereInput
    /**
     * Limit how many staff_rights to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_rightsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * staff_rights upsert
   */
  export type staff_rightsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_rights
     */
    select?: staff_rightsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_rights
     */
    omit?: staff_rightsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_rightsInclude<ExtArgs> | null
    /**
     * The filter to search for the staff_rights to update in case it exists.
     */
    where: staff_rightsWhereUniqueInput
    /**
     * In case the staff_rights found by the `where` argument doesn't exist, create a new staff_rights with this data.
     */
    create: XOR<staff_rightsCreateInput, staff_rightsUncheckedCreateInput>
    /**
     * In case the staff_rights was found with the provided `where` argument, update it with this data.
     */
    update: XOR<staff_rightsUpdateInput, staff_rightsUncheckedUpdateInput>
  }

  /**
   * staff_rights delete
   */
  export type staff_rightsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_rights
     */
    select?: staff_rightsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_rights
     */
    omit?: staff_rightsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_rightsInclude<ExtArgs> | null
    /**
     * Filter which staff_rights to delete.
     */
    where: staff_rightsWhereUniqueInput
  }

  /**
   * staff_rights deleteMany
   */
  export type staff_rightsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which staff_rights to delete
     */
    where?: staff_rightsWhereInput
    /**
     * Limit how many staff_rights to delete.
     */
    limit?: number
  }

  /**
   * staff_rights.staff_members
   */
  export type staff_rights$staff_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_members
     */
    select?: staff_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_members
     */
    omit?: staff_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_membersInclude<ExtArgs> | null
    where?: staff_membersWhereInput
  }

  /**
   * staff_rights without action
   */
  export type staff_rightsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_rights
     */
    select?: staff_rightsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the staff_rights
     */
    omit?: staff_rightsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: staff_rightsInclude<ExtArgs> | null
  }


  /**
   * Model keys_aliases
   */

  export type AggregateKeys_aliases = {
    _count: Keys_aliasesCountAggregateOutputType | null
    _avg: Keys_aliasesAvgAggregateOutputType | null
    _sum: Keys_aliasesSumAggregateOutputType | null
    _min: Keys_aliasesMinAggregateOutputType | null
    _max: Keys_aliasesMaxAggregateOutputType | null
  }

  export type Keys_aliasesAvgAggregateOutputType = {
    active_days: number | null
  }

  export type Keys_aliasesSumAggregateOutputType = {
    active_days: number | null
  }

  export type Keys_aliasesMinAggregateOutputType = {
    id: string | null
    product_key_id: string | null
    code: string | null
    purchased: boolean | null
    created_at: Date | null
    updated_at: Date | null
    activated: boolean | null
    activated_at: Date | null
    active: boolean | null
    active_days: number | null
  }

  export type Keys_aliasesMaxAggregateOutputType = {
    id: string | null
    product_key_id: string | null
    code: string | null
    purchased: boolean | null
    created_at: Date | null
    updated_at: Date | null
    activated: boolean | null
    activated_at: Date | null
    active: boolean | null
    active_days: number | null
  }

  export type Keys_aliasesCountAggregateOutputType = {
    id: number
    product_key_id: number
    code: number
    purchased: number
    created_at: number
    updated_at: number
    activated: number
    activated_at: number
    active: number
    active_days: number
    _all: number
  }


  export type Keys_aliasesAvgAggregateInputType = {
    active_days?: true
  }

  export type Keys_aliasesSumAggregateInputType = {
    active_days?: true
  }

  export type Keys_aliasesMinAggregateInputType = {
    id?: true
    product_key_id?: true
    code?: true
    purchased?: true
    created_at?: true
    updated_at?: true
    activated?: true
    activated_at?: true
    active?: true
    active_days?: true
  }

  export type Keys_aliasesMaxAggregateInputType = {
    id?: true
    product_key_id?: true
    code?: true
    purchased?: true
    created_at?: true
    updated_at?: true
    activated?: true
    activated_at?: true
    active?: true
    active_days?: true
  }

  export type Keys_aliasesCountAggregateInputType = {
    id?: true
    product_key_id?: true
    code?: true
    purchased?: true
    created_at?: true
    updated_at?: true
    activated?: true
    activated_at?: true
    active?: true
    active_days?: true
    _all?: true
  }

  export type Keys_aliasesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which keys_aliases to aggregate.
     */
    where?: keys_aliasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of keys_aliases to fetch.
     */
    orderBy?: keys_aliasesOrderByWithRelationInput | keys_aliasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: keys_aliasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` keys_aliases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` keys_aliases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned keys_aliases
    **/
    _count?: true | Keys_aliasesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Keys_aliasesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Keys_aliasesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Keys_aliasesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Keys_aliasesMaxAggregateInputType
  }

  export type GetKeys_aliasesAggregateType<T extends Keys_aliasesAggregateArgs> = {
        [P in keyof T & keyof AggregateKeys_aliases]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKeys_aliases[P]>
      : GetScalarType<T[P], AggregateKeys_aliases[P]>
  }




  export type keys_aliasesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: keys_aliasesWhereInput
    orderBy?: keys_aliasesOrderByWithAggregationInput | keys_aliasesOrderByWithAggregationInput[]
    by: Keys_aliasesScalarFieldEnum[] | Keys_aliasesScalarFieldEnum
    having?: keys_aliasesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Keys_aliasesCountAggregateInputType | true
    _avg?: Keys_aliasesAvgAggregateInputType
    _sum?: Keys_aliasesSumAggregateInputType
    _min?: Keys_aliasesMinAggregateInputType
    _max?: Keys_aliasesMaxAggregateInputType
  }

  export type Keys_aliasesGroupByOutputType = {
    id: string
    product_key_id: string
    code: string
    purchased: boolean | null
    created_at: Date | null
    updated_at: Date | null
    activated: boolean | null
    activated_at: Date | null
    active: boolean | null
    active_days: number | null
    _count: Keys_aliasesCountAggregateOutputType | null
    _avg: Keys_aliasesAvgAggregateOutputType | null
    _sum: Keys_aliasesSumAggregateOutputType | null
    _min: Keys_aliasesMinAggregateOutputType | null
    _max: Keys_aliasesMaxAggregateOutputType | null
  }

  type GetKeys_aliasesGroupByPayload<T extends keys_aliasesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Keys_aliasesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Keys_aliasesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Keys_aliasesGroupByOutputType[P]>
            : GetScalarType<T[P], Keys_aliasesGroupByOutputType[P]>
        }
      >
    >


  export type keys_aliasesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_key_id?: boolean
    code?: boolean
    purchased?: boolean
    created_at?: boolean
    updated_at?: boolean
    activated?: boolean
    activated_at?: boolean
    active?: boolean
    active_days?: boolean
    product_keys?: boolean | product_keysDefaultArgs<ExtArgs>
    order_item_units?: boolean | keys_aliases$order_item_unitsArgs<ExtArgs>
    order_items?: boolean | keys_aliases$order_itemsArgs<ExtArgs>
    _count?: boolean | Keys_aliasesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["keys_aliases"]>

  export type keys_aliasesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_key_id?: boolean
    code?: boolean
    purchased?: boolean
    created_at?: boolean
    updated_at?: boolean
    activated?: boolean
    activated_at?: boolean
    active?: boolean
    active_days?: boolean
    product_keys?: boolean | product_keysDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["keys_aliases"]>

  export type keys_aliasesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_key_id?: boolean
    code?: boolean
    purchased?: boolean
    created_at?: boolean
    updated_at?: boolean
    activated?: boolean
    activated_at?: boolean
    active?: boolean
    active_days?: boolean
    product_keys?: boolean | product_keysDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["keys_aliases"]>

  export type keys_aliasesSelectScalar = {
    id?: boolean
    product_key_id?: boolean
    code?: boolean
    purchased?: boolean
    created_at?: boolean
    updated_at?: boolean
    activated?: boolean
    activated_at?: boolean
    active?: boolean
    active_days?: boolean
  }

  export type keys_aliasesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "product_key_id" | "code" | "purchased" | "created_at" | "updated_at" | "activated" | "activated_at" | "active" | "active_days", ExtArgs["result"]["keys_aliases"]>
  export type keys_aliasesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_keys?: boolean | product_keysDefaultArgs<ExtArgs>
    order_item_units?: boolean | keys_aliases$order_item_unitsArgs<ExtArgs>
    order_items?: boolean | keys_aliases$order_itemsArgs<ExtArgs>
    _count?: boolean | Keys_aliasesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type keys_aliasesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_keys?: boolean | product_keysDefaultArgs<ExtArgs>
  }
  export type keys_aliasesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_keys?: boolean | product_keysDefaultArgs<ExtArgs>
  }

  export type $keys_aliasesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "keys_aliases"
    objects: {
      product_keys: Prisma.$product_keysPayload<ExtArgs>
      order_item_units: Prisma.$order_item_unitsPayload<ExtArgs> | null
      order_items: Prisma.$order_itemsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      product_key_id: string
      code: string
      purchased: boolean | null
      created_at: Date | null
      updated_at: Date | null
      activated: boolean | null
      activated_at: Date | null
      active: boolean | null
      active_days: number | null
    }, ExtArgs["result"]["keys_aliases"]>
    composites: {}
  }

  type keys_aliasesGetPayload<S extends boolean | null | undefined | keys_aliasesDefaultArgs> = $Result.GetResult<Prisma.$keys_aliasesPayload, S>

  type keys_aliasesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<keys_aliasesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Keys_aliasesCountAggregateInputType | true
    }

  export interface keys_aliasesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['keys_aliases'], meta: { name: 'keys_aliases' } }
    /**
     * Find zero or one Keys_aliases that matches the filter.
     * @param {keys_aliasesFindUniqueArgs} args - Arguments to find a Keys_aliases
     * @example
     * // Get one Keys_aliases
     * const keys_aliases = await prisma.keys_aliases.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends keys_aliasesFindUniqueArgs>(args: SelectSubset<T, keys_aliasesFindUniqueArgs<ExtArgs>>): Prisma__keys_aliasesClient<$Result.GetResult<Prisma.$keys_aliasesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Keys_aliases that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {keys_aliasesFindUniqueOrThrowArgs} args - Arguments to find a Keys_aliases
     * @example
     * // Get one Keys_aliases
     * const keys_aliases = await prisma.keys_aliases.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends keys_aliasesFindUniqueOrThrowArgs>(args: SelectSubset<T, keys_aliasesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__keys_aliasesClient<$Result.GetResult<Prisma.$keys_aliasesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Keys_aliases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {keys_aliasesFindFirstArgs} args - Arguments to find a Keys_aliases
     * @example
     * // Get one Keys_aliases
     * const keys_aliases = await prisma.keys_aliases.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends keys_aliasesFindFirstArgs>(args?: SelectSubset<T, keys_aliasesFindFirstArgs<ExtArgs>>): Prisma__keys_aliasesClient<$Result.GetResult<Prisma.$keys_aliasesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Keys_aliases that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {keys_aliasesFindFirstOrThrowArgs} args - Arguments to find a Keys_aliases
     * @example
     * // Get one Keys_aliases
     * const keys_aliases = await prisma.keys_aliases.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends keys_aliasesFindFirstOrThrowArgs>(args?: SelectSubset<T, keys_aliasesFindFirstOrThrowArgs<ExtArgs>>): Prisma__keys_aliasesClient<$Result.GetResult<Prisma.$keys_aliasesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Keys_aliases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {keys_aliasesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Keys_aliases
     * const keys_aliases = await prisma.keys_aliases.findMany()
     * 
     * // Get first 10 Keys_aliases
     * const keys_aliases = await prisma.keys_aliases.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const keys_aliasesWithIdOnly = await prisma.keys_aliases.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends keys_aliasesFindManyArgs>(args?: SelectSubset<T, keys_aliasesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$keys_aliasesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Keys_aliases.
     * @param {keys_aliasesCreateArgs} args - Arguments to create a Keys_aliases.
     * @example
     * // Create one Keys_aliases
     * const Keys_aliases = await prisma.keys_aliases.create({
     *   data: {
     *     // ... data to create a Keys_aliases
     *   }
     * })
     * 
     */
    create<T extends keys_aliasesCreateArgs>(args: SelectSubset<T, keys_aliasesCreateArgs<ExtArgs>>): Prisma__keys_aliasesClient<$Result.GetResult<Prisma.$keys_aliasesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Keys_aliases.
     * @param {keys_aliasesCreateManyArgs} args - Arguments to create many Keys_aliases.
     * @example
     * // Create many Keys_aliases
     * const keys_aliases = await prisma.keys_aliases.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends keys_aliasesCreateManyArgs>(args?: SelectSubset<T, keys_aliasesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Keys_aliases and returns the data saved in the database.
     * @param {keys_aliasesCreateManyAndReturnArgs} args - Arguments to create many Keys_aliases.
     * @example
     * // Create many Keys_aliases
     * const keys_aliases = await prisma.keys_aliases.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Keys_aliases and only return the `id`
     * const keys_aliasesWithIdOnly = await prisma.keys_aliases.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends keys_aliasesCreateManyAndReturnArgs>(args?: SelectSubset<T, keys_aliasesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$keys_aliasesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Keys_aliases.
     * @param {keys_aliasesDeleteArgs} args - Arguments to delete one Keys_aliases.
     * @example
     * // Delete one Keys_aliases
     * const Keys_aliases = await prisma.keys_aliases.delete({
     *   where: {
     *     // ... filter to delete one Keys_aliases
     *   }
     * })
     * 
     */
    delete<T extends keys_aliasesDeleteArgs>(args: SelectSubset<T, keys_aliasesDeleteArgs<ExtArgs>>): Prisma__keys_aliasesClient<$Result.GetResult<Prisma.$keys_aliasesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Keys_aliases.
     * @param {keys_aliasesUpdateArgs} args - Arguments to update one Keys_aliases.
     * @example
     * // Update one Keys_aliases
     * const keys_aliases = await prisma.keys_aliases.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends keys_aliasesUpdateArgs>(args: SelectSubset<T, keys_aliasesUpdateArgs<ExtArgs>>): Prisma__keys_aliasesClient<$Result.GetResult<Prisma.$keys_aliasesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Keys_aliases.
     * @param {keys_aliasesDeleteManyArgs} args - Arguments to filter Keys_aliases to delete.
     * @example
     * // Delete a few Keys_aliases
     * const { count } = await prisma.keys_aliases.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends keys_aliasesDeleteManyArgs>(args?: SelectSubset<T, keys_aliasesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Keys_aliases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {keys_aliasesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Keys_aliases
     * const keys_aliases = await prisma.keys_aliases.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends keys_aliasesUpdateManyArgs>(args: SelectSubset<T, keys_aliasesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Keys_aliases and returns the data updated in the database.
     * @param {keys_aliasesUpdateManyAndReturnArgs} args - Arguments to update many Keys_aliases.
     * @example
     * // Update many Keys_aliases
     * const keys_aliases = await prisma.keys_aliases.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Keys_aliases and only return the `id`
     * const keys_aliasesWithIdOnly = await prisma.keys_aliases.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends keys_aliasesUpdateManyAndReturnArgs>(args: SelectSubset<T, keys_aliasesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$keys_aliasesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Keys_aliases.
     * @param {keys_aliasesUpsertArgs} args - Arguments to update or create a Keys_aliases.
     * @example
     * // Update or create a Keys_aliases
     * const keys_aliases = await prisma.keys_aliases.upsert({
     *   create: {
     *     // ... data to create a Keys_aliases
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Keys_aliases we want to update
     *   }
     * })
     */
    upsert<T extends keys_aliasesUpsertArgs>(args: SelectSubset<T, keys_aliasesUpsertArgs<ExtArgs>>): Prisma__keys_aliasesClient<$Result.GetResult<Prisma.$keys_aliasesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Keys_aliases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {keys_aliasesCountArgs} args - Arguments to filter Keys_aliases to count.
     * @example
     * // Count the number of Keys_aliases
     * const count = await prisma.keys_aliases.count({
     *   where: {
     *     // ... the filter for the Keys_aliases we want to count
     *   }
     * })
    **/
    count<T extends keys_aliasesCountArgs>(
      args?: Subset<T, keys_aliasesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Keys_aliasesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Keys_aliases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Keys_aliasesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Keys_aliasesAggregateArgs>(args: Subset<T, Keys_aliasesAggregateArgs>): Prisma.PrismaPromise<GetKeys_aliasesAggregateType<T>>

    /**
     * Group by Keys_aliases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {keys_aliasesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends keys_aliasesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: keys_aliasesGroupByArgs['orderBy'] }
        : { orderBy?: keys_aliasesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, keys_aliasesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKeys_aliasesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the keys_aliases model
   */
  readonly fields: keys_aliasesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for keys_aliases.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__keys_aliasesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product_keys<T extends product_keysDefaultArgs<ExtArgs> = {}>(args?: Subset<T, product_keysDefaultArgs<ExtArgs>>): Prisma__product_keysClient<$Result.GetResult<Prisma.$product_keysPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    order_item_units<T extends keys_aliases$order_item_unitsArgs<ExtArgs> = {}>(args?: Subset<T, keys_aliases$order_item_unitsArgs<ExtArgs>>): Prisma__order_item_unitsClient<$Result.GetResult<Prisma.$order_item_unitsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    order_items<T extends keys_aliases$order_itemsArgs<ExtArgs> = {}>(args?: Subset<T, keys_aliases$order_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the keys_aliases model
   */
  interface keys_aliasesFieldRefs {
    readonly id: FieldRef<"keys_aliases", 'String'>
    readonly product_key_id: FieldRef<"keys_aliases", 'String'>
    readonly code: FieldRef<"keys_aliases", 'String'>
    readonly purchased: FieldRef<"keys_aliases", 'Boolean'>
    readonly created_at: FieldRef<"keys_aliases", 'DateTime'>
    readonly updated_at: FieldRef<"keys_aliases", 'DateTime'>
    readonly activated: FieldRef<"keys_aliases", 'Boolean'>
    readonly activated_at: FieldRef<"keys_aliases", 'DateTime'>
    readonly active: FieldRef<"keys_aliases", 'Boolean'>
    readonly active_days: FieldRef<"keys_aliases", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * keys_aliases findUnique
   */
  export type keys_aliasesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keys_aliases
     */
    select?: keys_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keys_aliases
     */
    omit?: keys_aliasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keys_aliasesInclude<ExtArgs> | null
    /**
     * Filter, which keys_aliases to fetch.
     */
    where: keys_aliasesWhereUniqueInput
  }

  /**
   * keys_aliases findUniqueOrThrow
   */
  export type keys_aliasesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keys_aliases
     */
    select?: keys_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keys_aliases
     */
    omit?: keys_aliasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keys_aliasesInclude<ExtArgs> | null
    /**
     * Filter, which keys_aliases to fetch.
     */
    where: keys_aliasesWhereUniqueInput
  }

  /**
   * keys_aliases findFirst
   */
  export type keys_aliasesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keys_aliases
     */
    select?: keys_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keys_aliases
     */
    omit?: keys_aliasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keys_aliasesInclude<ExtArgs> | null
    /**
     * Filter, which keys_aliases to fetch.
     */
    where?: keys_aliasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of keys_aliases to fetch.
     */
    orderBy?: keys_aliasesOrderByWithRelationInput | keys_aliasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for keys_aliases.
     */
    cursor?: keys_aliasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` keys_aliases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` keys_aliases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of keys_aliases.
     */
    distinct?: Keys_aliasesScalarFieldEnum | Keys_aliasesScalarFieldEnum[]
  }

  /**
   * keys_aliases findFirstOrThrow
   */
  export type keys_aliasesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keys_aliases
     */
    select?: keys_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keys_aliases
     */
    omit?: keys_aliasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keys_aliasesInclude<ExtArgs> | null
    /**
     * Filter, which keys_aliases to fetch.
     */
    where?: keys_aliasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of keys_aliases to fetch.
     */
    orderBy?: keys_aliasesOrderByWithRelationInput | keys_aliasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for keys_aliases.
     */
    cursor?: keys_aliasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` keys_aliases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` keys_aliases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of keys_aliases.
     */
    distinct?: Keys_aliasesScalarFieldEnum | Keys_aliasesScalarFieldEnum[]
  }

  /**
   * keys_aliases findMany
   */
  export type keys_aliasesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keys_aliases
     */
    select?: keys_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keys_aliases
     */
    omit?: keys_aliasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keys_aliasesInclude<ExtArgs> | null
    /**
     * Filter, which keys_aliases to fetch.
     */
    where?: keys_aliasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of keys_aliases to fetch.
     */
    orderBy?: keys_aliasesOrderByWithRelationInput | keys_aliasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing keys_aliases.
     */
    cursor?: keys_aliasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` keys_aliases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` keys_aliases.
     */
    skip?: number
    distinct?: Keys_aliasesScalarFieldEnum | Keys_aliasesScalarFieldEnum[]
  }

  /**
   * keys_aliases create
   */
  export type keys_aliasesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keys_aliases
     */
    select?: keys_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keys_aliases
     */
    omit?: keys_aliasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keys_aliasesInclude<ExtArgs> | null
    /**
     * The data needed to create a keys_aliases.
     */
    data: XOR<keys_aliasesCreateInput, keys_aliasesUncheckedCreateInput>
  }

  /**
   * keys_aliases createMany
   */
  export type keys_aliasesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many keys_aliases.
     */
    data: keys_aliasesCreateManyInput | keys_aliasesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * keys_aliases createManyAndReturn
   */
  export type keys_aliasesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keys_aliases
     */
    select?: keys_aliasesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the keys_aliases
     */
    omit?: keys_aliasesOmit<ExtArgs> | null
    /**
     * The data used to create many keys_aliases.
     */
    data: keys_aliasesCreateManyInput | keys_aliasesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keys_aliasesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * keys_aliases update
   */
  export type keys_aliasesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keys_aliases
     */
    select?: keys_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keys_aliases
     */
    omit?: keys_aliasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keys_aliasesInclude<ExtArgs> | null
    /**
     * The data needed to update a keys_aliases.
     */
    data: XOR<keys_aliasesUpdateInput, keys_aliasesUncheckedUpdateInput>
    /**
     * Choose, which keys_aliases to update.
     */
    where: keys_aliasesWhereUniqueInput
  }

  /**
   * keys_aliases updateMany
   */
  export type keys_aliasesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update keys_aliases.
     */
    data: XOR<keys_aliasesUpdateManyMutationInput, keys_aliasesUncheckedUpdateManyInput>
    /**
     * Filter which keys_aliases to update
     */
    where?: keys_aliasesWhereInput
    /**
     * Limit how many keys_aliases to update.
     */
    limit?: number
  }

  /**
   * keys_aliases updateManyAndReturn
   */
  export type keys_aliasesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keys_aliases
     */
    select?: keys_aliasesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the keys_aliases
     */
    omit?: keys_aliasesOmit<ExtArgs> | null
    /**
     * The data used to update keys_aliases.
     */
    data: XOR<keys_aliasesUpdateManyMutationInput, keys_aliasesUncheckedUpdateManyInput>
    /**
     * Filter which keys_aliases to update
     */
    where?: keys_aliasesWhereInput
    /**
     * Limit how many keys_aliases to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keys_aliasesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * keys_aliases upsert
   */
  export type keys_aliasesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keys_aliases
     */
    select?: keys_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keys_aliases
     */
    omit?: keys_aliasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keys_aliasesInclude<ExtArgs> | null
    /**
     * The filter to search for the keys_aliases to update in case it exists.
     */
    where: keys_aliasesWhereUniqueInput
    /**
     * In case the keys_aliases found by the `where` argument doesn't exist, create a new keys_aliases with this data.
     */
    create: XOR<keys_aliasesCreateInput, keys_aliasesUncheckedCreateInput>
    /**
     * In case the keys_aliases was found with the provided `where` argument, update it with this data.
     */
    update: XOR<keys_aliasesUpdateInput, keys_aliasesUncheckedUpdateInput>
  }

  /**
   * keys_aliases delete
   */
  export type keys_aliasesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keys_aliases
     */
    select?: keys_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keys_aliases
     */
    omit?: keys_aliasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keys_aliasesInclude<ExtArgs> | null
    /**
     * Filter which keys_aliases to delete.
     */
    where: keys_aliasesWhereUniqueInput
  }

  /**
   * keys_aliases deleteMany
   */
  export type keys_aliasesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which keys_aliases to delete
     */
    where?: keys_aliasesWhereInput
    /**
     * Limit how many keys_aliases to delete.
     */
    limit?: number
  }

  /**
   * keys_aliases.order_item_units
   */
  export type keys_aliases$order_item_unitsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_item_units
     */
    select?: order_item_unitsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_item_units
     */
    omit?: order_item_unitsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_item_unitsInclude<ExtArgs> | null
    where?: order_item_unitsWhereInput
  }

  /**
   * keys_aliases.order_items
   */
  export type keys_aliases$order_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    where?: order_itemsWhereInput
    orderBy?: order_itemsOrderByWithRelationInput | order_itemsOrderByWithRelationInput[]
    cursor?: order_itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Order_itemsScalarFieldEnum | Order_itemsScalarFieldEnum[]
  }

  /**
   * keys_aliases without action
   */
  export type keys_aliasesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keys_aliases
     */
    select?: keys_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keys_aliases
     */
    omit?: keys_aliasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keys_aliasesInclude<ExtArgs> | null
  }


  /**
   * Model Post
   */

  export type AggregatePost = {
    _count: PostCountAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  export type PostMinAggregateOutputType = {
    id: string | null
    raw_html: string | null
    description: string | null
    image: string | null
    button_text: string | null
    button_href: string | null
    updatedAt: Date | null
  }

  export type PostMaxAggregateOutputType = {
    id: string | null
    raw_html: string | null
    description: string | null
    image: string | null
    button_text: string | null
    button_href: string | null
    updatedAt: Date | null
  }

  export type PostCountAggregateOutputType = {
    id: number
    raw_html: number
    description: number
    image: number
    button_text: number
    button_href: number
    updatedAt: number
    _all: number
  }


  export type PostMinAggregateInputType = {
    id?: true
    raw_html?: true
    description?: true
    image?: true
    button_text?: true
    button_href?: true
    updatedAt?: true
  }

  export type PostMaxAggregateInputType = {
    id?: true
    raw_html?: true
    description?: true
    image?: true
    button_text?: true
    button_href?: true
    updatedAt?: true
  }

  export type PostCountAggregateInputType = {
    id?: true
    raw_html?: true
    description?: true
    image?: true
    button_text?: true
    button_href?: true
    updatedAt?: true
    _all?: true
  }

  export type PostAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Post to aggregate.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Posts
    **/
    _count?: true | PostCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PostMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PostMaxAggregateInputType
  }

  export type GetPostAggregateType<T extends PostAggregateArgs> = {
        [P in keyof T & keyof AggregatePost]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost[P]>
      : GetScalarType<T[P], AggregatePost[P]>
  }




  export type PostGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostWhereInput
    orderBy?: PostOrderByWithAggregationInput | PostOrderByWithAggregationInput[]
    by: PostScalarFieldEnum[] | PostScalarFieldEnum
    having?: PostScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PostCountAggregateInputType | true
    _min?: PostMinAggregateInputType
    _max?: PostMaxAggregateInputType
  }

  export type PostGroupByOutputType = {
    id: string
    raw_html: string | null
    description: string | null
    image: string | null
    button_text: string | null
    button_href: string | null
    updatedAt: Date
    _count: PostCountAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  type GetPostGroupByPayload<T extends PostGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PostGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PostGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PostGroupByOutputType[P]>
            : GetScalarType<T[P], PostGroupByOutputType[P]>
        }
      >
    >


  export type PostSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    raw_html?: boolean
    description?: boolean
    image?: boolean
    button_text?: boolean
    button_href?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["post"]>

  export type PostSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    raw_html?: boolean
    description?: boolean
    image?: boolean
    button_text?: boolean
    button_href?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["post"]>

  export type PostSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    raw_html?: boolean
    description?: boolean
    image?: boolean
    button_text?: boolean
    button_href?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["post"]>

  export type PostSelectScalar = {
    id?: boolean
    raw_html?: boolean
    description?: boolean
    image?: boolean
    button_text?: boolean
    button_href?: boolean
    updatedAt?: boolean
  }

  export type PostOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "raw_html" | "description" | "image" | "button_text" | "button_href" | "updatedAt", ExtArgs["result"]["post"]>

  export type $PostPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Post"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      raw_html: string | null
      description: string | null
      image: string | null
      button_text: string | null
      button_href: string | null
      updatedAt: Date
    }, ExtArgs["result"]["post"]>
    composites: {}
  }

  type PostGetPayload<S extends boolean | null | undefined | PostDefaultArgs> = $Result.GetResult<Prisma.$PostPayload, S>

  type PostCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PostFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PostCountAggregateInputType | true
    }

  export interface PostDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Post'], meta: { name: 'Post' } }
    /**
     * Find zero or one Post that matches the filter.
     * @param {PostFindUniqueArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PostFindUniqueArgs>(args: SelectSubset<T, PostFindUniqueArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Post that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PostFindUniqueOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PostFindUniqueOrThrowArgs>(args: SelectSubset<T, PostFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindFirstArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PostFindFirstArgs>(args?: SelectSubset<T, PostFindFirstArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindFirstOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PostFindFirstOrThrowArgs>(args?: SelectSubset<T, PostFindFirstOrThrowArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Posts
     * const posts = await prisma.post.findMany()
     * 
     * // Get first 10 Posts
     * const posts = await prisma.post.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const postWithIdOnly = await prisma.post.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PostFindManyArgs>(args?: SelectSubset<T, PostFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Post.
     * @param {PostCreateArgs} args - Arguments to create a Post.
     * @example
     * // Create one Post
     * const Post = await prisma.post.create({
     *   data: {
     *     // ... data to create a Post
     *   }
     * })
     * 
     */
    create<T extends PostCreateArgs>(args: SelectSubset<T, PostCreateArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Posts.
     * @param {PostCreateManyArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const post = await prisma.post.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PostCreateManyArgs>(args?: SelectSubset<T, PostCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Posts and returns the data saved in the database.
     * @param {PostCreateManyAndReturnArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const post = await prisma.post.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Posts and only return the `id`
     * const postWithIdOnly = await prisma.post.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PostCreateManyAndReturnArgs>(args?: SelectSubset<T, PostCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Post.
     * @param {PostDeleteArgs} args - Arguments to delete one Post.
     * @example
     * // Delete one Post
     * const Post = await prisma.post.delete({
     *   where: {
     *     // ... filter to delete one Post
     *   }
     * })
     * 
     */
    delete<T extends PostDeleteArgs>(args: SelectSubset<T, PostDeleteArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Post.
     * @param {PostUpdateArgs} args - Arguments to update one Post.
     * @example
     * // Update one Post
     * const post = await prisma.post.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PostUpdateArgs>(args: SelectSubset<T, PostUpdateArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Posts.
     * @param {PostDeleteManyArgs} args - Arguments to filter Posts to delete.
     * @example
     * // Delete a few Posts
     * const { count } = await prisma.post.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PostDeleteManyArgs>(args?: SelectSubset<T, PostDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Posts
     * const post = await prisma.post.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PostUpdateManyArgs>(args: SelectSubset<T, PostUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts and returns the data updated in the database.
     * @param {PostUpdateManyAndReturnArgs} args - Arguments to update many Posts.
     * @example
     * // Update many Posts
     * const post = await prisma.post.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Posts and only return the `id`
     * const postWithIdOnly = await prisma.post.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PostUpdateManyAndReturnArgs>(args: SelectSubset<T, PostUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Post.
     * @param {PostUpsertArgs} args - Arguments to update or create a Post.
     * @example
     * // Update or create a Post
     * const post = await prisma.post.upsert({
     *   create: {
     *     // ... data to create a Post
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post we want to update
     *   }
     * })
     */
    upsert<T extends PostUpsertArgs>(args: SelectSubset<T, PostUpsertArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostCountArgs} args - Arguments to filter Posts to count.
     * @example
     * // Count the number of Posts
     * const count = await prisma.post.count({
     *   where: {
     *     // ... the filter for the Posts we want to count
     *   }
     * })
    **/
    count<T extends PostCountArgs>(
      args?: Subset<T, PostCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PostCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PostAggregateArgs>(args: Subset<T, PostAggregateArgs>): Prisma.PrismaPromise<GetPostAggregateType<T>>

    /**
     * Group by Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PostGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PostGroupByArgs['orderBy'] }
        : { orderBy?: PostGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PostGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Post model
   */
  readonly fields: PostFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Post.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PostClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Post model
   */
  interface PostFieldRefs {
    readonly id: FieldRef<"Post", 'String'>
    readonly raw_html: FieldRef<"Post", 'String'>
    readonly description: FieldRef<"Post", 'String'>
    readonly image: FieldRef<"Post", 'String'>
    readonly button_text: FieldRef<"Post", 'String'>
    readonly button_href: FieldRef<"Post", 'String'>
    readonly updatedAt: FieldRef<"Post", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Post findUnique
   */
  export type PostFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post findUniqueOrThrow
   */
  export type PostFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post findFirst
   */
  export type PostFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post findFirstOrThrow
   */
  export type PostFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post findMany
   */
  export type PostFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Filter, which Posts to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post create
   */
  export type PostCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * The data needed to create a Post.
     */
    data: XOR<PostCreateInput, PostUncheckedCreateInput>
  }

  /**
   * Post createMany
   */
  export type PostCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Posts.
     */
    data: PostCreateManyInput | PostCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Post createManyAndReturn
   */
  export type PostCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * The data used to create many Posts.
     */
    data: PostCreateManyInput | PostCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Post update
   */
  export type PostUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * The data needed to update a Post.
     */
    data: XOR<PostUpdateInput, PostUncheckedUpdateInput>
    /**
     * Choose, which Post to update.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post updateMany
   */
  export type PostUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Posts.
     */
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyInput>
    /**
     * Filter which Posts to update
     */
    where?: PostWhereInput
    /**
     * Limit how many Posts to update.
     */
    limit?: number
  }

  /**
   * Post updateManyAndReturn
   */
  export type PostUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * The data used to update Posts.
     */
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyInput>
    /**
     * Filter which Posts to update
     */
    where?: PostWhereInput
    /**
     * Limit how many Posts to update.
     */
    limit?: number
  }

  /**
   * Post upsert
   */
  export type PostUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * The filter to search for the Post to update in case it exists.
     */
    where: PostWhereUniqueInput
    /**
     * In case the Post found by the `where` argument doesn't exist, create a new Post with this data.
     */
    create: XOR<PostCreateInput, PostUncheckedCreateInput>
    /**
     * In case the Post was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PostUpdateInput, PostUncheckedUpdateInput>
  }

  /**
   * Post delete
   */
  export type PostDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Filter which Post to delete.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post deleteMany
   */
  export type PostDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Posts to delete
     */
    where?: PostWhereInput
    /**
     * Limit how many Posts to delete.
     */
    limit?: number
  }

  /**
   * Post without action
   */
  export type PostDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
  }


  /**
   * Model Draft
   */

  export type AggregateDraft = {
    _count: DraftCountAggregateOutputType | null
    _min: DraftMinAggregateOutputType | null
    _max: DraftMaxAggregateOutputType | null
  }

  export type DraftMinAggregateOutputType = {
    id: string | null
    raw_html: string | null
    description: string | null
    image: string | null
    button_text: string | null
    button_href: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DraftMaxAggregateOutputType = {
    id: string | null
    raw_html: string | null
    description: string | null
    image: string | null
    button_text: string | null
    button_href: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DraftCountAggregateOutputType = {
    id: number
    raw_html: number
    description: number
    image: number
    button_text: number
    button_href: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DraftMinAggregateInputType = {
    id?: true
    raw_html?: true
    description?: true
    image?: true
    button_text?: true
    button_href?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DraftMaxAggregateInputType = {
    id?: true
    raw_html?: true
    description?: true
    image?: true
    button_text?: true
    button_href?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DraftCountAggregateInputType = {
    id?: true
    raw_html?: true
    description?: true
    image?: true
    button_text?: true
    button_href?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DraftAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Draft to aggregate.
     */
    where?: DraftWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Drafts to fetch.
     */
    orderBy?: DraftOrderByWithRelationInput | DraftOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DraftWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Drafts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Drafts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Drafts
    **/
    _count?: true | DraftCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DraftMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DraftMaxAggregateInputType
  }

  export type GetDraftAggregateType<T extends DraftAggregateArgs> = {
        [P in keyof T & keyof AggregateDraft]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDraft[P]>
      : GetScalarType<T[P], AggregateDraft[P]>
  }




  export type DraftGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DraftWhereInput
    orderBy?: DraftOrderByWithAggregationInput | DraftOrderByWithAggregationInput[]
    by: DraftScalarFieldEnum[] | DraftScalarFieldEnum
    having?: DraftScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DraftCountAggregateInputType | true
    _min?: DraftMinAggregateInputType
    _max?: DraftMaxAggregateInputType
  }

  export type DraftGroupByOutputType = {
    id: string
    raw_html: string | null
    description: string | null
    image: string | null
    button_text: string | null
    button_href: string | null
    createdAt: Date
    updatedAt: Date
    _count: DraftCountAggregateOutputType | null
    _min: DraftMinAggregateOutputType | null
    _max: DraftMaxAggregateOutputType | null
  }

  type GetDraftGroupByPayload<T extends DraftGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DraftGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DraftGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DraftGroupByOutputType[P]>
            : GetScalarType<T[P], DraftGroupByOutputType[P]>
        }
      >
    >


  export type DraftSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    raw_html?: boolean
    description?: boolean
    image?: boolean
    button_text?: boolean
    button_href?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["draft"]>

  export type DraftSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    raw_html?: boolean
    description?: boolean
    image?: boolean
    button_text?: boolean
    button_href?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["draft"]>

  export type DraftSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    raw_html?: boolean
    description?: boolean
    image?: boolean
    button_text?: boolean
    button_href?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["draft"]>

  export type DraftSelectScalar = {
    id?: boolean
    raw_html?: boolean
    description?: boolean
    image?: boolean
    button_text?: boolean
    button_href?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type DraftOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "raw_html" | "description" | "image" | "button_text" | "button_href" | "createdAt" | "updatedAt", ExtArgs["result"]["draft"]>

  export type $DraftPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Draft"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      raw_html: string | null
      description: string | null
      image: string | null
      button_text: string | null
      button_href: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["draft"]>
    composites: {}
  }

  type DraftGetPayload<S extends boolean | null | undefined | DraftDefaultArgs> = $Result.GetResult<Prisma.$DraftPayload, S>

  type DraftCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DraftFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DraftCountAggregateInputType | true
    }

  export interface DraftDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Draft'], meta: { name: 'Draft' } }
    /**
     * Find zero or one Draft that matches the filter.
     * @param {DraftFindUniqueArgs} args - Arguments to find a Draft
     * @example
     * // Get one Draft
     * const draft = await prisma.draft.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DraftFindUniqueArgs>(args: SelectSubset<T, DraftFindUniqueArgs<ExtArgs>>): Prisma__DraftClient<$Result.GetResult<Prisma.$DraftPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Draft that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DraftFindUniqueOrThrowArgs} args - Arguments to find a Draft
     * @example
     * // Get one Draft
     * const draft = await prisma.draft.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DraftFindUniqueOrThrowArgs>(args: SelectSubset<T, DraftFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DraftClient<$Result.GetResult<Prisma.$DraftPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Draft that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DraftFindFirstArgs} args - Arguments to find a Draft
     * @example
     * // Get one Draft
     * const draft = await prisma.draft.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DraftFindFirstArgs>(args?: SelectSubset<T, DraftFindFirstArgs<ExtArgs>>): Prisma__DraftClient<$Result.GetResult<Prisma.$DraftPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Draft that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DraftFindFirstOrThrowArgs} args - Arguments to find a Draft
     * @example
     * // Get one Draft
     * const draft = await prisma.draft.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DraftFindFirstOrThrowArgs>(args?: SelectSubset<T, DraftFindFirstOrThrowArgs<ExtArgs>>): Prisma__DraftClient<$Result.GetResult<Prisma.$DraftPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Drafts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DraftFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Drafts
     * const drafts = await prisma.draft.findMany()
     * 
     * // Get first 10 Drafts
     * const drafts = await prisma.draft.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const draftWithIdOnly = await prisma.draft.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DraftFindManyArgs>(args?: SelectSubset<T, DraftFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DraftPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Draft.
     * @param {DraftCreateArgs} args - Arguments to create a Draft.
     * @example
     * // Create one Draft
     * const Draft = await prisma.draft.create({
     *   data: {
     *     // ... data to create a Draft
     *   }
     * })
     * 
     */
    create<T extends DraftCreateArgs>(args: SelectSubset<T, DraftCreateArgs<ExtArgs>>): Prisma__DraftClient<$Result.GetResult<Prisma.$DraftPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Drafts.
     * @param {DraftCreateManyArgs} args - Arguments to create many Drafts.
     * @example
     * // Create many Drafts
     * const draft = await prisma.draft.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DraftCreateManyArgs>(args?: SelectSubset<T, DraftCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Drafts and returns the data saved in the database.
     * @param {DraftCreateManyAndReturnArgs} args - Arguments to create many Drafts.
     * @example
     * // Create many Drafts
     * const draft = await prisma.draft.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Drafts and only return the `id`
     * const draftWithIdOnly = await prisma.draft.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DraftCreateManyAndReturnArgs>(args?: SelectSubset<T, DraftCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DraftPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Draft.
     * @param {DraftDeleteArgs} args - Arguments to delete one Draft.
     * @example
     * // Delete one Draft
     * const Draft = await prisma.draft.delete({
     *   where: {
     *     // ... filter to delete one Draft
     *   }
     * })
     * 
     */
    delete<T extends DraftDeleteArgs>(args: SelectSubset<T, DraftDeleteArgs<ExtArgs>>): Prisma__DraftClient<$Result.GetResult<Prisma.$DraftPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Draft.
     * @param {DraftUpdateArgs} args - Arguments to update one Draft.
     * @example
     * // Update one Draft
     * const draft = await prisma.draft.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DraftUpdateArgs>(args: SelectSubset<T, DraftUpdateArgs<ExtArgs>>): Prisma__DraftClient<$Result.GetResult<Prisma.$DraftPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Drafts.
     * @param {DraftDeleteManyArgs} args - Arguments to filter Drafts to delete.
     * @example
     * // Delete a few Drafts
     * const { count } = await prisma.draft.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DraftDeleteManyArgs>(args?: SelectSubset<T, DraftDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Drafts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DraftUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Drafts
     * const draft = await prisma.draft.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DraftUpdateManyArgs>(args: SelectSubset<T, DraftUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Drafts and returns the data updated in the database.
     * @param {DraftUpdateManyAndReturnArgs} args - Arguments to update many Drafts.
     * @example
     * // Update many Drafts
     * const draft = await prisma.draft.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Drafts and only return the `id`
     * const draftWithIdOnly = await prisma.draft.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DraftUpdateManyAndReturnArgs>(args: SelectSubset<T, DraftUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DraftPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Draft.
     * @param {DraftUpsertArgs} args - Arguments to update or create a Draft.
     * @example
     * // Update or create a Draft
     * const draft = await prisma.draft.upsert({
     *   create: {
     *     // ... data to create a Draft
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Draft we want to update
     *   }
     * })
     */
    upsert<T extends DraftUpsertArgs>(args: SelectSubset<T, DraftUpsertArgs<ExtArgs>>): Prisma__DraftClient<$Result.GetResult<Prisma.$DraftPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Drafts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DraftCountArgs} args - Arguments to filter Drafts to count.
     * @example
     * // Count the number of Drafts
     * const count = await prisma.draft.count({
     *   where: {
     *     // ... the filter for the Drafts we want to count
     *   }
     * })
    **/
    count<T extends DraftCountArgs>(
      args?: Subset<T, DraftCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DraftCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Draft.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DraftAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DraftAggregateArgs>(args: Subset<T, DraftAggregateArgs>): Prisma.PrismaPromise<GetDraftAggregateType<T>>

    /**
     * Group by Draft.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DraftGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DraftGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DraftGroupByArgs['orderBy'] }
        : { orderBy?: DraftGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DraftGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDraftGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Draft model
   */
  readonly fields: DraftFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Draft.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DraftClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Draft model
   */
  interface DraftFieldRefs {
    readonly id: FieldRef<"Draft", 'String'>
    readonly raw_html: FieldRef<"Draft", 'String'>
    readonly description: FieldRef<"Draft", 'String'>
    readonly image: FieldRef<"Draft", 'String'>
    readonly button_text: FieldRef<"Draft", 'String'>
    readonly button_href: FieldRef<"Draft", 'String'>
    readonly createdAt: FieldRef<"Draft", 'DateTime'>
    readonly updatedAt: FieldRef<"Draft", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Draft findUnique
   */
  export type DraftFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Draft
     */
    select?: DraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Draft
     */
    omit?: DraftOmit<ExtArgs> | null
    /**
     * Filter, which Draft to fetch.
     */
    where: DraftWhereUniqueInput
  }

  /**
   * Draft findUniqueOrThrow
   */
  export type DraftFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Draft
     */
    select?: DraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Draft
     */
    omit?: DraftOmit<ExtArgs> | null
    /**
     * Filter, which Draft to fetch.
     */
    where: DraftWhereUniqueInput
  }

  /**
   * Draft findFirst
   */
  export type DraftFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Draft
     */
    select?: DraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Draft
     */
    omit?: DraftOmit<ExtArgs> | null
    /**
     * Filter, which Draft to fetch.
     */
    where?: DraftWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Drafts to fetch.
     */
    orderBy?: DraftOrderByWithRelationInput | DraftOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Drafts.
     */
    cursor?: DraftWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Drafts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Drafts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Drafts.
     */
    distinct?: DraftScalarFieldEnum | DraftScalarFieldEnum[]
  }

  /**
   * Draft findFirstOrThrow
   */
  export type DraftFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Draft
     */
    select?: DraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Draft
     */
    omit?: DraftOmit<ExtArgs> | null
    /**
     * Filter, which Draft to fetch.
     */
    where?: DraftWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Drafts to fetch.
     */
    orderBy?: DraftOrderByWithRelationInput | DraftOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Drafts.
     */
    cursor?: DraftWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Drafts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Drafts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Drafts.
     */
    distinct?: DraftScalarFieldEnum | DraftScalarFieldEnum[]
  }

  /**
   * Draft findMany
   */
  export type DraftFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Draft
     */
    select?: DraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Draft
     */
    omit?: DraftOmit<ExtArgs> | null
    /**
     * Filter, which Drafts to fetch.
     */
    where?: DraftWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Drafts to fetch.
     */
    orderBy?: DraftOrderByWithRelationInput | DraftOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Drafts.
     */
    cursor?: DraftWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Drafts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Drafts.
     */
    skip?: number
    distinct?: DraftScalarFieldEnum | DraftScalarFieldEnum[]
  }

  /**
   * Draft create
   */
  export type DraftCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Draft
     */
    select?: DraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Draft
     */
    omit?: DraftOmit<ExtArgs> | null
    /**
     * The data needed to create a Draft.
     */
    data: XOR<DraftCreateInput, DraftUncheckedCreateInput>
  }

  /**
   * Draft createMany
   */
  export type DraftCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Drafts.
     */
    data: DraftCreateManyInput | DraftCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Draft createManyAndReturn
   */
  export type DraftCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Draft
     */
    select?: DraftSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Draft
     */
    omit?: DraftOmit<ExtArgs> | null
    /**
     * The data used to create many Drafts.
     */
    data: DraftCreateManyInput | DraftCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Draft update
   */
  export type DraftUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Draft
     */
    select?: DraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Draft
     */
    omit?: DraftOmit<ExtArgs> | null
    /**
     * The data needed to update a Draft.
     */
    data: XOR<DraftUpdateInput, DraftUncheckedUpdateInput>
    /**
     * Choose, which Draft to update.
     */
    where: DraftWhereUniqueInput
  }

  /**
   * Draft updateMany
   */
  export type DraftUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Drafts.
     */
    data: XOR<DraftUpdateManyMutationInput, DraftUncheckedUpdateManyInput>
    /**
     * Filter which Drafts to update
     */
    where?: DraftWhereInput
    /**
     * Limit how many Drafts to update.
     */
    limit?: number
  }

  /**
   * Draft updateManyAndReturn
   */
  export type DraftUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Draft
     */
    select?: DraftSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Draft
     */
    omit?: DraftOmit<ExtArgs> | null
    /**
     * The data used to update Drafts.
     */
    data: XOR<DraftUpdateManyMutationInput, DraftUncheckedUpdateManyInput>
    /**
     * Filter which Drafts to update
     */
    where?: DraftWhereInput
    /**
     * Limit how many Drafts to update.
     */
    limit?: number
  }

  /**
   * Draft upsert
   */
  export type DraftUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Draft
     */
    select?: DraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Draft
     */
    omit?: DraftOmit<ExtArgs> | null
    /**
     * The filter to search for the Draft to update in case it exists.
     */
    where: DraftWhereUniqueInput
    /**
     * In case the Draft found by the `where` argument doesn't exist, create a new Draft with this data.
     */
    create: XOR<DraftCreateInput, DraftUncheckedCreateInput>
    /**
     * In case the Draft was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DraftUpdateInput, DraftUncheckedUpdateInput>
  }

  /**
   * Draft delete
   */
  export type DraftDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Draft
     */
    select?: DraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Draft
     */
    omit?: DraftOmit<ExtArgs> | null
    /**
     * Filter which Draft to delete.
     */
    where: DraftWhereUniqueInput
  }

  /**
   * Draft deleteMany
   */
  export type DraftDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Drafts to delete
     */
    where?: DraftWhereInput
    /**
     * Limit how many Drafts to delete.
     */
    limit?: number
  }

  /**
   * Draft without action
   */
  export type DraftDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Draft
     */
    select?: DraftSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Draft
     */
    omit?: DraftOmit<ExtArgs> | null
  }


  /**
   * Model key_events
   */

  export type AggregateKey_events = {
    _count: Key_eventsCountAggregateOutputType | null
    _min: Key_eventsMinAggregateOutputType | null
    _max: Key_eventsMaxAggregateOutputType | null
  }

  export type Key_eventsMinAggregateOutputType = {
    id: string | null
    product_key_id: string | null
    alias_id: string | null
    order_id: string | null
    order_item_id: string | null
    event: $Enums.KeyEventType | null
    created_at: Date | null
  }

  export type Key_eventsMaxAggregateOutputType = {
    id: string | null
    product_key_id: string | null
    alias_id: string | null
    order_id: string | null
    order_item_id: string | null
    event: $Enums.KeyEventType | null
    created_at: Date | null
  }

  export type Key_eventsCountAggregateOutputType = {
    id: number
    product_key_id: number
    alias_id: number
    order_id: number
    order_item_id: number
    event: number
    details: number
    created_at: number
    _all: number
  }


  export type Key_eventsMinAggregateInputType = {
    id?: true
    product_key_id?: true
    alias_id?: true
    order_id?: true
    order_item_id?: true
    event?: true
    created_at?: true
  }

  export type Key_eventsMaxAggregateInputType = {
    id?: true
    product_key_id?: true
    alias_id?: true
    order_id?: true
    order_item_id?: true
    event?: true
    created_at?: true
  }

  export type Key_eventsCountAggregateInputType = {
    id?: true
    product_key_id?: true
    alias_id?: true
    order_id?: true
    order_item_id?: true
    event?: true
    details?: true
    created_at?: true
    _all?: true
  }

  export type Key_eventsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which key_events to aggregate.
     */
    where?: key_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of key_events to fetch.
     */
    orderBy?: key_eventsOrderByWithRelationInput | key_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: key_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` key_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` key_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned key_events
    **/
    _count?: true | Key_eventsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Key_eventsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Key_eventsMaxAggregateInputType
  }

  export type GetKey_eventsAggregateType<T extends Key_eventsAggregateArgs> = {
        [P in keyof T & keyof AggregateKey_events]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKey_events[P]>
      : GetScalarType<T[P], AggregateKey_events[P]>
  }




  export type key_eventsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: key_eventsWhereInput
    orderBy?: key_eventsOrderByWithAggregationInput | key_eventsOrderByWithAggregationInput[]
    by: Key_eventsScalarFieldEnum[] | Key_eventsScalarFieldEnum
    having?: key_eventsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Key_eventsCountAggregateInputType | true
    _min?: Key_eventsMinAggregateInputType
    _max?: Key_eventsMaxAggregateInputType
  }

  export type Key_eventsGroupByOutputType = {
    id: string
    product_key_id: string | null
    alias_id: string | null
    order_id: string | null
    order_item_id: string | null
    event: $Enums.KeyEventType
    details: JsonValue | null
    created_at: Date
    _count: Key_eventsCountAggregateOutputType | null
    _min: Key_eventsMinAggregateOutputType | null
    _max: Key_eventsMaxAggregateOutputType | null
  }

  type GetKey_eventsGroupByPayload<T extends key_eventsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Key_eventsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Key_eventsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Key_eventsGroupByOutputType[P]>
            : GetScalarType<T[P], Key_eventsGroupByOutputType[P]>
        }
      >
    >


  export type key_eventsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_key_id?: boolean
    alias_id?: boolean
    order_id?: boolean
    order_item_id?: boolean
    event?: boolean
    details?: boolean
    created_at?: boolean
    product_keys?: boolean | key_events$product_keysArgs<ExtArgs>
  }, ExtArgs["result"]["key_events"]>

  export type key_eventsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_key_id?: boolean
    alias_id?: boolean
    order_id?: boolean
    order_item_id?: boolean
    event?: boolean
    details?: boolean
    created_at?: boolean
    product_keys?: boolean | key_events$product_keysArgs<ExtArgs>
  }, ExtArgs["result"]["key_events"]>

  export type key_eventsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_key_id?: boolean
    alias_id?: boolean
    order_id?: boolean
    order_item_id?: boolean
    event?: boolean
    details?: boolean
    created_at?: boolean
    product_keys?: boolean | key_events$product_keysArgs<ExtArgs>
  }, ExtArgs["result"]["key_events"]>

  export type key_eventsSelectScalar = {
    id?: boolean
    product_key_id?: boolean
    alias_id?: boolean
    order_id?: boolean
    order_item_id?: boolean
    event?: boolean
    details?: boolean
    created_at?: boolean
  }

  export type key_eventsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "product_key_id" | "alias_id" | "order_id" | "order_item_id" | "event" | "details" | "created_at", ExtArgs["result"]["key_events"]>
  export type key_eventsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_keys?: boolean | key_events$product_keysArgs<ExtArgs>
  }
  export type key_eventsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_keys?: boolean | key_events$product_keysArgs<ExtArgs>
  }
  export type key_eventsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_keys?: boolean | key_events$product_keysArgs<ExtArgs>
  }

  export type $key_eventsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "key_events"
    objects: {
      product_keys: Prisma.$product_keysPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      product_key_id: string | null
      alias_id: string | null
      order_id: string | null
      order_item_id: string | null
      event: $Enums.KeyEventType
      details: Prisma.JsonValue | null
      created_at: Date
    }, ExtArgs["result"]["key_events"]>
    composites: {}
  }

  type key_eventsGetPayload<S extends boolean | null | undefined | key_eventsDefaultArgs> = $Result.GetResult<Prisma.$key_eventsPayload, S>

  type key_eventsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<key_eventsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Key_eventsCountAggregateInputType | true
    }

  export interface key_eventsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['key_events'], meta: { name: 'key_events' } }
    /**
     * Find zero or one Key_events that matches the filter.
     * @param {key_eventsFindUniqueArgs} args - Arguments to find a Key_events
     * @example
     * // Get one Key_events
     * const key_events = await prisma.key_events.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends key_eventsFindUniqueArgs>(args: SelectSubset<T, key_eventsFindUniqueArgs<ExtArgs>>): Prisma__key_eventsClient<$Result.GetResult<Prisma.$key_eventsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Key_events that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {key_eventsFindUniqueOrThrowArgs} args - Arguments to find a Key_events
     * @example
     * // Get one Key_events
     * const key_events = await prisma.key_events.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends key_eventsFindUniqueOrThrowArgs>(args: SelectSubset<T, key_eventsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__key_eventsClient<$Result.GetResult<Prisma.$key_eventsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Key_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {key_eventsFindFirstArgs} args - Arguments to find a Key_events
     * @example
     * // Get one Key_events
     * const key_events = await prisma.key_events.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends key_eventsFindFirstArgs>(args?: SelectSubset<T, key_eventsFindFirstArgs<ExtArgs>>): Prisma__key_eventsClient<$Result.GetResult<Prisma.$key_eventsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Key_events that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {key_eventsFindFirstOrThrowArgs} args - Arguments to find a Key_events
     * @example
     * // Get one Key_events
     * const key_events = await prisma.key_events.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends key_eventsFindFirstOrThrowArgs>(args?: SelectSubset<T, key_eventsFindFirstOrThrowArgs<ExtArgs>>): Prisma__key_eventsClient<$Result.GetResult<Prisma.$key_eventsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Key_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {key_eventsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Key_events
     * const key_events = await prisma.key_events.findMany()
     * 
     * // Get first 10 Key_events
     * const key_events = await prisma.key_events.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const key_eventsWithIdOnly = await prisma.key_events.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends key_eventsFindManyArgs>(args?: SelectSubset<T, key_eventsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$key_eventsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Key_events.
     * @param {key_eventsCreateArgs} args - Arguments to create a Key_events.
     * @example
     * // Create one Key_events
     * const Key_events = await prisma.key_events.create({
     *   data: {
     *     // ... data to create a Key_events
     *   }
     * })
     * 
     */
    create<T extends key_eventsCreateArgs>(args: SelectSubset<T, key_eventsCreateArgs<ExtArgs>>): Prisma__key_eventsClient<$Result.GetResult<Prisma.$key_eventsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Key_events.
     * @param {key_eventsCreateManyArgs} args - Arguments to create many Key_events.
     * @example
     * // Create many Key_events
     * const key_events = await prisma.key_events.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends key_eventsCreateManyArgs>(args?: SelectSubset<T, key_eventsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Key_events and returns the data saved in the database.
     * @param {key_eventsCreateManyAndReturnArgs} args - Arguments to create many Key_events.
     * @example
     * // Create many Key_events
     * const key_events = await prisma.key_events.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Key_events and only return the `id`
     * const key_eventsWithIdOnly = await prisma.key_events.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends key_eventsCreateManyAndReturnArgs>(args?: SelectSubset<T, key_eventsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$key_eventsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Key_events.
     * @param {key_eventsDeleteArgs} args - Arguments to delete one Key_events.
     * @example
     * // Delete one Key_events
     * const Key_events = await prisma.key_events.delete({
     *   where: {
     *     // ... filter to delete one Key_events
     *   }
     * })
     * 
     */
    delete<T extends key_eventsDeleteArgs>(args: SelectSubset<T, key_eventsDeleteArgs<ExtArgs>>): Prisma__key_eventsClient<$Result.GetResult<Prisma.$key_eventsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Key_events.
     * @param {key_eventsUpdateArgs} args - Arguments to update one Key_events.
     * @example
     * // Update one Key_events
     * const key_events = await prisma.key_events.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends key_eventsUpdateArgs>(args: SelectSubset<T, key_eventsUpdateArgs<ExtArgs>>): Prisma__key_eventsClient<$Result.GetResult<Prisma.$key_eventsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Key_events.
     * @param {key_eventsDeleteManyArgs} args - Arguments to filter Key_events to delete.
     * @example
     * // Delete a few Key_events
     * const { count } = await prisma.key_events.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends key_eventsDeleteManyArgs>(args?: SelectSubset<T, key_eventsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Key_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {key_eventsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Key_events
     * const key_events = await prisma.key_events.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends key_eventsUpdateManyArgs>(args: SelectSubset<T, key_eventsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Key_events and returns the data updated in the database.
     * @param {key_eventsUpdateManyAndReturnArgs} args - Arguments to update many Key_events.
     * @example
     * // Update many Key_events
     * const key_events = await prisma.key_events.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Key_events and only return the `id`
     * const key_eventsWithIdOnly = await prisma.key_events.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends key_eventsUpdateManyAndReturnArgs>(args: SelectSubset<T, key_eventsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$key_eventsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Key_events.
     * @param {key_eventsUpsertArgs} args - Arguments to update or create a Key_events.
     * @example
     * // Update or create a Key_events
     * const key_events = await prisma.key_events.upsert({
     *   create: {
     *     // ... data to create a Key_events
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Key_events we want to update
     *   }
     * })
     */
    upsert<T extends key_eventsUpsertArgs>(args: SelectSubset<T, key_eventsUpsertArgs<ExtArgs>>): Prisma__key_eventsClient<$Result.GetResult<Prisma.$key_eventsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Key_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {key_eventsCountArgs} args - Arguments to filter Key_events to count.
     * @example
     * // Count the number of Key_events
     * const count = await prisma.key_events.count({
     *   where: {
     *     // ... the filter for the Key_events we want to count
     *   }
     * })
    **/
    count<T extends key_eventsCountArgs>(
      args?: Subset<T, key_eventsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Key_eventsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Key_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Key_eventsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Key_eventsAggregateArgs>(args: Subset<T, Key_eventsAggregateArgs>): Prisma.PrismaPromise<GetKey_eventsAggregateType<T>>

    /**
     * Group by Key_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {key_eventsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends key_eventsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: key_eventsGroupByArgs['orderBy'] }
        : { orderBy?: key_eventsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, key_eventsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKey_eventsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the key_events model
   */
  readonly fields: key_eventsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for key_events.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__key_eventsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product_keys<T extends key_events$product_keysArgs<ExtArgs> = {}>(args?: Subset<T, key_events$product_keysArgs<ExtArgs>>): Prisma__product_keysClient<$Result.GetResult<Prisma.$product_keysPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the key_events model
   */
  interface key_eventsFieldRefs {
    readonly id: FieldRef<"key_events", 'String'>
    readonly product_key_id: FieldRef<"key_events", 'String'>
    readonly alias_id: FieldRef<"key_events", 'String'>
    readonly order_id: FieldRef<"key_events", 'String'>
    readonly order_item_id: FieldRef<"key_events", 'String'>
    readonly event: FieldRef<"key_events", 'KeyEventType'>
    readonly details: FieldRef<"key_events", 'Json'>
    readonly created_at: FieldRef<"key_events", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * key_events findUnique
   */
  export type key_eventsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the key_events
     */
    select?: key_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the key_events
     */
    omit?: key_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: key_eventsInclude<ExtArgs> | null
    /**
     * Filter, which key_events to fetch.
     */
    where: key_eventsWhereUniqueInput
  }

  /**
   * key_events findUniqueOrThrow
   */
  export type key_eventsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the key_events
     */
    select?: key_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the key_events
     */
    omit?: key_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: key_eventsInclude<ExtArgs> | null
    /**
     * Filter, which key_events to fetch.
     */
    where: key_eventsWhereUniqueInput
  }

  /**
   * key_events findFirst
   */
  export type key_eventsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the key_events
     */
    select?: key_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the key_events
     */
    omit?: key_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: key_eventsInclude<ExtArgs> | null
    /**
     * Filter, which key_events to fetch.
     */
    where?: key_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of key_events to fetch.
     */
    orderBy?: key_eventsOrderByWithRelationInput | key_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for key_events.
     */
    cursor?: key_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` key_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` key_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of key_events.
     */
    distinct?: Key_eventsScalarFieldEnum | Key_eventsScalarFieldEnum[]
  }

  /**
   * key_events findFirstOrThrow
   */
  export type key_eventsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the key_events
     */
    select?: key_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the key_events
     */
    omit?: key_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: key_eventsInclude<ExtArgs> | null
    /**
     * Filter, which key_events to fetch.
     */
    where?: key_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of key_events to fetch.
     */
    orderBy?: key_eventsOrderByWithRelationInput | key_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for key_events.
     */
    cursor?: key_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` key_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` key_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of key_events.
     */
    distinct?: Key_eventsScalarFieldEnum | Key_eventsScalarFieldEnum[]
  }

  /**
   * key_events findMany
   */
  export type key_eventsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the key_events
     */
    select?: key_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the key_events
     */
    omit?: key_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: key_eventsInclude<ExtArgs> | null
    /**
     * Filter, which key_events to fetch.
     */
    where?: key_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of key_events to fetch.
     */
    orderBy?: key_eventsOrderByWithRelationInput | key_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing key_events.
     */
    cursor?: key_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` key_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` key_events.
     */
    skip?: number
    distinct?: Key_eventsScalarFieldEnum | Key_eventsScalarFieldEnum[]
  }

  /**
   * key_events create
   */
  export type key_eventsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the key_events
     */
    select?: key_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the key_events
     */
    omit?: key_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: key_eventsInclude<ExtArgs> | null
    /**
     * The data needed to create a key_events.
     */
    data: XOR<key_eventsCreateInput, key_eventsUncheckedCreateInput>
  }

  /**
   * key_events createMany
   */
  export type key_eventsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many key_events.
     */
    data: key_eventsCreateManyInput | key_eventsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * key_events createManyAndReturn
   */
  export type key_eventsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the key_events
     */
    select?: key_eventsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the key_events
     */
    omit?: key_eventsOmit<ExtArgs> | null
    /**
     * The data used to create many key_events.
     */
    data: key_eventsCreateManyInput | key_eventsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: key_eventsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * key_events update
   */
  export type key_eventsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the key_events
     */
    select?: key_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the key_events
     */
    omit?: key_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: key_eventsInclude<ExtArgs> | null
    /**
     * The data needed to update a key_events.
     */
    data: XOR<key_eventsUpdateInput, key_eventsUncheckedUpdateInput>
    /**
     * Choose, which key_events to update.
     */
    where: key_eventsWhereUniqueInput
  }

  /**
   * key_events updateMany
   */
  export type key_eventsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update key_events.
     */
    data: XOR<key_eventsUpdateManyMutationInput, key_eventsUncheckedUpdateManyInput>
    /**
     * Filter which key_events to update
     */
    where?: key_eventsWhereInput
    /**
     * Limit how many key_events to update.
     */
    limit?: number
  }

  /**
   * key_events updateManyAndReturn
   */
  export type key_eventsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the key_events
     */
    select?: key_eventsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the key_events
     */
    omit?: key_eventsOmit<ExtArgs> | null
    /**
     * The data used to update key_events.
     */
    data: XOR<key_eventsUpdateManyMutationInput, key_eventsUncheckedUpdateManyInput>
    /**
     * Filter which key_events to update
     */
    where?: key_eventsWhereInput
    /**
     * Limit how many key_events to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: key_eventsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * key_events upsert
   */
  export type key_eventsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the key_events
     */
    select?: key_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the key_events
     */
    omit?: key_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: key_eventsInclude<ExtArgs> | null
    /**
     * The filter to search for the key_events to update in case it exists.
     */
    where: key_eventsWhereUniqueInput
    /**
     * In case the key_events found by the `where` argument doesn't exist, create a new key_events with this data.
     */
    create: XOR<key_eventsCreateInput, key_eventsUncheckedCreateInput>
    /**
     * In case the key_events was found with the provided `where` argument, update it with this data.
     */
    update: XOR<key_eventsUpdateInput, key_eventsUncheckedUpdateInput>
  }

  /**
   * key_events delete
   */
  export type key_eventsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the key_events
     */
    select?: key_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the key_events
     */
    omit?: key_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: key_eventsInclude<ExtArgs> | null
    /**
     * Filter which key_events to delete.
     */
    where: key_eventsWhereUniqueInput
  }

  /**
   * key_events deleteMany
   */
  export type key_eventsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which key_events to delete
     */
    where?: key_eventsWhereInput
    /**
     * Limit how many key_events to delete.
     */
    limit?: number
  }

  /**
   * key_events.product_keys
   */
  export type key_events$product_keysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_keys
     */
    select?: product_keysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_keys
     */
    omit?: product_keysOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_keysInclude<ExtArgs> | null
    where?: product_keysWhereInput
  }

  /**
   * key_events without action
   */
  export type key_eventsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the key_events
     */
    select?: key_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the key_events
     */
    omit?: key_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: key_eventsInclude<ExtArgs> | null
  }


  /**
   * Model order_item_units
   */

  export type AggregateOrder_item_units = {
    _count: Order_item_unitsCountAggregateOutputType | null
    _min: Order_item_unitsMinAggregateOutputType | null
    _max: Order_item_unitsMaxAggregateOutputType | null
  }

  export type Order_item_unitsMinAggregateOutputType = {
    id: string | null
    order_item_id: string | null
    key_alias_id: string | null
  }

  export type Order_item_unitsMaxAggregateOutputType = {
    id: string | null
    order_item_id: string | null
    key_alias_id: string | null
  }

  export type Order_item_unitsCountAggregateOutputType = {
    id: number
    order_item_id: number
    key_alias_id: number
    _all: number
  }


  export type Order_item_unitsMinAggregateInputType = {
    id?: true
    order_item_id?: true
    key_alias_id?: true
  }

  export type Order_item_unitsMaxAggregateInputType = {
    id?: true
    order_item_id?: true
    key_alias_id?: true
  }

  export type Order_item_unitsCountAggregateInputType = {
    id?: true
    order_item_id?: true
    key_alias_id?: true
    _all?: true
  }

  export type Order_item_unitsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_item_units to aggregate.
     */
    where?: order_item_unitsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_item_units to fetch.
     */
    orderBy?: order_item_unitsOrderByWithRelationInput | order_item_unitsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: order_item_unitsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_item_units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_item_units.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned order_item_units
    **/
    _count?: true | Order_item_unitsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Order_item_unitsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Order_item_unitsMaxAggregateInputType
  }

  export type GetOrder_item_unitsAggregateType<T extends Order_item_unitsAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder_item_units]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder_item_units[P]>
      : GetScalarType<T[P], AggregateOrder_item_units[P]>
  }




  export type order_item_unitsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_item_unitsWhereInput
    orderBy?: order_item_unitsOrderByWithAggregationInput | order_item_unitsOrderByWithAggregationInput[]
    by: Order_item_unitsScalarFieldEnum[] | Order_item_unitsScalarFieldEnum
    having?: order_item_unitsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Order_item_unitsCountAggregateInputType | true
    _min?: Order_item_unitsMinAggregateInputType
    _max?: Order_item_unitsMaxAggregateInputType
  }

  export type Order_item_unitsGroupByOutputType = {
    id: string
    order_item_id: string
    key_alias_id: string | null
    _count: Order_item_unitsCountAggregateOutputType | null
    _min: Order_item_unitsMinAggregateOutputType | null
    _max: Order_item_unitsMaxAggregateOutputType | null
  }

  type GetOrder_item_unitsGroupByPayload<T extends order_item_unitsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Order_item_unitsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Order_item_unitsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Order_item_unitsGroupByOutputType[P]>
            : GetScalarType<T[P], Order_item_unitsGroupByOutputType[P]>
        }
      >
    >


  export type order_item_unitsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_item_id?: boolean
    key_alias_id?: boolean
    keys_aliases?: boolean | order_item_units$keys_aliasesArgs<ExtArgs>
    order_items?: boolean | order_itemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_item_units"]>

  export type order_item_unitsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_item_id?: boolean
    key_alias_id?: boolean
    keys_aliases?: boolean | order_item_units$keys_aliasesArgs<ExtArgs>
    order_items?: boolean | order_itemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_item_units"]>

  export type order_item_unitsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_item_id?: boolean
    key_alias_id?: boolean
    keys_aliases?: boolean | order_item_units$keys_aliasesArgs<ExtArgs>
    order_items?: boolean | order_itemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_item_units"]>

  export type order_item_unitsSelectScalar = {
    id?: boolean
    order_item_id?: boolean
    key_alias_id?: boolean
  }

  export type order_item_unitsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order_item_id" | "key_alias_id", ExtArgs["result"]["order_item_units"]>
  export type order_item_unitsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    keys_aliases?: boolean | order_item_units$keys_aliasesArgs<ExtArgs>
    order_items?: boolean | order_itemsDefaultArgs<ExtArgs>
  }
  export type order_item_unitsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    keys_aliases?: boolean | order_item_units$keys_aliasesArgs<ExtArgs>
    order_items?: boolean | order_itemsDefaultArgs<ExtArgs>
  }
  export type order_item_unitsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    keys_aliases?: boolean | order_item_units$keys_aliasesArgs<ExtArgs>
    order_items?: boolean | order_itemsDefaultArgs<ExtArgs>
  }

  export type $order_item_unitsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "order_item_units"
    objects: {
      keys_aliases: Prisma.$keys_aliasesPayload<ExtArgs> | null
      order_items: Prisma.$order_itemsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      order_item_id: string
      key_alias_id: string | null
    }, ExtArgs["result"]["order_item_units"]>
    composites: {}
  }

  type order_item_unitsGetPayload<S extends boolean | null | undefined | order_item_unitsDefaultArgs> = $Result.GetResult<Prisma.$order_item_unitsPayload, S>

  type order_item_unitsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<order_item_unitsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Order_item_unitsCountAggregateInputType | true
    }

  export interface order_item_unitsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['order_item_units'], meta: { name: 'order_item_units' } }
    /**
     * Find zero or one Order_item_units that matches the filter.
     * @param {order_item_unitsFindUniqueArgs} args - Arguments to find a Order_item_units
     * @example
     * // Get one Order_item_units
     * const order_item_units = await prisma.order_item_units.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends order_item_unitsFindUniqueArgs>(args: SelectSubset<T, order_item_unitsFindUniqueArgs<ExtArgs>>): Prisma__order_item_unitsClient<$Result.GetResult<Prisma.$order_item_unitsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order_item_units that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {order_item_unitsFindUniqueOrThrowArgs} args - Arguments to find a Order_item_units
     * @example
     * // Get one Order_item_units
     * const order_item_units = await prisma.order_item_units.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends order_item_unitsFindUniqueOrThrowArgs>(args: SelectSubset<T, order_item_unitsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__order_item_unitsClient<$Result.GetResult<Prisma.$order_item_unitsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_item_units that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_item_unitsFindFirstArgs} args - Arguments to find a Order_item_units
     * @example
     * // Get one Order_item_units
     * const order_item_units = await prisma.order_item_units.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends order_item_unitsFindFirstArgs>(args?: SelectSubset<T, order_item_unitsFindFirstArgs<ExtArgs>>): Prisma__order_item_unitsClient<$Result.GetResult<Prisma.$order_item_unitsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_item_units that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_item_unitsFindFirstOrThrowArgs} args - Arguments to find a Order_item_units
     * @example
     * // Get one Order_item_units
     * const order_item_units = await prisma.order_item_units.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends order_item_unitsFindFirstOrThrowArgs>(args?: SelectSubset<T, order_item_unitsFindFirstOrThrowArgs<ExtArgs>>): Prisma__order_item_unitsClient<$Result.GetResult<Prisma.$order_item_unitsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Order_item_units that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_item_unitsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Order_item_units
     * const order_item_units = await prisma.order_item_units.findMany()
     * 
     * // Get first 10 Order_item_units
     * const order_item_units = await prisma.order_item_units.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const order_item_unitsWithIdOnly = await prisma.order_item_units.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends order_item_unitsFindManyArgs>(args?: SelectSubset<T, order_item_unitsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_item_unitsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order_item_units.
     * @param {order_item_unitsCreateArgs} args - Arguments to create a Order_item_units.
     * @example
     * // Create one Order_item_units
     * const Order_item_units = await prisma.order_item_units.create({
     *   data: {
     *     // ... data to create a Order_item_units
     *   }
     * })
     * 
     */
    create<T extends order_item_unitsCreateArgs>(args: SelectSubset<T, order_item_unitsCreateArgs<ExtArgs>>): Prisma__order_item_unitsClient<$Result.GetResult<Prisma.$order_item_unitsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Order_item_units.
     * @param {order_item_unitsCreateManyArgs} args - Arguments to create many Order_item_units.
     * @example
     * // Create many Order_item_units
     * const order_item_units = await prisma.order_item_units.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends order_item_unitsCreateManyArgs>(args?: SelectSubset<T, order_item_unitsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Order_item_units and returns the data saved in the database.
     * @param {order_item_unitsCreateManyAndReturnArgs} args - Arguments to create many Order_item_units.
     * @example
     * // Create many Order_item_units
     * const order_item_units = await prisma.order_item_units.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Order_item_units and only return the `id`
     * const order_item_unitsWithIdOnly = await prisma.order_item_units.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends order_item_unitsCreateManyAndReturnArgs>(args?: SelectSubset<T, order_item_unitsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_item_unitsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Order_item_units.
     * @param {order_item_unitsDeleteArgs} args - Arguments to delete one Order_item_units.
     * @example
     * // Delete one Order_item_units
     * const Order_item_units = await prisma.order_item_units.delete({
     *   where: {
     *     // ... filter to delete one Order_item_units
     *   }
     * })
     * 
     */
    delete<T extends order_item_unitsDeleteArgs>(args: SelectSubset<T, order_item_unitsDeleteArgs<ExtArgs>>): Prisma__order_item_unitsClient<$Result.GetResult<Prisma.$order_item_unitsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order_item_units.
     * @param {order_item_unitsUpdateArgs} args - Arguments to update one Order_item_units.
     * @example
     * // Update one Order_item_units
     * const order_item_units = await prisma.order_item_units.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends order_item_unitsUpdateArgs>(args: SelectSubset<T, order_item_unitsUpdateArgs<ExtArgs>>): Prisma__order_item_unitsClient<$Result.GetResult<Prisma.$order_item_unitsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Order_item_units.
     * @param {order_item_unitsDeleteManyArgs} args - Arguments to filter Order_item_units to delete.
     * @example
     * // Delete a few Order_item_units
     * const { count } = await prisma.order_item_units.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends order_item_unitsDeleteManyArgs>(args?: SelectSubset<T, order_item_unitsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Order_item_units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_item_unitsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Order_item_units
     * const order_item_units = await prisma.order_item_units.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends order_item_unitsUpdateManyArgs>(args: SelectSubset<T, order_item_unitsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Order_item_units and returns the data updated in the database.
     * @param {order_item_unitsUpdateManyAndReturnArgs} args - Arguments to update many Order_item_units.
     * @example
     * // Update many Order_item_units
     * const order_item_units = await prisma.order_item_units.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Order_item_units and only return the `id`
     * const order_item_unitsWithIdOnly = await prisma.order_item_units.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends order_item_unitsUpdateManyAndReturnArgs>(args: SelectSubset<T, order_item_unitsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_item_unitsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Order_item_units.
     * @param {order_item_unitsUpsertArgs} args - Arguments to update or create a Order_item_units.
     * @example
     * // Update or create a Order_item_units
     * const order_item_units = await prisma.order_item_units.upsert({
     *   create: {
     *     // ... data to create a Order_item_units
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order_item_units we want to update
     *   }
     * })
     */
    upsert<T extends order_item_unitsUpsertArgs>(args: SelectSubset<T, order_item_unitsUpsertArgs<ExtArgs>>): Prisma__order_item_unitsClient<$Result.GetResult<Prisma.$order_item_unitsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Order_item_units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_item_unitsCountArgs} args - Arguments to filter Order_item_units to count.
     * @example
     * // Count the number of Order_item_units
     * const count = await prisma.order_item_units.count({
     *   where: {
     *     // ... the filter for the Order_item_units we want to count
     *   }
     * })
    **/
    count<T extends order_item_unitsCountArgs>(
      args?: Subset<T, order_item_unitsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Order_item_unitsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order_item_units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Order_item_unitsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Order_item_unitsAggregateArgs>(args: Subset<T, Order_item_unitsAggregateArgs>): Prisma.PrismaPromise<GetOrder_item_unitsAggregateType<T>>

    /**
     * Group by Order_item_units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_item_unitsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends order_item_unitsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: order_item_unitsGroupByArgs['orderBy'] }
        : { orderBy?: order_item_unitsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, order_item_unitsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrder_item_unitsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the order_item_units model
   */
  readonly fields: order_item_unitsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for order_item_units.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__order_item_unitsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    keys_aliases<T extends order_item_units$keys_aliasesArgs<ExtArgs> = {}>(args?: Subset<T, order_item_units$keys_aliasesArgs<ExtArgs>>): Prisma__keys_aliasesClient<$Result.GetResult<Prisma.$keys_aliasesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    order_items<T extends order_itemsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, order_itemsDefaultArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the order_item_units model
   */
  interface order_item_unitsFieldRefs {
    readonly id: FieldRef<"order_item_units", 'String'>
    readonly order_item_id: FieldRef<"order_item_units", 'String'>
    readonly key_alias_id: FieldRef<"order_item_units", 'String'>
  }
    

  // Custom InputTypes
  /**
   * order_item_units findUnique
   */
  export type order_item_unitsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_item_units
     */
    select?: order_item_unitsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_item_units
     */
    omit?: order_item_unitsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_item_unitsInclude<ExtArgs> | null
    /**
     * Filter, which order_item_units to fetch.
     */
    where: order_item_unitsWhereUniqueInput
  }

  /**
   * order_item_units findUniqueOrThrow
   */
  export type order_item_unitsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_item_units
     */
    select?: order_item_unitsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_item_units
     */
    omit?: order_item_unitsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_item_unitsInclude<ExtArgs> | null
    /**
     * Filter, which order_item_units to fetch.
     */
    where: order_item_unitsWhereUniqueInput
  }

  /**
   * order_item_units findFirst
   */
  export type order_item_unitsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_item_units
     */
    select?: order_item_unitsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_item_units
     */
    omit?: order_item_unitsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_item_unitsInclude<ExtArgs> | null
    /**
     * Filter, which order_item_units to fetch.
     */
    where?: order_item_unitsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_item_units to fetch.
     */
    orderBy?: order_item_unitsOrderByWithRelationInput | order_item_unitsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_item_units.
     */
    cursor?: order_item_unitsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_item_units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_item_units.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_item_units.
     */
    distinct?: Order_item_unitsScalarFieldEnum | Order_item_unitsScalarFieldEnum[]
  }

  /**
   * order_item_units findFirstOrThrow
   */
  export type order_item_unitsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_item_units
     */
    select?: order_item_unitsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_item_units
     */
    omit?: order_item_unitsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_item_unitsInclude<ExtArgs> | null
    /**
     * Filter, which order_item_units to fetch.
     */
    where?: order_item_unitsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_item_units to fetch.
     */
    orderBy?: order_item_unitsOrderByWithRelationInput | order_item_unitsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_item_units.
     */
    cursor?: order_item_unitsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_item_units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_item_units.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_item_units.
     */
    distinct?: Order_item_unitsScalarFieldEnum | Order_item_unitsScalarFieldEnum[]
  }

  /**
   * order_item_units findMany
   */
  export type order_item_unitsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_item_units
     */
    select?: order_item_unitsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_item_units
     */
    omit?: order_item_unitsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_item_unitsInclude<ExtArgs> | null
    /**
     * Filter, which order_item_units to fetch.
     */
    where?: order_item_unitsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_item_units to fetch.
     */
    orderBy?: order_item_unitsOrderByWithRelationInput | order_item_unitsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing order_item_units.
     */
    cursor?: order_item_unitsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_item_units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_item_units.
     */
    skip?: number
    distinct?: Order_item_unitsScalarFieldEnum | Order_item_unitsScalarFieldEnum[]
  }

  /**
   * order_item_units create
   */
  export type order_item_unitsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_item_units
     */
    select?: order_item_unitsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_item_units
     */
    omit?: order_item_unitsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_item_unitsInclude<ExtArgs> | null
    /**
     * The data needed to create a order_item_units.
     */
    data: XOR<order_item_unitsCreateInput, order_item_unitsUncheckedCreateInput>
  }

  /**
   * order_item_units createMany
   */
  export type order_item_unitsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many order_item_units.
     */
    data: order_item_unitsCreateManyInput | order_item_unitsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * order_item_units createManyAndReturn
   */
  export type order_item_unitsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_item_units
     */
    select?: order_item_unitsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the order_item_units
     */
    omit?: order_item_unitsOmit<ExtArgs> | null
    /**
     * The data used to create many order_item_units.
     */
    data: order_item_unitsCreateManyInput | order_item_unitsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_item_unitsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * order_item_units update
   */
  export type order_item_unitsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_item_units
     */
    select?: order_item_unitsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_item_units
     */
    omit?: order_item_unitsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_item_unitsInclude<ExtArgs> | null
    /**
     * The data needed to update a order_item_units.
     */
    data: XOR<order_item_unitsUpdateInput, order_item_unitsUncheckedUpdateInput>
    /**
     * Choose, which order_item_units to update.
     */
    where: order_item_unitsWhereUniqueInput
  }

  /**
   * order_item_units updateMany
   */
  export type order_item_unitsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update order_item_units.
     */
    data: XOR<order_item_unitsUpdateManyMutationInput, order_item_unitsUncheckedUpdateManyInput>
    /**
     * Filter which order_item_units to update
     */
    where?: order_item_unitsWhereInput
    /**
     * Limit how many order_item_units to update.
     */
    limit?: number
  }

  /**
   * order_item_units updateManyAndReturn
   */
  export type order_item_unitsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_item_units
     */
    select?: order_item_unitsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the order_item_units
     */
    omit?: order_item_unitsOmit<ExtArgs> | null
    /**
     * The data used to update order_item_units.
     */
    data: XOR<order_item_unitsUpdateManyMutationInput, order_item_unitsUncheckedUpdateManyInput>
    /**
     * Filter which order_item_units to update
     */
    where?: order_item_unitsWhereInput
    /**
     * Limit how many order_item_units to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_item_unitsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * order_item_units upsert
   */
  export type order_item_unitsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_item_units
     */
    select?: order_item_unitsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_item_units
     */
    omit?: order_item_unitsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_item_unitsInclude<ExtArgs> | null
    /**
     * The filter to search for the order_item_units to update in case it exists.
     */
    where: order_item_unitsWhereUniqueInput
    /**
     * In case the order_item_units found by the `where` argument doesn't exist, create a new order_item_units with this data.
     */
    create: XOR<order_item_unitsCreateInput, order_item_unitsUncheckedCreateInput>
    /**
     * In case the order_item_units was found with the provided `where` argument, update it with this data.
     */
    update: XOR<order_item_unitsUpdateInput, order_item_unitsUncheckedUpdateInput>
  }

  /**
   * order_item_units delete
   */
  export type order_item_unitsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_item_units
     */
    select?: order_item_unitsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_item_units
     */
    omit?: order_item_unitsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_item_unitsInclude<ExtArgs> | null
    /**
     * Filter which order_item_units to delete.
     */
    where: order_item_unitsWhereUniqueInput
  }

  /**
   * order_item_units deleteMany
   */
  export type order_item_unitsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_item_units to delete
     */
    where?: order_item_unitsWhereInput
    /**
     * Limit how many order_item_units to delete.
     */
    limit?: number
  }

  /**
   * order_item_units.keys_aliases
   */
  export type order_item_units$keys_aliasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keys_aliases
     */
    select?: keys_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keys_aliases
     */
    omit?: keys_aliasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keys_aliasesInclude<ExtArgs> | null
    where?: keys_aliasesWhereInput
  }

  /**
   * order_item_units without action
   */
  export type order_item_unitsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_item_units
     */
    select?: order_item_unitsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_item_units
     */
    omit?: order_item_unitsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_item_unitsInclude<ExtArgs> | null
  }


  /**
   * Model order_items
   */

  export type AggregateOrder_items = {
    _count: Order_itemsCountAggregateOutputType | null
    _avg: Order_itemsAvgAggregateOutputType | null
    _sum: Order_itemsSumAggregateOutputType | null
    _min: Order_itemsMinAggregateOutputType | null
    _max: Order_itemsMaxAggregateOutputType | null
  }

  export type Order_itemsAvgAggregateOutputType = {
    qty: number | null
  }

  export type Order_itemsSumAggregateOutputType = {
    qty: number | null
  }

  export type Order_itemsMinAggregateOutputType = {
    id: string | null
    order_id: string | null
    product_id: string | null
    qty: number | null
    key_alias_id: string | null
    created_at: Date | null
    updated_at: Date | null
    item_type: $Enums.OrderItemType | null
    subscription_id: string | null
  }

  export type Order_itemsMaxAggregateOutputType = {
    id: string | null
    order_id: string | null
    product_id: string | null
    qty: number | null
    key_alias_id: string | null
    created_at: Date | null
    updated_at: Date | null
    item_type: $Enums.OrderItemType | null
    subscription_id: string | null
  }

  export type Order_itemsCountAggregateOutputType = {
    id: number
    order_id: number
    product_id: number
    qty: number
    key_alias_id: number
    created_at: number
    updated_at: number
    item_type: number
    subscription_id: number
    _all: number
  }


  export type Order_itemsAvgAggregateInputType = {
    qty?: true
  }

  export type Order_itemsSumAggregateInputType = {
    qty?: true
  }

  export type Order_itemsMinAggregateInputType = {
    id?: true
    order_id?: true
    product_id?: true
    qty?: true
    key_alias_id?: true
    created_at?: true
    updated_at?: true
    item_type?: true
    subscription_id?: true
  }

  export type Order_itemsMaxAggregateInputType = {
    id?: true
    order_id?: true
    product_id?: true
    qty?: true
    key_alias_id?: true
    created_at?: true
    updated_at?: true
    item_type?: true
    subscription_id?: true
  }

  export type Order_itemsCountAggregateInputType = {
    id?: true
    order_id?: true
    product_id?: true
    qty?: true
    key_alias_id?: true
    created_at?: true
    updated_at?: true
    item_type?: true
    subscription_id?: true
    _all?: true
  }

  export type Order_itemsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_items to aggregate.
     */
    where?: order_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_items to fetch.
     */
    orderBy?: order_itemsOrderByWithRelationInput | order_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: order_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned order_items
    **/
    _count?: true | Order_itemsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Order_itemsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Order_itemsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Order_itemsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Order_itemsMaxAggregateInputType
  }

  export type GetOrder_itemsAggregateType<T extends Order_itemsAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder_items]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder_items[P]>
      : GetScalarType<T[P], AggregateOrder_items[P]>
  }




  export type order_itemsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_itemsWhereInput
    orderBy?: order_itemsOrderByWithAggregationInput | order_itemsOrderByWithAggregationInput[]
    by: Order_itemsScalarFieldEnum[] | Order_itemsScalarFieldEnum
    having?: order_itemsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Order_itemsCountAggregateInputType | true
    _avg?: Order_itemsAvgAggregateInputType
    _sum?: Order_itemsSumAggregateInputType
    _min?: Order_itemsMinAggregateInputType
    _max?: Order_itemsMaxAggregateInputType
  }

  export type Order_itemsGroupByOutputType = {
    id: string
    order_id: string
    product_id: string | null
    qty: number
    key_alias_id: string | null
    created_at: Date | null
    updated_at: Date | null
    item_type: $Enums.OrderItemType
    subscription_id: string | null
    _count: Order_itemsCountAggregateOutputType | null
    _avg: Order_itemsAvgAggregateOutputType | null
    _sum: Order_itemsSumAggregateOutputType | null
    _min: Order_itemsMinAggregateOutputType | null
    _max: Order_itemsMaxAggregateOutputType | null
  }

  type GetOrder_itemsGroupByPayload<T extends order_itemsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Order_itemsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Order_itemsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Order_itemsGroupByOutputType[P]>
            : GetScalarType<T[P], Order_itemsGroupByOutputType[P]>
        }
      >
    >


  export type order_itemsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    product_id?: boolean
    qty?: boolean
    key_alias_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    item_type?: boolean
    subscription_id?: boolean
    order_item_units?: boolean | order_items$order_item_unitsArgs<ExtArgs>
    keys_aliases?: boolean | order_items$keys_aliasesArgs<ExtArgs>
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    products?: boolean | order_items$productsArgs<ExtArgs>
    subscriptions?: boolean | order_items$subscriptionsArgs<ExtArgs>
    _count?: boolean | Order_itemsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_items"]>

  export type order_itemsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    product_id?: boolean
    qty?: boolean
    key_alias_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    item_type?: boolean
    subscription_id?: boolean
    keys_aliases?: boolean | order_items$keys_aliasesArgs<ExtArgs>
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    products?: boolean | order_items$productsArgs<ExtArgs>
    subscriptions?: boolean | order_items$subscriptionsArgs<ExtArgs>
  }, ExtArgs["result"]["order_items"]>

  export type order_itemsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    product_id?: boolean
    qty?: boolean
    key_alias_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    item_type?: boolean
    subscription_id?: boolean
    keys_aliases?: boolean | order_items$keys_aliasesArgs<ExtArgs>
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    products?: boolean | order_items$productsArgs<ExtArgs>
    subscriptions?: boolean | order_items$subscriptionsArgs<ExtArgs>
  }, ExtArgs["result"]["order_items"]>

  export type order_itemsSelectScalar = {
    id?: boolean
    order_id?: boolean
    product_id?: boolean
    qty?: boolean
    key_alias_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    item_type?: boolean
    subscription_id?: boolean
  }

  export type order_itemsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order_id" | "product_id" | "qty" | "key_alias_id" | "created_at" | "updated_at" | "item_type" | "subscription_id", ExtArgs["result"]["order_items"]>
  export type order_itemsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_item_units?: boolean | order_items$order_item_unitsArgs<ExtArgs>
    keys_aliases?: boolean | order_items$keys_aliasesArgs<ExtArgs>
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    products?: boolean | order_items$productsArgs<ExtArgs>
    subscriptions?: boolean | order_items$subscriptionsArgs<ExtArgs>
    _count?: boolean | Order_itemsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type order_itemsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    keys_aliases?: boolean | order_items$keys_aliasesArgs<ExtArgs>
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    products?: boolean | order_items$productsArgs<ExtArgs>
    subscriptions?: boolean | order_items$subscriptionsArgs<ExtArgs>
  }
  export type order_itemsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    keys_aliases?: boolean | order_items$keys_aliasesArgs<ExtArgs>
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    products?: boolean | order_items$productsArgs<ExtArgs>
    subscriptions?: boolean | order_items$subscriptionsArgs<ExtArgs>
  }

  export type $order_itemsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "order_items"
    objects: {
      order_item_units: Prisma.$order_item_unitsPayload<ExtArgs>[]
      keys_aliases: Prisma.$keys_aliasesPayload<ExtArgs> | null
      orders: Prisma.$ordersPayload<ExtArgs>
      products: Prisma.$productsPayload<ExtArgs> | null
      subscriptions: Prisma.$subscriptionsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      order_id: string
      product_id: string | null
      qty: number
      key_alias_id: string | null
      created_at: Date | null
      updated_at: Date | null
      item_type: $Enums.OrderItemType
      subscription_id: string | null
    }, ExtArgs["result"]["order_items"]>
    composites: {}
  }

  type order_itemsGetPayload<S extends boolean | null | undefined | order_itemsDefaultArgs> = $Result.GetResult<Prisma.$order_itemsPayload, S>

  type order_itemsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<order_itemsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Order_itemsCountAggregateInputType | true
    }

  export interface order_itemsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['order_items'], meta: { name: 'order_items' } }
    /**
     * Find zero or one Order_items that matches the filter.
     * @param {order_itemsFindUniqueArgs} args - Arguments to find a Order_items
     * @example
     * // Get one Order_items
     * const order_items = await prisma.order_items.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends order_itemsFindUniqueArgs>(args: SelectSubset<T, order_itemsFindUniqueArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order_items that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {order_itemsFindUniqueOrThrowArgs} args - Arguments to find a Order_items
     * @example
     * // Get one Order_items
     * const order_items = await prisma.order_items.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends order_itemsFindUniqueOrThrowArgs>(args: SelectSubset<T, order_itemsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_itemsFindFirstArgs} args - Arguments to find a Order_items
     * @example
     * // Get one Order_items
     * const order_items = await prisma.order_items.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends order_itemsFindFirstArgs>(args?: SelectSubset<T, order_itemsFindFirstArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_items that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_itemsFindFirstOrThrowArgs} args - Arguments to find a Order_items
     * @example
     * // Get one Order_items
     * const order_items = await prisma.order_items.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends order_itemsFindFirstOrThrowArgs>(args?: SelectSubset<T, order_itemsFindFirstOrThrowArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Order_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_itemsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Order_items
     * const order_items = await prisma.order_items.findMany()
     * 
     * // Get first 10 Order_items
     * const order_items = await prisma.order_items.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const order_itemsWithIdOnly = await prisma.order_items.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends order_itemsFindManyArgs>(args?: SelectSubset<T, order_itemsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order_items.
     * @param {order_itemsCreateArgs} args - Arguments to create a Order_items.
     * @example
     * // Create one Order_items
     * const Order_items = await prisma.order_items.create({
     *   data: {
     *     // ... data to create a Order_items
     *   }
     * })
     * 
     */
    create<T extends order_itemsCreateArgs>(args: SelectSubset<T, order_itemsCreateArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Order_items.
     * @param {order_itemsCreateManyArgs} args - Arguments to create many Order_items.
     * @example
     * // Create many Order_items
     * const order_items = await prisma.order_items.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends order_itemsCreateManyArgs>(args?: SelectSubset<T, order_itemsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Order_items and returns the data saved in the database.
     * @param {order_itemsCreateManyAndReturnArgs} args - Arguments to create many Order_items.
     * @example
     * // Create many Order_items
     * const order_items = await prisma.order_items.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Order_items and only return the `id`
     * const order_itemsWithIdOnly = await prisma.order_items.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends order_itemsCreateManyAndReturnArgs>(args?: SelectSubset<T, order_itemsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Order_items.
     * @param {order_itemsDeleteArgs} args - Arguments to delete one Order_items.
     * @example
     * // Delete one Order_items
     * const Order_items = await prisma.order_items.delete({
     *   where: {
     *     // ... filter to delete one Order_items
     *   }
     * })
     * 
     */
    delete<T extends order_itemsDeleteArgs>(args: SelectSubset<T, order_itemsDeleteArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order_items.
     * @param {order_itemsUpdateArgs} args - Arguments to update one Order_items.
     * @example
     * // Update one Order_items
     * const order_items = await prisma.order_items.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends order_itemsUpdateArgs>(args: SelectSubset<T, order_itemsUpdateArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Order_items.
     * @param {order_itemsDeleteManyArgs} args - Arguments to filter Order_items to delete.
     * @example
     * // Delete a few Order_items
     * const { count } = await prisma.order_items.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends order_itemsDeleteManyArgs>(args?: SelectSubset<T, order_itemsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Order_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_itemsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Order_items
     * const order_items = await prisma.order_items.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends order_itemsUpdateManyArgs>(args: SelectSubset<T, order_itemsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Order_items and returns the data updated in the database.
     * @param {order_itemsUpdateManyAndReturnArgs} args - Arguments to update many Order_items.
     * @example
     * // Update many Order_items
     * const order_items = await prisma.order_items.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Order_items and only return the `id`
     * const order_itemsWithIdOnly = await prisma.order_items.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends order_itemsUpdateManyAndReturnArgs>(args: SelectSubset<T, order_itemsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Order_items.
     * @param {order_itemsUpsertArgs} args - Arguments to update or create a Order_items.
     * @example
     * // Update or create a Order_items
     * const order_items = await prisma.order_items.upsert({
     *   create: {
     *     // ... data to create a Order_items
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order_items we want to update
     *   }
     * })
     */
    upsert<T extends order_itemsUpsertArgs>(args: SelectSubset<T, order_itemsUpsertArgs<ExtArgs>>): Prisma__order_itemsClient<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Order_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_itemsCountArgs} args - Arguments to filter Order_items to count.
     * @example
     * // Count the number of Order_items
     * const count = await prisma.order_items.count({
     *   where: {
     *     // ... the filter for the Order_items we want to count
     *   }
     * })
    **/
    count<T extends order_itemsCountArgs>(
      args?: Subset<T, order_itemsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Order_itemsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Order_itemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Order_itemsAggregateArgs>(args: Subset<T, Order_itemsAggregateArgs>): Prisma.PrismaPromise<GetOrder_itemsAggregateType<T>>

    /**
     * Group by Order_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_itemsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends order_itemsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: order_itemsGroupByArgs['orderBy'] }
        : { orderBy?: order_itemsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, order_itemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrder_itemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the order_items model
   */
  readonly fields: order_itemsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for order_items.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__order_itemsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order_item_units<T extends order_items$order_item_unitsArgs<ExtArgs> = {}>(args?: Subset<T, order_items$order_item_unitsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_item_unitsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    keys_aliases<T extends order_items$keys_aliasesArgs<ExtArgs> = {}>(args?: Subset<T, order_items$keys_aliasesArgs<ExtArgs>>): Prisma__keys_aliasesClient<$Result.GetResult<Prisma.$keys_aliasesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    orders<T extends ordersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ordersDefaultArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    products<T extends order_items$productsArgs<ExtArgs> = {}>(args?: Subset<T, order_items$productsArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    subscriptions<T extends order_items$subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, order_items$subscriptionsArgs<ExtArgs>>): Prisma__subscriptionsClient<$Result.GetResult<Prisma.$subscriptionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the order_items model
   */
  interface order_itemsFieldRefs {
    readonly id: FieldRef<"order_items", 'String'>
    readonly order_id: FieldRef<"order_items", 'String'>
    readonly product_id: FieldRef<"order_items", 'String'>
    readonly qty: FieldRef<"order_items", 'Int'>
    readonly key_alias_id: FieldRef<"order_items", 'String'>
    readonly created_at: FieldRef<"order_items", 'DateTime'>
    readonly updated_at: FieldRef<"order_items", 'DateTime'>
    readonly item_type: FieldRef<"order_items", 'OrderItemType'>
    readonly subscription_id: FieldRef<"order_items", 'String'>
  }
    

  // Custom InputTypes
  /**
   * order_items findUnique
   */
  export type order_itemsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * Filter, which order_items to fetch.
     */
    where: order_itemsWhereUniqueInput
  }

  /**
   * order_items findUniqueOrThrow
   */
  export type order_itemsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * Filter, which order_items to fetch.
     */
    where: order_itemsWhereUniqueInput
  }

  /**
   * order_items findFirst
   */
  export type order_itemsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * Filter, which order_items to fetch.
     */
    where?: order_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_items to fetch.
     */
    orderBy?: order_itemsOrderByWithRelationInput | order_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_items.
     */
    cursor?: order_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_items.
     */
    distinct?: Order_itemsScalarFieldEnum | Order_itemsScalarFieldEnum[]
  }

  /**
   * order_items findFirstOrThrow
   */
  export type order_itemsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * Filter, which order_items to fetch.
     */
    where?: order_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_items to fetch.
     */
    orderBy?: order_itemsOrderByWithRelationInput | order_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_items.
     */
    cursor?: order_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_items.
     */
    distinct?: Order_itemsScalarFieldEnum | Order_itemsScalarFieldEnum[]
  }

  /**
   * order_items findMany
   */
  export type order_itemsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * Filter, which order_items to fetch.
     */
    where?: order_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_items to fetch.
     */
    orderBy?: order_itemsOrderByWithRelationInput | order_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing order_items.
     */
    cursor?: order_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_items.
     */
    skip?: number
    distinct?: Order_itemsScalarFieldEnum | Order_itemsScalarFieldEnum[]
  }

  /**
   * order_items create
   */
  export type order_itemsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * The data needed to create a order_items.
     */
    data: XOR<order_itemsCreateInput, order_itemsUncheckedCreateInput>
  }

  /**
   * order_items createMany
   */
  export type order_itemsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many order_items.
     */
    data: order_itemsCreateManyInput | order_itemsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * order_items createManyAndReturn
   */
  export type order_itemsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * The data used to create many order_items.
     */
    data: order_itemsCreateManyInput | order_itemsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * order_items update
   */
  export type order_itemsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * The data needed to update a order_items.
     */
    data: XOR<order_itemsUpdateInput, order_itemsUncheckedUpdateInput>
    /**
     * Choose, which order_items to update.
     */
    where: order_itemsWhereUniqueInput
  }

  /**
   * order_items updateMany
   */
  export type order_itemsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update order_items.
     */
    data: XOR<order_itemsUpdateManyMutationInput, order_itemsUncheckedUpdateManyInput>
    /**
     * Filter which order_items to update
     */
    where?: order_itemsWhereInput
    /**
     * Limit how many order_items to update.
     */
    limit?: number
  }

  /**
   * order_items updateManyAndReturn
   */
  export type order_itemsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * The data used to update order_items.
     */
    data: XOR<order_itemsUpdateManyMutationInput, order_itemsUncheckedUpdateManyInput>
    /**
     * Filter which order_items to update
     */
    where?: order_itemsWhereInput
    /**
     * Limit how many order_items to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * order_items upsert
   */
  export type order_itemsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * The filter to search for the order_items to update in case it exists.
     */
    where: order_itemsWhereUniqueInput
    /**
     * In case the order_items found by the `where` argument doesn't exist, create a new order_items with this data.
     */
    create: XOR<order_itemsCreateInput, order_itemsUncheckedCreateInput>
    /**
     * In case the order_items was found with the provided `where` argument, update it with this data.
     */
    update: XOR<order_itemsUpdateInput, order_itemsUncheckedUpdateInput>
  }

  /**
   * order_items delete
   */
  export type order_itemsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    /**
     * Filter which order_items to delete.
     */
    where: order_itemsWhereUniqueInput
  }

  /**
   * order_items deleteMany
   */
  export type order_itemsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_items to delete
     */
    where?: order_itemsWhereInput
    /**
     * Limit how many order_items to delete.
     */
    limit?: number
  }

  /**
   * order_items.order_item_units
   */
  export type order_items$order_item_unitsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_item_units
     */
    select?: order_item_unitsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_item_units
     */
    omit?: order_item_unitsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_item_unitsInclude<ExtArgs> | null
    where?: order_item_unitsWhereInput
    orderBy?: order_item_unitsOrderByWithRelationInput | order_item_unitsOrderByWithRelationInput[]
    cursor?: order_item_unitsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Order_item_unitsScalarFieldEnum | Order_item_unitsScalarFieldEnum[]
  }

  /**
   * order_items.keys_aliases
   */
  export type order_items$keys_aliasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the keys_aliases
     */
    select?: keys_aliasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the keys_aliases
     */
    omit?: keys_aliasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: keys_aliasesInclude<ExtArgs> | null
    where?: keys_aliasesWhereInput
  }

  /**
   * order_items.products
   */
  export type order_items$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    where?: productsWhereInput
  }

  /**
   * order_items.subscriptions
   */
  export type order_items$subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscriptions
     */
    select?: subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscriptions
     */
    omit?: subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscriptionsInclude<ExtArgs> | null
    where?: subscriptionsWhereInput
  }

  /**
   * order_items without action
   */
  export type order_itemsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
  }


  /**
   * Model orders
   */

  export type AggregateOrders = {
    _count: OrdersCountAggregateOutputType | null
    _avg: OrdersAvgAggregateOutputType | null
    _sum: OrdersSumAggregateOutputType | null
    _min: OrdersMinAggregateOutputType | null
    _max: OrdersMaxAggregateOutputType | null
  }

  export type OrdersAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type OrdersSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type OrdersMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    status: $Enums.OrderStatus | null
    provider_order_id: string | null
    amount: Decimal | null
    currency: string | null
    created_at: Date | null
    updated_at: Date | null
    order_number: string | null
  }

  export type OrdersMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    status: $Enums.OrderStatus | null
    provider_order_id: string | null
    amount: Decimal | null
    currency: string | null
    created_at: Date | null
    updated_at: Date | null
    order_number: string | null
  }

  export type OrdersCountAggregateOutputType = {
    id: number
    user_id: number
    status: number
    provider_order_id: number
    amount: number
    currency: number
    created_at: number
    updated_at: number
    order_number: number
    _all: number
  }


  export type OrdersAvgAggregateInputType = {
    amount?: true
  }

  export type OrdersSumAggregateInputType = {
    amount?: true
  }

  export type OrdersMinAggregateInputType = {
    id?: true
    user_id?: true
    status?: true
    provider_order_id?: true
    amount?: true
    currency?: true
    created_at?: true
    updated_at?: true
    order_number?: true
  }

  export type OrdersMaxAggregateInputType = {
    id?: true
    user_id?: true
    status?: true
    provider_order_id?: true
    amount?: true
    currency?: true
    created_at?: true
    updated_at?: true
    order_number?: true
  }

  export type OrdersCountAggregateInputType = {
    id?: true
    user_id?: true
    status?: true
    provider_order_id?: true
    amount?: true
    currency?: true
    created_at?: true
    updated_at?: true
    order_number?: true
    _all?: true
  }

  export type OrdersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which orders to aggregate.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned orders
    **/
    _count?: true | OrdersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrdersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrdersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrdersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrdersMaxAggregateInputType
  }

  export type GetOrdersAggregateType<T extends OrdersAggregateArgs> = {
        [P in keyof T & keyof AggregateOrders]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrders[P]>
      : GetScalarType<T[P], AggregateOrders[P]>
  }




  export type ordersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordersWhereInput
    orderBy?: ordersOrderByWithAggregationInput | ordersOrderByWithAggregationInput[]
    by: OrdersScalarFieldEnum[] | OrdersScalarFieldEnum
    having?: ordersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrdersCountAggregateInputType | true
    _avg?: OrdersAvgAggregateInputType
    _sum?: OrdersSumAggregateInputType
    _min?: OrdersMinAggregateInputType
    _max?: OrdersMaxAggregateInputType
  }

  export type OrdersGroupByOutputType = {
    id: string
    user_id: string
    status: $Enums.OrderStatus
    provider_order_id: string | null
    amount: Decimal | null
    currency: string | null
    created_at: Date | null
    updated_at: Date | null
    order_number: string
    _count: OrdersCountAggregateOutputType | null
    _avg: OrdersAvgAggregateOutputType | null
    _sum: OrdersSumAggregateOutputType | null
    _min: OrdersMinAggregateOutputType | null
    _max: OrdersMaxAggregateOutputType | null
  }

  type GetOrdersGroupByPayload<T extends ordersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrdersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrdersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrdersGroupByOutputType[P]>
            : GetScalarType<T[P], OrdersGroupByOutputType[P]>
        }
      >
    >


  export type ordersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    status?: boolean
    provider_order_id?: boolean
    amount?: boolean
    currency?: boolean
    created_at?: boolean
    updated_at?: boolean
    order_number?: boolean
    order_items?: boolean | orders$order_itemsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | OrdersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orders"]>

  export type ordersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    status?: boolean
    provider_order_id?: boolean
    amount?: boolean
    currency?: boolean
    created_at?: boolean
    updated_at?: boolean
    order_number?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orders"]>

  export type ordersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    status?: boolean
    provider_order_id?: boolean
    amount?: boolean
    currency?: boolean
    created_at?: boolean
    updated_at?: boolean
    order_number?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orders"]>

  export type ordersSelectScalar = {
    id?: boolean
    user_id?: boolean
    status?: boolean
    provider_order_id?: boolean
    amount?: boolean
    currency?: boolean
    created_at?: boolean
    updated_at?: boolean
    order_number?: boolean
  }

  export type ordersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "status" | "provider_order_id" | "amount" | "currency" | "created_at" | "updated_at" | "order_number", ExtArgs["result"]["orders"]>
  export type ordersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_items?: boolean | orders$order_itemsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | OrdersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ordersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type ordersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $ordersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "orders"
    objects: {
      order_items: Prisma.$order_itemsPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      status: $Enums.OrderStatus
      provider_order_id: string | null
      amount: Prisma.Decimal | null
      currency: string | null
      created_at: Date | null
      updated_at: Date | null
      order_number: string
    }, ExtArgs["result"]["orders"]>
    composites: {}
  }

  type ordersGetPayload<S extends boolean | null | undefined | ordersDefaultArgs> = $Result.GetResult<Prisma.$ordersPayload, S>

  type ordersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ordersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrdersCountAggregateInputType | true
    }

  export interface ordersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['orders'], meta: { name: 'orders' } }
    /**
     * Find zero or one Orders that matches the filter.
     * @param {ordersFindUniqueArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ordersFindUniqueArgs>(args: SelectSubset<T, ordersFindUniqueArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Orders that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ordersFindUniqueOrThrowArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ordersFindUniqueOrThrowArgs>(args: SelectSubset<T, ordersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindFirstArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ordersFindFirstArgs>(args?: SelectSubset<T, ordersFindFirstArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Orders that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindFirstOrThrowArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ordersFindFirstOrThrowArgs>(args?: SelectSubset<T, ordersFindFirstOrThrowArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.orders.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.orders.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ordersWithIdOnly = await prisma.orders.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ordersFindManyArgs>(args?: SelectSubset<T, ordersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Orders.
     * @param {ordersCreateArgs} args - Arguments to create a Orders.
     * @example
     * // Create one Orders
     * const Orders = await prisma.orders.create({
     *   data: {
     *     // ... data to create a Orders
     *   }
     * })
     * 
     */
    create<T extends ordersCreateArgs>(args: SelectSubset<T, ordersCreateArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Orders.
     * @param {ordersCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const orders = await prisma.orders.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ordersCreateManyArgs>(args?: SelectSubset<T, ordersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Orders and returns the data saved in the database.
     * @param {ordersCreateManyAndReturnArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const orders = await prisma.orders.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Orders and only return the `id`
     * const ordersWithIdOnly = await prisma.orders.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ordersCreateManyAndReturnArgs>(args?: SelectSubset<T, ordersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Orders.
     * @param {ordersDeleteArgs} args - Arguments to delete one Orders.
     * @example
     * // Delete one Orders
     * const Orders = await prisma.orders.delete({
     *   where: {
     *     // ... filter to delete one Orders
     *   }
     * })
     * 
     */
    delete<T extends ordersDeleteArgs>(args: SelectSubset<T, ordersDeleteArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Orders.
     * @param {ordersUpdateArgs} args - Arguments to update one Orders.
     * @example
     * // Update one Orders
     * const orders = await prisma.orders.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ordersUpdateArgs>(args: SelectSubset<T, ordersUpdateArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Orders.
     * @param {ordersDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.orders.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ordersDeleteManyArgs>(args?: SelectSubset<T, ordersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const orders = await prisma.orders.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ordersUpdateManyArgs>(args: SelectSubset<T, ordersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders and returns the data updated in the database.
     * @param {ordersUpdateManyAndReturnArgs} args - Arguments to update many Orders.
     * @example
     * // Update many Orders
     * const orders = await prisma.orders.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Orders and only return the `id`
     * const ordersWithIdOnly = await prisma.orders.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ordersUpdateManyAndReturnArgs>(args: SelectSubset<T, ordersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Orders.
     * @param {ordersUpsertArgs} args - Arguments to update or create a Orders.
     * @example
     * // Update or create a Orders
     * const orders = await prisma.orders.upsert({
     *   create: {
     *     // ... data to create a Orders
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Orders we want to update
     *   }
     * })
     */
    upsert<T extends ordersUpsertArgs>(args: SelectSubset<T, ordersUpsertArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.orders.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends ordersCountArgs>(
      args?: Subset<T, ordersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrdersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrdersAggregateArgs>(args: Subset<T, OrdersAggregateArgs>): Prisma.PrismaPromise<GetOrdersAggregateType<T>>

    /**
     * Group by Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ordersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ordersGroupByArgs['orderBy'] }
        : { orderBy?: ordersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ordersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrdersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the orders model
   */
  readonly fields: ordersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for orders.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ordersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order_items<T extends orders$order_itemsArgs<ExtArgs> = {}>(args?: Subset<T, orders$order_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the orders model
   */
  interface ordersFieldRefs {
    readonly id: FieldRef<"orders", 'String'>
    readonly user_id: FieldRef<"orders", 'String'>
    readonly status: FieldRef<"orders", 'OrderStatus'>
    readonly provider_order_id: FieldRef<"orders", 'String'>
    readonly amount: FieldRef<"orders", 'Decimal'>
    readonly currency: FieldRef<"orders", 'String'>
    readonly created_at: FieldRef<"orders", 'DateTime'>
    readonly updated_at: FieldRef<"orders", 'DateTime'>
    readonly order_number: FieldRef<"orders", 'String'>
  }
    

  // Custom InputTypes
  /**
   * orders findUnique
   */
  export type ordersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders findUniqueOrThrow
   */
  export type ordersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders findFirst
   */
  export type ordersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of orders.
     */
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * orders findFirstOrThrow
   */
  export type ordersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of orders.
     */
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * orders findMany
   */
  export type ordersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * orders create
   */
  export type ordersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The data needed to create a orders.
     */
    data: XOR<ordersCreateInput, ordersUncheckedCreateInput>
  }

  /**
   * orders createMany
   */
  export type ordersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many orders.
     */
    data: ordersCreateManyInput | ordersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * orders createManyAndReturn
   */
  export type ordersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * The data used to create many orders.
     */
    data: ordersCreateManyInput | ordersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * orders update
   */
  export type ordersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The data needed to update a orders.
     */
    data: XOR<ordersUpdateInput, ordersUncheckedUpdateInput>
    /**
     * Choose, which orders to update.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders updateMany
   */
  export type ordersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update orders.
     */
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyInput>
    /**
     * Filter which orders to update
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to update.
     */
    limit?: number
  }

  /**
   * orders updateManyAndReturn
   */
  export type ordersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * The data used to update orders.
     */
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyInput>
    /**
     * Filter which orders to update
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * orders upsert
   */
  export type ordersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The filter to search for the orders to update in case it exists.
     */
    where: ordersWhereUniqueInput
    /**
     * In case the orders found by the `where` argument doesn't exist, create a new orders with this data.
     */
    create: XOR<ordersCreateInput, ordersUncheckedCreateInput>
    /**
     * In case the orders was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ordersUpdateInput, ordersUncheckedUpdateInput>
  }

  /**
   * orders delete
   */
  export type ordersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter which orders to delete.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders deleteMany
   */
  export type ordersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which orders to delete
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to delete.
     */
    limit?: number
  }

  /**
   * orders.order_items
   */
  export type orders$order_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_items
     */
    select?: order_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_items
     */
    omit?: order_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_itemsInclude<ExtArgs> | null
    where?: order_itemsWhereInput
    orderBy?: order_itemsOrderByWithRelationInput | order_itemsOrderByWithRelationInput[]
    cursor?: order_itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Order_itemsScalarFieldEnum | Order_itemsScalarFieldEnum[]
  }

  /**
   * orders without action
   */
  export type ordersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsersScalarFieldEnum: {
    id: 'id',
    username: 'username',
    email: 'email',
    phone: 'phone',
    password: 'password',
    created_at: 'created_at'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const SubscriptionsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    duration_days: 'duration_days',
    price: 'price',
    description: 'description',
    image: 'image'
  };

  export type SubscriptionsScalarFieldEnum = (typeof SubscriptionsScalarFieldEnum)[keyof typeof SubscriptionsScalarFieldEnum]


  export const User_subscriptionsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    subscription_id: 'subscription_id',
    start_date: 'start_date',
    end_date: 'end_date',
    active: 'active'
  };

  export type User_subscriptionsScalarFieldEnum = (typeof User_subscriptionsScalarFieldEnum)[keyof typeof User_subscriptionsScalarFieldEnum]


  export const Support_requestsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    title: 'title',
    description: 'description',
    created_at: 'created_at',
    operator_description: 'operator_description',
    operator_id: 'operator_id',
    updated_at: 'updated_at',
    status: 'status'
  };

  export type Support_requestsScalarFieldEnum = (typeof Support_requestsScalarFieldEnum)[keyof typeof Support_requestsScalarFieldEnum]


  export const PromocodesScalarFieldEnum: {
    id: 'id',
    code: 'code',
    expires_at: 'expires_at',
    denomination: 'denomination',
    type: 'type'
  };

  export type PromocodesScalarFieldEnum = (typeof PromocodesScalarFieldEnum)[keyof typeof PromocodesScalarFieldEnum]


  export const Promo_usageScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    promocode_id: 'promocode_id',
    used_at: 'used_at'
  };

  export type Promo_usageScalarFieldEnum = (typeof Promo_usageScalarFieldEnum)[keyof typeof Promo_usageScalarFieldEnum]


  export const CategoriesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type CategoriesScalarFieldEnum = (typeof CategoriesScalarFieldEnum)[keyof typeof CategoriesScalarFieldEnum]


  export const ProductsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    price: 'price',
    category_id: 'category_id',
    denomination: 'denomination',
    total_amount: 'total_amount',
    created_at: 'created_at',
    updated_at: 'updated_at',
    img: 'img',
    description: 'description',
    life_duration: 'life_duration'
  };

  export type ProductsScalarFieldEnum = (typeof ProductsScalarFieldEnum)[keyof typeof ProductsScalarFieldEnum]


  export const Product_keysScalarFieldEnum: {
    id: 'id',
    product_id: 'product_id',
    key_encrypted: 'key_encrypted',
    used: 'used',
    created_at: 'created_at',
    updated_at: 'updated_at',
    reserved_by_order_id: 'reserved_by_order_id',
    reserved_until: 'reserved_until'
  };

  export type Product_keysScalarFieldEnum = (typeof Product_keysScalarFieldEnum)[keyof typeof Product_keysScalarFieldEnum]


  export const User_productsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    product_id: 'product_id',
    added_at: 'added_at',
    product_key_id: 'product_key_id',
    code: 'code'
  };

  export type User_productsScalarFieldEnum = (typeof User_productsScalarFieldEnum)[keyof typeof User_productsScalarFieldEnum]


  export const Db_name_aliasesScalarFieldEnum: {
    id: 'id',
    table_name: 'table_name',
    alias_name: 'alias_name',
    description: 'description'
  };

  export type Db_name_aliasesScalarFieldEnum = (typeof Db_name_aliasesScalarFieldEnum)[keyof typeof Db_name_aliasesScalarFieldEnum]


  export const Staff_membersScalarFieldEnum: {
    id: 'id',
    username: 'username',
    email: 'email',
    password: 'password',
    created_at: 'created_at',
    updated_at: 'updated_at',
    role: 'role'
  };

  export type Staff_membersScalarFieldEnum = (typeof Staff_membersScalarFieldEnum)[keyof typeof Staff_membersScalarFieldEnum]


  export const Staff_rightsScalarFieldEnum: {
    id: 'id',
    component_name: 'component_name',
    can_access: 'can_access',
    staff_member_id: 'staff_member_id',
    role: 'role'
  };

  export type Staff_rightsScalarFieldEnum = (typeof Staff_rightsScalarFieldEnum)[keyof typeof Staff_rightsScalarFieldEnum]


  export const Keys_aliasesScalarFieldEnum: {
    id: 'id',
    product_key_id: 'product_key_id',
    code: 'code',
    purchased: 'purchased',
    created_at: 'created_at',
    updated_at: 'updated_at',
    activated: 'activated',
    activated_at: 'activated_at',
    active: 'active',
    active_days: 'active_days'
  };

  export type Keys_aliasesScalarFieldEnum = (typeof Keys_aliasesScalarFieldEnum)[keyof typeof Keys_aliasesScalarFieldEnum]


  export const PostScalarFieldEnum: {
    id: 'id',
    raw_html: 'raw_html',
    description: 'description',
    image: 'image',
    button_text: 'button_text',
    button_href: 'button_href',
    updatedAt: 'updatedAt'
  };

  export type PostScalarFieldEnum = (typeof PostScalarFieldEnum)[keyof typeof PostScalarFieldEnum]


  export const DraftScalarFieldEnum: {
    id: 'id',
    raw_html: 'raw_html',
    description: 'description',
    image: 'image',
    button_text: 'button_text',
    button_href: 'button_href',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DraftScalarFieldEnum = (typeof DraftScalarFieldEnum)[keyof typeof DraftScalarFieldEnum]


  export const Key_eventsScalarFieldEnum: {
    id: 'id',
    product_key_id: 'product_key_id',
    alias_id: 'alias_id',
    order_id: 'order_id',
    order_item_id: 'order_item_id',
    event: 'event',
    details: 'details',
    created_at: 'created_at'
  };

  export type Key_eventsScalarFieldEnum = (typeof Key_eventsScalarFieldEnum)[keyof typeof Key_eventsScalarFieldEnum]


  export const Order_item_unitsScalarFieldEnum: {
    id: 'id',
    order_item_id: 'order_item_id',
    key_alias_id: 'key_alias_id'
  };

  export type Order_item_unitsScalarFieldEnum = (typeof Order_item_unitsScalarFieldEnum)[keyof typeof Order_item_unitsScalarFieldEnum]


  export const Order_itemsScalarFieldEnum: {
    id: 'id',
    order_id: 'order_id',
    product_id: 'product_id',
    qty: 'qty',
    key_alias_id: 'key_alias_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    item_type: 'item_type',
    subscription_id: 'subscription_id'
  };

  export type Order_itemsScalarFieldEnum = (typeof Order_itemsScalarFieldEnum)[keyof typeof Order_itemsScalarFieldEnum]


  export const OrdersScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    status: 'status',
    provider_order_id: 'provider_order_id',
    amount: 'amount',
    currency: 'currency',
    created_at: 'created_at',
    updated_at: 'updated_at',
    order_number: 'order_number'
  };

  export type OrdersScalarFieldEnum = (typeof OrdersScalarFieldEnum)[keyof typeof OrdersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'SupportStatus'
   */
  export type EnumSupportStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SupportStatus'>
    


  /**
   * Reference to a field of type 'SupportStatus[]'
   */
  export type ListEnumSupportStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SupportStatus[]'>
    


  /**
   * Reference to a field of type 'StaffRole'
   */
  export type EnumStaffRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StaffRole'>
    


  /**
   * Reference to a field of type 'StaffRole[]'
   */
  export type ListEnumStaffRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StaffRole[]'>
    


  /**
   * Reference to a field of type 'KeyEventType'
   */
  export type EnumKeyEventTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'KeyEventType'>
    


  /**
   * Reference to a field of type 'KeyEventType[]'
   */
  export type ListEnumKeyEventTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'KeyEventType[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'OrderItemType'
   */
  export type EnumOrderItemTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderItemType'>
    


  /**
   * Reference to a field of type 'OrderItemType[]'
   */
  export type ListEnumOrderItemTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderItemType[]'>
    


  /**
   * Reference to a field of type 'OrderStatus'
   */
  export type EnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus'>
    


  /**
   * Reference to a field of type 'OrderStatus[]'
   */
  export type ListEnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: UuidFilter<"users"> | string
    username?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    phone?: StringNullableFilter<"users"> | string | null
    password?: StringFilter<"users"> | string
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    orders?: OrdersListRelationFilter
    support_requests?: Support_requestsListRelationFilter
    user_products?: User_productsListRelationFilter
    user_subscriptions?: User_subscriptionsListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    password?: SortOrder
    created_at?: SortOrderInput | SortOrder
    orders?: ordersOrderByRelationAggregateInput
    support_requests?: support_requestsOrderByRelationAggregateInput
    user_products?: user_productsOrderByRelationAggregateInput
    user_subscriptions?: user_subscriptionsOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    email?: string
    phone?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    password?: StringFilter<"users"> | string
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    orders?: OrdersListRelationFilter
    support_requests?: Support_requestsListRelationFilter
    user_products?: User_productsListRelationFilter
    user_subscriptions?: User_subscriptionsListRelationFilter
  }, "id" | "username" | "email" | "phone">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    password?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"users"> | string
    username?: StringWithAggregatesFilter<"users"> | string
    email?: StringWithAggregatesFilter<"users"> | string
    phone?: StringNullableWithAggregatesFilter<"users"> | string | null
    password?: StringWithAggregatesFilter<"users"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
  }

  export type subscriptionsWhereInput = {
    AND?: subscriptionsWhereInput | subscriptionsWhereInput[]
    OR?: subscriptionsWhereInput[]
    NOT?: subscriptionsWhereInput | subscriptionsWhereInput[]
    id?: UuidFilter<"subscriptions"> | string
    title?: StringFilter<"subscriptions"> | string
    duration_days?: IntFilter<"subscriptions"> | number
    price?: DecimalFilter<"subscriptions"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"subscriptions"> | string | null
    image?: StringNullableFilter<"subscriptions"> | string | null
    order_items?: Order_itemsListRelationFilter
    user_subscriptions?: User_subscriptionsListRelationFilter
  }

  export type subscriptionsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    duration_days?: SortOrder
    price?: SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    order_items?: order_itemsOrderByRelationAggregateInput
    user_subscriptions?: user_subscriptionsOrderByRelationAggregateInput
  }

  export type subscriptionsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: subscriptionsWhereInput | subscriptionsWhereInput[]
    OR?: subscriptionsWhereInput[]
    NOT?: subscriptionsWhereInput | subscriptionsWhereInput[]
    title?: StringFilter<"subscriptions"> | string
    duration_days?: IntFilter<"subscriptions"> | number
    price?: DecimalFilter<"subscriptions"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableFilter<"subscriptions"> | string | null
    image?: StringNullableFilter<"subscriptions"> | string | null
    order_items?: Order_itemsListRelationFilter
    user_subscriptions?: User_subscriptionsListRelationFilter
  }, "id">

  export type subscriptionsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    duration_days?: SortOrder
    price?: SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    _count?: subscriptionsCountOrderByAggregateInput
    _avg?: subscriptionsAvgOrderByAggregateInput
    _max?: subscriptionsMaxOrderByAggregateInput
    _min?: subscriptionsMinOrderByAggregateInput
    _sum?: subscriptionsSumOrderByAggregateInput
  }

  export type subscriptionsScalarWhereWithAggregatesInput = {
    AND?: subscriptionsScalarWhereWithAggregatesInput | subscriptionsScalarWhereWithAggregatesInput[]
    OR?: subscriptionsScalarWhereWithAggregatesInput[]
    NOT?: subscriptionsScalarWhereWithAggregatesInput | subscriptionsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"subscriptions"> | string
    title?: StringWithAggregatesFilter<"subscriptions"> | string
    duration_days?: IntWithAggregatesFilter<"subscriptions"> | number
    price?: DecimalWithAggregatesFilter<"subscriptions"> | Decimal | DecimalJsLike | number | string
    description?: StringNullableWithAggregatesFilter<"subscriptions"> | string | null
    image?: StringNullableWithAggregatesFilter<"subscriptions"> | string | null
  }

  export type user_subscriptionsWhereInput = {
    AND?: user_subscriptionsWhereInput | user_subscriptionsWhereInput[]
    OR?: user_subscriptionsWhereInput[]
    NOT?: user_subscriptionsWhereInput | user_subscriptionsWhereInput[]
    id?: UuidFilter<"user_subscriptions"> | string
    user_id?: UuidFilter<"user_subscriptions"> | string
    subscription_id?: UuidFilter<"user_subscriptions"> | string
    start_date?: DateTimeFilter<"user_subscriptions"> | Date | string
    end_date?: DateTimeFilter<"user_subscriptions"> | Date | string
    active?: BoolFilter<"user_subscriptions"> | boolean
    subscriptions?: XOR<SubscriptionsScalarRelationFilter, subscriptionsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type user_subscriptionsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    subscription_id?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    active?: SortOrder
    subscriptions?: subscriptionsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type user_subscriptionsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: user_subscriptionsWhereInput | user_subscriptionsWhereInput[]
    OR?: user_subscriptionsWhereInput[]
    NOT?: user_subscriptionsWhereInput | user_subscriptionsWhereInput[]
    user_id?: UuidFilter<"user_subscriptions"> | string
    subscription_id?: UuidFilter<"user_subscriptions"> | string
    start_date?: DateTimeFilter<"user_subscriptions"> | Date | string
    end_date?: DateTimeFilter<"user_subscriptions"> | Date | string
    active?: BoolFilter<"user_subscriptions"> | boolean
    subscriptions?: XOR<SubscriptionsScalarRelationFilter, subscriptionsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type user_subscriptionsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    subscription_id?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    active?: SortOrder
    _count?: user_subscriptionsCountOrderByAggregateInput
    _max?: user_subscriptionsMaxOrderByAggregateInput
    _min?: user_subscriptionsMinOrderByAggregateInput
  }

  export type user_subscriptionsScalarWhereWithAggregatesInput = {
    AND?: user_subscriptionsScalarWhereWithAggregatesInput | user_subscriptionsScalarWhereWithAggregatesInput[]
    OR?: user_subscriptionsScalarWhereWithAggregatesInput[]
    NOT?: user_subscriptionsScalarWhereWithAggregatesInput | user_subscriptionsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"user_subscriptions"> | string
    user_id?: UuidWithAggregatesFilter<"user_subscriptions"> | string
    subscription_id?: UuidWithAggregatesFilter<"user_subscriptions"> | string
    start_date?: DateTimeWithAggregatesFilter<"user_subscriptions"> | Date | string
    end_date?: DateTimeWithAggregatesFilter<"user_subscriptions"> | Date | string
    active?: BoolWithAggregatesFilter<"user_subscriptions"> | boolean
  }

  export type support_requestsWhereInput = {
    AND?: support_requestsWhereInput | support_requestsWhereInput[]
    OR?: support_requestsWhereInput[]
    NOT?: support_requestsWhereInput | support_requestsWhereInput[]
    id?: UuidFilter<"support_requests"> | string
    user_id?: UuidFilter<"support_requests"> | string
    title?: StringFilter<"support_requests"> | string
    description?: StringNullableFilter<"support_requests"> | string | null
    created_at?: DateTimeNullableFilter<"support_requests"> | Date | string | null
    operator_description?: StringNullableFilter<"support_requests"> | string | null
    operator_id?: UuidNullableFilter<"support_requests"> | string | null
    updated_at?: DateTimeNullableFilter<"support_requests"> | Date | string | null
    status?: EnumSupportStatusFilter<"support_requests"> | $Enums.SupportStatus
    operator?: XOR<Staff_membersNullableScalarRelationFilter, staff_membersWhereInput> | null
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type support_requestsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    operator_description?: SortOrderInput | SortOrder
    operator_id?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    status?: SortOrder
    operator?: staff_membersOrderByWithRelationInput
    user?: usersOrderByWithRelationInput
  }

  export type support_requestsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: support_requestsWhereInput | support_requestsWhereInput[]
    OR?: support_requestsWhereInput[]
    NOT?: support_requestsWhereInput | support_requestsWhereInput[]
    user_id?: UuidFilter<"support_requests"> | string
    title?: StringFilter<"support_requests"> | string
    description?: StringNullableFilter<"support_requests"> | string | null
    created_at?: DateTimeNullableFilter<"support_requests"> | Date | string | null
    operator_description?: StringNullableFilter<"support_requests"> | string | null
    operator_id?: UuidNullableFilter<"support_requests"> | string | null
    updated_at?: DateTimeNullableFilter<"support_requests"> | Date | string | null
    status?: EnumSupportStatusFilter<"support_requests"> | $Enums.SupportStatus
    operator?: XOR<Staff_membersNullableScalarRelationFilter, staff_membersWhereInput> | null
    user?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type support_requestsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    operator_description?: SortOrderInput | SortOrder
    operator_id?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    status?: SortOrder
    _count?: support_requestsCountOrderByAggregateInput
    _max?: support_requestsMaxOrderByAggregateInput
    _min?: support_requestsMinOrderByAggregateInput
  }

  export type support_requestsScalarWhereWithAggregatesInput = {
    AND?: support_requestsScalarWhereWithAggregatesInput | support_requestsScalarWhereWithAggregatesInput[]
    OR?: support_requestsScalarWhereWithAggregatesInput[]
    NOT?: support_requestsScalarWhereWithAggregatesInput | support_requestsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"support_requests"> | string
    user_id?: UuidWithAggregatesFilter<"support_requests"> | string
    title?: StringWithAggregatesFilter<"support_requests"> | string
    description?: StringNullableWithAggregatesFilter<"support_requests"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"support_requests"> | Date | string | null
    operator_description?: StringNullableWithAggregatesFilter<"support_requests"> | string | null
    operator_id?: UuidNullableWithAggregatesFilter<"support_requests"> | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"support_requests"> | Date | string | null
    status?: EnumSupportStatusWithAggregatesFilter<"support_requests"> | $Enums.SupportStatus
  }

  export type promocodesWhereInput = {
    AND?: promocodesWhereInput | promocodesWhereInput[]
    OR?: promocodesWhereInput[]
    NOT?: promocodesWhereInput | promocodesWhereInput[]
    id?: UuidFilter<"promocodes"> | string
    code?: StringFilter<"promocodes"> | string
    expires_at?: DateTimeNullableFilter<"promocodes"> | Date | string | null
    denomination?: IntFilter<"promocodes"> | number
    type?: StringFilter<"promocodes"> | string
    promo_usage?: Promo_usageListRelationFilter
  }

  export type promocodesOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    expires_at?: SortOrderInput | SortOrder
    denomination?: SortOrder
    type?: SortOrder
    promo_usage?: promo_usageOrderByRelationAggregateInput
  }

  export type promocodesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    code?: string
    AND?: promocodesWhereInput | promocodesWhereInput[]
    OR?: promocodesWhereInput[]
    NOT?: promocodesWhereInput | promocodesWhereInput[]
    expires_at?: DateTimeNullableFilter<"promocodes"> | Date | string | null
    denomination?: IntFilter<"promocodes"> | number
    type?: StringFilter<"promocodes"> | string
    promo_usage?: Promo_usageListRelationFilter
  }, "id" | "code">

  export type promocodesOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    expires_at?: SortOrderInput | SortOrder
    denomination?: SortOrder
    type?: SortOrder
    _count?: promocodesCountOrderByAggregateInput
    _avg?: promocodesAvgOrderByAggregateInput
    _max?: promocodesMaxOrderByAggregateInput
    _min?: promocodesMinOrderByAggregateInput
    _sum?: promocodesSumOrderByAggregateInput
  }

  export type promocodesScalarWhereWithAggregatesInput = {
    AND?: promocodesScalarWhereWithAggregatesInput | promocodesScalarWhereWithAggregatesInput[]
    OR?: promocodesScalarWhereWithAggregatesInput[]
    NOT?: promocodesScalarWhereWithAggregatesInput | promocodesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"promocodes"> | string
    code?: StringWithAggregatesFilter<"promocodes"> | string
    expires_at?: DateTimeNullableWithAggregatesFilter<"promocodes"> | Date | string | null
    denomination?: IntWithAggregatesFilter<"promocodes"> | number
    type?: StringWithAggregatesFilter<"promocodes"> | string
  }

  export type promo_usageWhereInput = {
    AND?: promo_usageWhereInput | promo_usageWhereInput[]
    OR?: promo_usageWhereInput[]
    NOT?: promo_usageWhereInput | promo_usageWhereInput[]
    id?: UuidFilter<"promo_usage"> | string
    user_id?: UuidFilter<"promo_usage"> | string
    promocode_id?: UuidFilter<"promo_usage"> | string
    used_at?: DateTimeNullableFilter<"promo_usage"> | Date | string | null
    promocodes?: XOR<PromocodesScalarRelationFilter, promocodesWhereInput>
  }

  export type promo_usageOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    promocode_id?: SortOrder
    used_at?: SortOrderInput | SortOrder
    promocodes?: promocodesOrderByWithRelationInput
  }

  export type promo_usageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: promo_usageWhereInput | promo_usageWhereInput[]
    OR?: promo_usageWhereInput[]
    NOT?: promo_usageWhereInput | promo_usageWhereInput[]
    user_id?: UuidFilter<"promo_usage"> | string
    promocode_id?: UuidFilter<"promo_usage"> | string
    used_at?: DateTimeNullableFilter<"promo_usage"> | Date | string | null
    promocodes?: XOR<PromocodesScalarRelationFilter, promocodesWhereInput>
  }, "id">

  export type promo_usageOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    promocode_id?: SortOrder
    used_at?: SortOrderInput | SortOrder
    _count?: promo_usageCountOrderByAggregateInput
    _max?: promo_usageMaxOrderByAggregateInput
    _min?: promo_usageMinOrderByAggregateInput
  }

  export type promo_usageScalarWhereWithAggregatesInput = {
    AND?: promo_usageScalarWhereWithAggregatesInput | promo_usageScalarWhereWithAggregatesInput[]
    OR?: promo_usageScalarWhereWithAggregatesInput[]
    NOT?: promo_usageScalarWhereWithAggregatesInput | promo_usageScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"promo_usage"> | string
    user_id?: UuidWithAggregatesFilter<"promo_usage"> | string
    promocode_id?: UuidWithAggregatesFilter<"promo_usage"> | string
    used_at?: DateTimeNullableWithAggregatesFilter<"promo_usage"> | Date | string | null
  }

  export type categoriesWhereInput = {
    AND?: categoriesWhereInput | categoriesWhereInput[]
    OR?: categoriesWhereInput[]
    NOT?: categoriesWhereInput | categoriesWhereInput[]
    id?: UuidFilter<"categories"> | string
    name?: StringFilter<"categories"> | string
    created_at?: DateTimeNullableFilter<"categories"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"categories"> | Date | string | null
    products?: ProductsListRelationFilter
  }

  export type categoriesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    products?: productsOrderByRelationAggregateInput
  }

  export type categoriesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: categoriesWhereInput | categoriesWhereInput[]
    OR?: categoriesWhereInput[]
    NOT?: categoriesWhereInput | categoriesWhereInput[]
    created_at?: DateTimeNullableFilter<"categories"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"categories"> | Date | string | null
    products?: ProductsListRelationFilter
  }, "id" | "name">

  export type categoriesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: categoriesCountOrderByAggregateInput
    _max?: categoriesMaxOrderByAggregateInput
    _min?: categoriesMinOrderByAggregateInput
  }

  export type categoriesScalarWhereWithAggregatesInput = {
    AND?: categoriesScalarWhereWithAggregatesInput | categoriesScalarWhereWithAggregatesInput[]
    OR?: categoriesScalarWhereWithAggregatesInput[]
    NOT?: categoriesScalarWhereWithAggregatesInput | categoriesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"categories"> | string
    name?: StringWithAggregatesFilter<"categories"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"categories"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"categories"> | Date | string | null
  }

  export type productsWhereInput = {
    AND?: productsWhereInput | productsWhereInput[]
    OR?: productsWhereInput[]
    NOT?: productsWhereInput | productsWhereInput[]
    id?: UuidFilter<"products"> | string
    name?: StringFilter<"products"> | string
    price?: DecimalFilter<"products"> | Decimal | DecimalJsLike | number | string
    category_id?: UuidNullableFilter<"products"> | string | null
    denomination?: StringNullableFilter<"products"> | string | null
    total_amount?: IntNullableFilter<"products"> | number | null
    created_at?: DateTimeNullableFilter<"products"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"products"> | Date | string | null
    img?: StringNullableFilter<"products"> | string | null
    description?: StringNullableFilter<"products"> | string | null
    life_duration?: IntNullableFilter<"products"> | number | null
    order_items?: Order_itemsListRelationFilter
    product_keys?: Product_keysListRelationFilter
    categories?: XOR<CategoriesNullableScalarRelationFilter, categoriesWhereInput> | null
    user_products?: User_productsListRelationFilter
  }

  export type productsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    price?: SortOrder
    category_id?: SortOrderInput | SortOrder
    denomination?: SortOrderInput | SortOrder
    total_amount?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    img?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    life_duration?: SortOrderInput | SortOrder
    order_items?: order_itemsOrderByRelationAggregateInput
    product_keys?: product_keysOrderByRelationAggregateInput
    categories?: categoriesOrderByWithRelationInput
    user_products?: user_productsOrderByRelationAggregateInput
  }

  export type productsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: productsWhereInput | productsWhereInput[]
    OR?: productsWhereInput[]
    NOT?: productsWhereInput | productsWhereInput[]
    price?: DecimalFilter<"products"> | Decimal | DecimalJsLike | number | string
    category_id?: UuidNullableFilter<"products"> | string | null
    denomination?: StringNullableFilter<"products"> | string | null
    total_amount?: IntNullableFilter<"products"> | number | null
    created_at?: DateTimeNullableFilter<"products"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"products"> | Date | string | null
    img?: StringNullableFilter<"products"> | string | null
    description?: StringNullableFilter<"products"> | string | null
    life_duration?: IntNullableFilter<"products"> | number | null
    order_items?: Order_itemsListRelationFilter
    product_keys?: Product_keysListRelationFilter
    categories?: XOR<CategoriesNullableScalarRelationFilter, categoriesWhereInput> | null
    user_products?: User_productsListRelationFilter
  }, "id" | "name">

  export type productsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    price?: SortOrder
    category_id?: SortOrderInput | SortOrder
    denomination?: SortOrderInput | SortOrder
    total_amount?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    img?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    life_duration?: SortOrderInput | SortOrder
    _count?: productsCountOrderByAggregateInput
    _avg?: productsAvgOrderByAggregateInput
    _max?: productsMaxOrderByAggregateInput
    _min?: productsMinOrderByAggregateInput
    _sum?: productsSumOrderByAggregateInput
  }

  export type productsScalarWhereWithAggregatesInput = {
    AND?: productsScalarWhereWithAggregatesInput | productsScalarWhereWithAggregatesInput[]
    OR?: productsScalarWhereWithAggregatesInput[]
    NOT?: productsScalarWhereWithAggregatesInput | productsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"products"> | string
    name?: StringWithAggregatesFilter<"products"> | string
    price?: DecimalWithAggregatesFilter<"products"> | Decimal | DecimalJsLike | number | string
    category_id?: UuidNullableWithAggregatesFilter<"products"> | string | null
    denomination?: StringNullableWithAggregatesFilter<"products"> | string | null
    total_amount?: IntNullableWithAggregatesFilter<"products"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"products"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"products"> | Date | string | null
    img?: StringNullableWithAggregatesFilter<"products"> | string | null
    description?: StringNullableWithAggregatesFilter<"products"> | string | null
    life_duration?: IntNullableWithAggregatesFilter<"products"> | number | null
  }

  export type product_keysWhereInput = {
    AND?: product_keysWhereInput | product_keysWhereInput[]
    OR?: product_keysWhereInput[]
    NOT?: product_keysWhereInput | product_keysWhereInput[]
    id?: UuidFilter<"product_keys"> | string
    product_id?: UuidNullableFilter<"product_keys"> | string | null
    key_encrypted?: StringFilter<"product_keys"> | string
    used?: BoolNullableFilter<"product_keys"> | boolean | null
    created_at?: DateTimeNullableFilter<"product_keys"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"product_keys"> | Date | string | null
    reserved_by_order_id?: UuidNullableFilter<"product_keys"> | string | null
    reserved_until?: DateTimeNullableFilter<"product_keys"> | Date | string | null
    key_events?: Key_eventsListRelationFilter
    keys_aliases?: Keys_aliasesListRelationFilter
    products?: XOR<ProductsNullableScalarRelationFilter, productsWhereInput> | null
    user_products_user_products_product_key_idToproduct_keys?: XOR<User_productsNullableScalarRelationFilter, user_productsWhereInput> | null
  }

  export type product_keysOrderByWithRelationInput = {
    id?: SortOrder
    product_id?: SortOrderInput | SortOrder
    key_encrypted?: SortOrder
    used?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    reserved_by_order_id?: SortOrderInput | SortOrder
    reserved_until?: SortOrderInput | SortOrder
    key_events?: key_eventsOrderByRelationAggregateInput
    keys_aliases?: keys_aliasesOrderByRelationAggregateInput
    products?: productsOrderByWithRelationInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsOrderByWithRelationInput
  }

  export type product_keysWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: product_keysWhereInput | product_keysWhereInput[]
    OR?: product_keysWhereInput[]
    NOT?: product_keysWhereInput | product_keysWhereInput[]
    product_id?: UuidNullableFilter<"product_keys"> | string | null
    key_encrypted?: StringFilter<"product_keys"> | string
    used?: BoolNullableFilter<"product_keys"> | boolean | null
    created_at?: DateTimeNullableFilter<"product_keys"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"product_keys"> | Date | string | null
    reserved_by_order_id?: UuidNullableFilter<"product_keys"> | string | null
    reserved_until?: DateTimeNullableFilter<"product_keys"> | Date | string | null
    key_events?: Key_eventsListRelationFilter
    keys_aliases?: Keys_aliasesListRelationFilter
    products?: XOR<ProductsNullableScalarRelationFilter, productsWhereInput> | null
    user_products_user_products_product_key_idToproduct_keys?: XOR<User_productsNullableScalarRelationFilter, user_productsWhereInput> | null
  }, "id">

  export type product_keysOrderByWithAggregationInput = {
    id?: SortOrder
    product_id?: SortOrderInput | SortOrder
    key_encrypted?: SortOrder
    used?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    reserved_by_order_id?: SortOrderInput | SortOrder
    reserved_until?: SortOrderInput | SortOrder
    _count?: product_keysCountOrderByAggregateInput
    _max?: product_keysMaxOrderByAggregateInput
    _min?: product_keysMinOrderByAggregateInput
  }

  export type product_keysScalarWhereWithAggregatesInput = {
    AND?: product_keysScalarWhereWithAggregatesInput | product_keysScalarWhereWithAggregatesInput[]
    OR?: product_keysScalarWhereWithAggregatesInput[]
    NOT?: product_keysScalarWhereWithAggregatesInput | product_keysScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"product_keys"> | string
    product_id?: UuidNullableWithAggregatesFilter<"product_keys"> | string | null
    key_encrypted?: StringWithAggregatesFilter<"product_keys"> | string
    used?: BoolNullableWithAggregatesFilter<"product_keys"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"product_keys"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"product_keys"> | Date | string | null
    reserved_by_order_id?: UuidNullableWithAggregatesFilter<"product_keys"> | string | null
    reserved_until?: DateTimeNullableWithAggregatesFilter<"product_keys"> | Date | string | null
  }

  export type user_productsWhereInput = {
    AND?: user_productsWhereInput | user_productsWhereInput[]
    OR?: user_productsWhereInput[]
    NOT?: user_productsWhereInput | user_productsWhereInput[]
    id?: UuidFilter<"user_products"> | string
    user_id?: UuidFilter<"user_products"> | string
    product_id?: UuidFilter<"user_products"> | string
    added_at?: DateTimeFilter<"user_products"> | Date | string
    product_key_id?: UuidNullableFilter<"user_products"> | string | null
    code?: StringNullableFilter<"user_products"> | string | null
    products?: XOR<ProductsScalarRelationFilter, productsWhereInput>
    product_keys_user_products_product_key_idToproduct_keys?: XOR<Product_keysNullableScalarRelationFilter, product_keysWhereInput> | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type user_productsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    added_at?: SortOrder
    product_key_id?: SortOrderInput | SortOrder
    code?: SortOrderInput | SortOrder
    products?: productsOrderByWithRelationInput
    product_keys_user_products_product_key_idToproduct_keys?: product_keysOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type user_productsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    product_key_id?: string
    code?: string
    AND?: user_productsWhereInput | user_productsWhereInput[]
    OR?: user_productsWhereInput[]
    NOT?: user_productsWhereInput | user_productsWhereInput[]
    user_id?: UuidFilter<"user_products"> | string
    product_id?: UuidFilter<"user_products"> | string
    added_at?: DateTimeFilter<"user_products"> | Date | string
    products?: XOR<ProductsScalarRelationFilter, productsWhereInput>
    product_keys_user_products_product_key_idToproduct_keys?: XOR<Product_keysNullableScalarRelationFilter, product_keysWhereInput> | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "product_key_id" | "code">

  export type user_productsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    added_at?: SortOrder
    product_key_id?: SortOrderInput | SortOrder
    code?: SortOrderInput | SortOrder
    _count?: user_productsCountOrderByAggregateInput
    _max?: user_productsMaxOrderByAggregateInput
    _min?: user_productsMinOrderByAggregateInput
  }

  export type user_productsScalarWhereWithAggregatesInput = {
    AND?: user_productsScalarWhereWithAggregatesInput | user_productsScalarWhereWithAggregatesInput[]
    OR?: user_productsScalarWhereWithAggregatesInput[]
    NOT?: user_productsScalarWhereWithAggregatesInput | user_productsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"user_products"> | string
    user_id?: UuidWithAggregatesFilter<"user_products"> | string
    product_id?: UuidWithAggregatesFilter<"user_products"> | string
    added_at?: DateTimeWithAggregatesFilter<"user_products"> | Date | string
    product_key_id?: UuidNullableWithAggregatesFilter<"user_products"> | string | null
    code?: StringNullableWithAggregatesFilter<"user_products"> | string | null
  }

  export type db_name_aliasesWhereInput = {
    AND?: db_name_aliasesWhereInput | db_name_aliasesWhereInput[]
    OR?: db_name_aliasesWhereInput[]
    NOT?: db_name_aliasesWhereInput | db_name_aliasesWhereInput[]
    id?: UuidFilter<"db_name_aliases"> | string
    table_name?: StringFilter<"db_name_aliases"> | string
    alias_name?: StringFilter<"db_name_aliases"> | string
    description?: StringNullableFilter<"db_name_aliases"> | string | null
  }

  export type db_name_aliasesOrderByWithRelationInput = {
    id?: SortOrder
    table_name?: SortOrder
    alias_name?: SortOrder
    description?: SortOrderInput | SortOrder
  }

  export type db_name_aliasesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: db_name_aliasesWhereInput | db_name_aliasesWhereInput[]
    OR?: db_name_aliasesWhereInput[]
    NOT?: db_name_aliasesWhereInput | db_name_aliasesWhereInput[]
    table_name?: StringFilter<"db_name_aliases"> | string
    alias_name?: StringFilter<"db_name_aliases"> | string
    description?: StringNullableFilter<"db_name_aliases"> | string | null
  }, "id">

  export type db_name_aliasesOrderByWithAggregationInput = {
    id?: SortOrder
    table_name?: SortOrder
    alias_name?: SortOrder
    description?: SortOrderInput | SortOrder
    _count?: db_name_aliasesCountOrderByAggregateInput
    _max?: db_name_aliasesMaxOrderByAggregateInput
    _min?: db_name_aliasesMinOrderByAggregateInput
  }

  export type db_name_aliasesScalarWhereWithAggregatesInput = {
    AND?: db_name_aliasesScalarWhereWithAggregatesInput | db_name_aliasesScalarWhereWithAggregatesInput[]
    OR?: db_name_aliasesScalarWhereWithAggregatesInput[]
    NOT?: db_name_aliasesScalarWhereWithAggregatesInput | db_name_aliasesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"db_name_aliases"> | string
    table_name?: StringWithAggregatesFilter<"db_name_aliases"> | string
    alias_name?: StringWithAggregatesFilter<"db_name_aliases"> | string
    description?: StringNullableWithAggregatesFilter<"db_name_aliases"> | string | null
  }

  export type staff_membersWhereInput = {
    AND?: staff_membersWhereInput | staff_membersWhereInput[]
    OR?: staff_membersWhereInput[]
    NOT?: staff_membersWhereInput | staff_membersWhereInput[]
    id?: UuidFilter<"staff_members"> | string
    username?: StringFilter<"staff_members"> | string
    email?: StringFilter<"staff_members"> | string
    password?: StringFilter<"staff_members"> | string
    created_at?: DateTimeNullableFilter<"staff_members"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"staff_members"> | Date | string | null
    role?: EnumStaffRoleFilter<"staff_members"> | $Enums.StaffRole
    staff_rights?: Staff_rightsListRelationFilter
    support_requests?: Support_requestsListRelationFilter
  }

  export type staff_membersOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    role?: SortOrder
    staff_rights?: staff_rightsOrderByRelationAggregateInput
    support_requests?: support_requestsOrderByRelationAggregateInput
  }

  export type staff_membersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: staff_membersWhereInput | staff_membersWhereInput[]
    OR?: staff_membersWhereInput[]
    NOT?: staff_membersWhereInput | staff_membersWhereInput[]
    username?: StringFilter<"staff_members"> | string
    password?: StringFilter<"staff_members"> | string
    created_at?: DateTimeNullableFilter<"staff_members"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"staff_members"> | Date | string | null
    role?: EnumStaffRoleFilter<"staff_members"> | $Enums.StaffRole
    staff_rights?: Staff_rightsListRelationFilter
    support_requests?: Support_requestsListRelationFilter
  }, "id" | "email">

  export type staff_membersOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    role?: SortOrder
    _count?: staff_membersCountOrderByAggregateInput
    _max?: staff_membersMaxOrderByAggregateInput
    _min?: staff_membersMinOrderByAggregateInput
  }

  export type staff_membersScalarWhereWithAggregatesInput = {
    AND?: staff_membersScalarWhereWithAggregatesInput | staff_membersScalarWhereWithAggregatesInput[]
    OR?: staff_membersScalarWhereWithAggregatesInput[]
    NOT?: staff_membersScalarWhereWithAggregatesInput | staff_membersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"staff_members"> | string
    username?: StringWithAggregatesFilter<"staff_members"> | string
    email?: StringWithAggregatesFilter<"staff_members"> | string
    password?: StringWithAggregatesFilter<"staff_members"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"staff_members"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"staff_members"> | Date | string | null
    role?: EnumStaffRoleWithAggregatesFilter<"staff_members"> | $Enums.StaffRole
  }

  export type staff_rightsWhereInput = {
    AND?: staff_rightsWhereInput | staff_rightsWhereInput[]
    OR?: staff_rightsWhereInput[]
    NOT?: staff_rightsWhereInput | staff_rightsWhereInput[]
    id?: UuidFilter<"staff_rights"> | string
    component_name?: StringFilter<"staff_rights"> | string
    can_access?: BoolNullableFilter<"staff_rights"> | boolean | null
    staff_member_id?: UuidNullableFilter<"staff_rights"> | string | null
    role?: EnumStaffRoleNullableFilter<"staff_rights"> | $Enums.StaffRole | null
    staff_members?: XOR<Staff_membersNullableScalarRelationFilter, staff_membersWhereInput> | null
  }

  export type staff_rightsOrderByWithRelationInput = {
    id?: SortOrder
    component_name?: SortOrder
    can_access?: SortOrderInput | SortOrder
    staff_member_id?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    staff_members?: staff_membersOrderByWithRelationInput
  }

  export type staff_rightsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    staff_member_id_component_name?: staff_rightsStaff_member_idComponent_nameCompoundUniqueInput
    AND?: staff_rightsWhereInput | staff_rightsWhereInput[]
    OR?: staff_rightsWhereInput[]
    NOT?: staff_rightsWhereInput | staff_rightsWhereInput[]
    component_name?: StringFilter<"staff_rights"> | string
    can_access?: BoolNullableFilter<"staff_rights"> | boolean | null
    staff_member_id?: UuidNullableFilter<"staff_rights"> | string | null
    role?: EnumStaffRoleNullableFilter<"staff_rights"> | $Enums.StaffRole | null
    staff_members?: XOR<Staff_membersNullableScalarRelationFilter, staff_membersWhereInput> | null
  }, "id" | "staff_member_id_component_name">

  export type staff_rightsOrderByWithAggregationInput = {
    id?: SortOrder
    component_name?: SortOrder
    can_access?: SortOrderInput | SortOrder
    staff_member_id?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    _count?: staff_rightsCountOrderByAggregateInput
    _max?: staff_rightsMaxOrderByAggregateInput
    _min?: staff_rightsMinOrderByAggregateInput
  }

  export type staff_rightsScalarWhereWithAggregatesInput = {
    AND?: staff_rightsScalarWhereWithAggregatesInput | staff_rightsScalarWhereWithAggregatesInput[]
    OR?: staff_rightsScalarWhereWithAggregatesInput[]
    NOT?: staff_rightsScalarWhereWithAggregatesInput | staff_rightsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"staff_rights"> | string
    component_name?: StringWithAggregatesFilter<"staff_rights"> | string
    can_access?: BoolNullableWithAggregatesFilter<"staff_rights"> | boolean | null
    staff_member_id?: UuidNullableWithAggregatesFilter<"staff_rights"> | string | null
    role?: EnumStaffRoleNullableWithAggregatesFilter<"staff_rights"> | $Enums.StaffRole | null
  }

  export type keys_aliasesWhereInput = {
    AND?: keys_aliasesWhereInput | keys_aliasesWhereInput[]
    OR?: keys_aliasesWhereInput[]
    NOT?: keys_aliasesWhereInput | keys_aliasesWhereInput[]
    id?: UuidFilter<"keys_aliases"> | string
    product_key_id?: UuidFilter<"keys_aliases"> | string
    code?: StringFilter<"keys_aliases"> | string
    purchased?: BoolNullableFilter<"keys_aliases"> | boolean | null
    created_at?: DateTimeNullableFilter<"keys_aliases"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"keys_aliases"> | Date | string | null
    activated?: BoolNullableFilter<"keys_aliases"> | boolean | null
    activated_at?: DateTimeNullableFilter<"keys_aliases"> | Date | string | null
    active?: BoolNullableFilter<"keys_aliases"> | boolean | null
    active_days?: IntNullableFilter<"keys_aliases"> | number | null
    product_keys?: XOR<Product_keysScalarRelationFilter, product_keysWhereInput>
    order_item_units?: XOR<Order_item_unitsNullableScalarRelationFilter, order_item_unitsWhereInput> | null
    order_items?: Order_itemsListRelationFilter
  }

  export type keys_aliasesOrderByWithRelationInput = {
    id?: SortOrder
    product_key_id?: SortOrder
    code?: SortOrder
    purchased?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    activated?: SortOrderInput | SortOrder
    activated_at?: SortOrderInput | SortOrder
    active?: SortOrderInput | SortOrder
    active_days?: SortOrderInput | SortOrder
    product_keys?: product_keysOrderByWithRelationInput
    order_item_units?: order_item_unitsOrderByWithRelationInput
    order_items?: order_itemsOrderByRelationAggregateInput
  }

  export type keys_aliasesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    code?: string
    AND?: keys_aliasesWhereInput | keys_aliasesWhereInput[]
    OR?: keys_aliasesWhereInput[]
    NOT?: keys_aliasesWhereInput | keys_aliasesWhereInput[]
    product_key_id?: UuidFilter<"keys_aliases"> | string
    purchased?: BoolNullableFilter<"keys_aliases"> | boolean | null
    created_at?: DateTimeNullableFilter<"keys_aliases"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"keys_aliases"> | Date | string | null
    activated?: BoolNullableFilter<"keys_aliases"> | boolean | null
    activated_at?: DateTimeNullableFilter<"keys_aliases"> | Date | string | null
    active?: BoolNullableFilter<"keys_aliases"> | boolean | null
    active_days?: IntNullableFilter<"keys_aliases"> | number | null
    product_keys?: XOR<Product_keysScalarRelationFilter, product_keysWhereInput>
    order_item_units?: XOR<Order_item_unitsNullableScalarRelationFilter, order_item_unitsWhereInput> | null
    order_items?: Order_itemsListRelationFilter
  }, "id" | "code">

  export type keys_aliasesOrderByWithAggregationInput = {
    id?: SortOrder
    product_key_id?: SortOrder
    code?: SortOrder
    purchased?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    activated?: SortOrderInput | SortOrder
    activated_at?: SortOrderInput | SortOrder
    active?: SortOrderInput | SortOrder
    active_days?: SortOrderInput | SortOrder
    _count?: keys_aliasesCountOrderByAggregateInput
    _avg?: keys_aliasesAvgOrderByAggregateInput
    _max?: keys_aliasesMaxOrderByAggregateInput
    _min?: keys_aliasesMinOrderByAggregateInput
    _sum?: keys_aliasesSumOrderByAggregateInput
  }

  export type keys_aliasesScalarWhereWithAggregatesInput = {
    AND?: keys_aliasesScalarWhereWithAggregatesInput | keys_aliasesScalarWhereWithAggregatesInput[]
    OR?: keys_aliasesScalarWhereWithAggregatesInput[]
    NOT?: keys_aliasesScalarWhereWithAggregatesInput | keys_aliasesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"keys_aliases"> | string
    product_key_id?: UuidWithAggregatesFilter<"keys_aliases"> | string
    code?: StringWithAggregatesFilter<"keys_aliases"> | string
    purchased?: BoolNullableWithAggregatesFilter<"keys_aliases"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"keys_aliases"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"keys_aliases"> | Date | string | null
    activated?: BoolNullableWithAggregatesFilter<"keys_aliases"> | boolean | null
    activated_at?: DateTimeNullableWithAggregatesFilter<"keys_aliases"> | Date | string | null
    active?: BoolNullableWithAggregatesFilter<"keys_aliases"> | boolean | null
    active_days?: IntNullableWithAggregatesFilter<"keys_aliases"> | number | null
  }

  export type PostWhereInput = {
    AND?: PostWhereInput | PostWhereInput[]
    OR?: PostWhereInput[]
    NOT?: PostWhereInput | PostWhereInput[]
    id?: UuidFilter<"Post"> | string
    raw_html?: StringNullableFilter<"Post"> | string | null
    description?: StringNullableFilter<"Post"> | string | null
    image?: StringNullableFilter<"Post"> | string | null
    button_text?: StringNullableFilter<"Post"> | string | null
    button_href?: StringNullableFilter<"Post"> | string | null
    updatedAt?: DateTimeFilter<"Post"> | Date | string
  }

  export type PostOrderByWithRelationInput = {
    id?: SortOrder
    raw_html?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    button_text?: SortOrderInput | SortOrder
    button_href?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
  }

  export type PostWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PostWhereInput | PostWhereInput[]
    OR?: PostWhereInput[]
    NOT?: PostWhereInput | PostWhereInput[]
    raw_html?: StringNullableFilter<"Post"> | string | null
    description?: StringNullableFilter<"Post"> | string | null
    image?: StringNullableFilter<"Post"> | string | null
    button_text?: StringNullableFilter<"Post"> | string | null
    button_href?: StringNullableFilter<"Post"> | string | null
    updatedAt?: DateTimeFilter<"Post"> | Date | string
  }, "id">

  export type PostOrderByWithAggregationInput = {
    id?: SortOrder
    raw_html?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    button_text?: SortOrderInput | SortOrder
    button_href?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: PostCountOrderByAggregateInput
    _max?: PostMaxOrderByAggregateInput
    _min?: PostMinOrderByAggregateInput
  }

  export type PostScalarWhereWithAggregatesInput = {
    AND?: PostScalarWhereWithAggregatesInput | PostScalarWhereWithAggregatesInput[]
    OR?: PostScalarWhereWithAggregatesInput[]
    NOT?: PostScalarWhereWithAggregatesInput | PostScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Post"> | string
    raw_html?: StringNullableWithAggregatesFilter<"Post"> | string | null
    description?: StringNullableWithAggregatesFilter<"Post"> | string | null
    image?: StringNullableWithAggregatesFilter<"Post"> | string | null
    button_text?: StringNullableWithAggregatesFilter<"Post"> | string | null
    button_href?: StringNullableWithAggregatesFilter<"Post"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"Post"> | Date | string
  }

  export type DraftWhereInput = {
    AND?: DraftWhereInput | DraftWhereInput[]
    OR?: DraftWhereInput[]
    NOT?: DraftWhereInput | DraftWhereInput[]
    id?: UuidFilter<"Draft"> | string
    raw_html?: StringNullableFilter<"Draft"> | string | null
    description?: StringNullableFilter<"Draft"> | string | null
    image?: StringNullableFilter<"Draft"> | string | null
    button_text?: StringNullableFilter<"Draft"> | string | null
    button_href?: StringNullableFilter<"Draft"> | string | null
    createdAt?: DateTimeFilter<"Draft"> | Date | string
    updatedAt?: DateTimeFilter<"Draft"> | Date | string
  }

  export type DraftOrderByWithRelationInput = {
    id?: SortOrder
    raw_html?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    button_text?: SortOrderInput | SortOrder
    button_href?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DraftWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DraftWhereInput | DraftWhereInput[]
    OR?: DraftWhereInput[]
    NOT?: DraftWhereInput | DraftWhereInput[]
    raw_html?: StringNullableFilter<"Draft"> | string | null
    description?: StringNullableFilter<"Draft"> | string | null
    image?: StringNullableFilter<"Draft"> | string | null
    button_text?: StringNullableFilter<"Draft"> | string | null
    button_href?: StringNullableFilter<"Draft"> | string | null
    createdAt?: DateTimeFilter<"Draft"> | Date | string
    updatedAt?: DateTimeFilter<"Draft"> | Date | string
  }, "id">

  export type DraftOrderByWithAggregationInput = {
    id?: SortOrder
    raw_html?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    button_text?: SortOrderInput | SortOrder
    button_href?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DraftCountOrderByAggregateInput
    _max?: DraftMaxOrderByAggregateInput
    _min?: DraftMinOrderByAggregateInput
  }

  export type DraftScalarWhereWithAggregatesInput = {
    AND?: DraftScalarWhereWithAggregatesInput | DraftScalarWhereWithAggregatesInput[]
    OR?: DraftScalarWhereWithAggregatesInput[]
    NOT?: DraftScalarWhereWithAggregatesInput | DraftScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Draft"> | string
    raw_html?: StringNullableWithAggregatesFilter<"Draft"> | string | null
    description?: StringNullableWithAggregatesFilter<"Draft"> | string | null
    image?: StringNullableWithAggregatesFilter<"Draft"> | string | null
    button_text?: StringNullableWithAggregatesFilter<"Draft"> | string | null
    button_href?: StringNullableWithAggregatesFilter<"Draft"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Draft"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Draft"> | Date | string
  }

  export type key_eventsWhereInput = {
    AND?: key_eventsWhereInput | key_eventsWhereInput[]
    OR?: key_eventsWhereInput[]
    NOT?: key_eventsWhereInput | key_eventsWhereInput[]
    id?: UuidFilter<"key_events"> | string
    product_key_id?: UuidNullableFilter<"key_events"> | string | null
    alias_id?: UuidNullableFilter<"key_events"> | string | null
    order_id?: UuidNullableFilter<"key_events"> | string | null
    order_item_id?: UuidNullableFilter<"key_events"> | string | null
    event?: EnumKeyEventTypeFilter<"key_events"> | $Enums.KeyEventType
    details?: JsonNullableFilter<"key_events">
    created_at?: DateTimeFilter<"key_events"> | Date | string
    product_keys?: XOR<Product_keysNullableScalarRelationFilter, product_keysWhereInput> | null
  }

  export type key_eventsOrderByWithRelationInput = {
    id?: SortOrder
    product_key_id?: SortOrderInput | SortOrder
    alias_id?: SortOrderInput | SortOrder
    order_id?: SortOrderInput | SortOrder
    order_item_id?: SortOrderInput | SortOrder
    event?: SortOrder
    details?: SortOrderInput | SortOrder
    created_at?: SortOrder
    product_keys?: product_keysOrderByWithRelationInput
  }

  export type key_eventsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: key_eventsWhereInput | key_eventsWhereInput[]
    OR?: key_eventsWhereInput[]
    NOT?: key_eventsWhereInput | key_eventsWhereInput[]
    product_key_id?: UuidNullableFilter<"key_events"> | string | null
    alias_id?: UuidNullableFilter<"key_events"> | string | null
    order_id?: UuidNullableFilter<"key_events"> | string | null
    order_item_id?: UuidNullableFilter<"key_events"> | string | null
    event?: EnumKeyEventTypeFilter<"key_events"> | $Enums.KeyEventType
    details?: JsonNullableFilter<"key_events">
    created_at?: DateTimeFilter<"key_events"> | Date | string
    product_keys?: XOR<Product_keysNullableScalarRelationFilter, product_keysWhereInput> | null
  }, "id">

  export type key_eventsOrderByWithAggregationInput = {
    id?: SortOrder
    product_key_id?: SortOrderInput | SortOrder
    alias_id?: SortOrderInput | SortOrder
    order_id?: SortOrderInput | SortOrder
    order_item_id?: SortOrderInput | SortOrder
    event?: SortOrder
    details?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: key_eventsCountOrderByAggregateInput
    _max?: key_eventsMaxOrderByAggregateInput
    _min?: key_eventsMinOrderByAggregateInput
  }

  export type key_eventsScalarWhereWithAggregatesInput = {
    AND?: key_eventsScalarWhereWithAggregatesInput | key_eventsScalarWhereWithAggregatesInput[]
    OR?: key_eventsScalarWhereWithAggregatesInput[]
    NOT?: key_eventsScalarWhereWithAggregatesInput | key_eventsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"key_events"> | string
    product_key_id?: UuidNullableWithAggregatesFilter<"key_events"> | string | null
    alias_id?: UuidNullableWithAggregatesFilter<"key_events"> | string | null
    order_id?: UuidNullableWithAggregatesFilter<"key_events"> | string | null
    order_item_id?: UuidNullableWithAggregatesFilter<"key_events"> | string | null
    event?: EnumKeyEventTypeWithAggregatesFilter<"key_events"> | $Enums.KeyEventType
    details?: JsonNullableWithAggregatesFilter<"key_events">
    created_at?: DateTimeWithAggregatesFilter<"key_events"> | Date | string
  }

  export type order_item_unitsWhereInput = {
    AND?: order_item_unitsWhereInput | order_item_unitsWhereInput[]
    OR?: order_item_unitsWhereInput[]
    NOT?: order_item_unitsWhereInput | order_item_unitsWhereInput[]
    id?: UuidFilter<"order_item_units"> | string
    order_item_id?: UuidFilter<"order_item_units"> | string
    key_alias_id?: UuidNullableFilter<"order_item_units"> | string | null
    keys_aliases?: XOR<Keys_aliasesNullableScalarRelationFilter, keys_aliasesWhereInput> | null
    order_items?: XOR<Order_itemsScalarRelationFilter, order_itemsWhereInput>
  }

  export type order_item_unitsOrderByWithRelationInput = {
    id?: SortOrder
    order_item_id?: SortOrder
    key_alias_id?: SortOrderInput | SortOrder
    keys_aliases?: keys_aliasesOrderByWithRelationInput
    order_items?: order_itemsOrderByWithRelationInput
  }

  export type order_item_unitsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    key_alias_id?: string
    AND?: order_item_unitsWhereInput | order_item_unitsWhereInput[]
    OR?: order_item_unitsWhereInput[]
    NOT?: order_item_unitsWhereInput | order_item_unitsWhereInput[]
    order_item_id?: UuidFilter<"order_item_units"> | string
    keys_aliases?: XOR<Keys_aliasesNullableScalarRelationFilter, keys_aliasesWhereInput> | null
    order_items?: XOR<Order_itemsScalarRelationFilter, order_itemsWhereInput>
  }, "id" | "key_alias_id">

  export type order_item_unitsOrderByWithAggregationInput = {
    id?: SortOrder
    order_item_id?: SortOrder
    key_alias_id?: SortOrderInput | SortOrder
    _count?: order_item_unitsCountOrderByAggregateInput
    _max?: order_item_unitsMaxOrderByAggregateInput
    _min?: order_item_unitsMinOrderByAggregateInput
  }

  export type order_item_unitsScalarWhereWithAggregatesInput = {
    AND?: order_item_unitsScalarWhereWithAggregatesInput | order_item_unitsScalarWhereWithAggregatesInput[]
    OR?: order_item_unitsScalarWhereWithAggregatesInput[]
    NOT?: order_item_unitsScalarWhereWithAggregatesInput | order_item_unitsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"order_item_units"> | string
    order_item_id?: UuidWithAggregatesFilter<"order_item_units"> | string
    key_alias_id?: UuidNullableWithAggregatesFilter<"order_item_units"> | string | null
  }

  export type order_itemsWhereInput = {
    AND?: order_itemsWhereInput | order_itemsWhereInput[]
    OR?: order_itemsWhereInput[]
    NOT?: order_itemsWhereInput | order_itemsWhereInput[]
    id?: UuidFilter<"order_items"> | string
    order_id?: UuidFilter<"order_items"> | string
    product_id?: UuidNullableFilter<"order_items"> | string | null
    qty?: IntFilter<"order_items"> | number
    key_alias_id?: UuidNullableFilter<"order_items"> | string | null
    created_at?: DateTimeNullableFilter<"order_items"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"order_items"> | Date | string | null
    item_type?: EnumOrderItemTypeFilter<"order_items"> | $Enums.OrderItemType
    subscription_id?: UuidNullableFilter<"order_items"> | string | null
    order_item_units?: Order_item_unitsListRelationFilter
    keys_aliases?: XOR<Keys_aliasesNullableScalarRelationFilter, keys_aliasesWhereInput> | null
    orders?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
    products?: XOR<ProductsNullableScalarRelationFilter, productsWhereInput> | null
    subscriptions?: XOR<SubscriptionsNullableScalarRelationFilter, subscriptionsWhereInput> | null
  }

  export type order_itemsOrderByWithRelationInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_id?: SortOrderInput | SortOrder
    qty?: SortOrder
    key_alias_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    item_type?: SortOrder
    subscription_id?: SortOrderInput | SortOrder
    order_item_units?: order_item_unitsOrderByRelationAggregateInput
    keys_aliases?: keys_aliasesOrderByWithRelationInput
    orders?: ordersOrderByWithRelationInput
    products?: productsOrderByWithRelationInput
    subscriptions?: subscriptionsOrderByWithRelationInput
  }

  export type order_itemsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: order_itemsWhereInput | order_itemsWhereInput[]
    OR?: order_itemsWhereInput[]
    NOT?: order_itemsWhereInput | order_itemsWhereInput[]
    order_id?: UuidFilter<"order_items"> | string
    product_id?: UuidNullableFilter<"order_items"> | string | null
    qty?: IntFilter<"order_items"> | number
    key_alias_id?: UuidNullableFilter<"order_items"> | string | null
    created_at?: DateTimeNullableFilter<"order_items"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"order_items"> | Date | string | null
    item_type?: EnumOrderItemTypeFilter<"order_items"> | $Enums.OrderItemType
    subscription_id?: UuidNullableFilter<"order_items"> | string | null
    order_item_units?: Order_item_unitsListRelationFilter
    keys_aliases?: XOR<Keys_aliasesNullableScalarRelationFilter, keys_aliasesWhereInput> | null
    orders?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
    products?: XOR<ProductsNullableScalarRelationFilter, productsWhereInput> | null
    subscriptions?: XOR<SubscriptionsNullableScalarRelationFilter, subscriptionsWhereInput> | null
  }, "id">

  export type order_itemsOrderByWithAggregationInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_id?: SortOrderInput | SortOrder
    qty?: SortOrder
    key_alias_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    item_type?: SortOrder
    subscription_id?: SortOrderInput | SortOrder
    _count?: order_itemsCountOrderByAggregateInput
    _avg?: order_itemsAvgOrderByAggregateInput
    _max?: order_itemsMaxOrderByAggregateInput
    _min?: order_itemsMinOrderByAggregateInput
    _sum?: order_itemsSumOrderByAggregateInput
  }

  export type order_itemsScalarWhereWithAggregatesInput = {
    AND?: order_itemsScalarWhereWithAggregatesInput | order_itemsScalarWhereWithAggregatesInput[]
    OR?: order_itemsScalarWhereWithAggregatesInput[]
    NOT?: order_itemsScalarWhereWithAggregatesInput | order_itemsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"order_items"> | string
    order_id?: UuidWithAggregatesFilter<"order_items"> | string
    product_id?: UuidNullableWithAggregatesFilter<"order_items"> | string | null
    qty?: IntWithAggregatesFilter<"order_items"> | number
    key_alias_id?: UuidNullableWithAggregatesFilter<"order_items"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"order_items"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"order_items"> | Date | string | null
    item_type?: EnumOrderItemTypeWithAggregatesFilter<"order_items"> | $Enums.OrderItemType
    subscription_id?: UuidNullableWithAggregatesFilter<"order_items"> | string | null
  }

  export type ordersWhereInput = {
    AND?: ordersWhereInput | ordersWhereInput[]
    OR?: ordersWhereInput[]
    NOT?: ordersWhereInput | ordersWhereInput[]
    id?: UuidFilter<"orders"> | string
    user_id?: UuidFilter<"orders"> | string
    status?: EnumOrderStatusFilter<"orders"> | $Enums.OrderStatus
    provider_order_id?: StringNullableFilter<"orders"> | string | null
    amount?: DecimalNullableFilter<"orders"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringNullableFilter<"orders"> | string | null
    created_at?: DateTimeNullableFilter<"orders"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"orders"> | Date | string | null
    order_number?: StringFilter<"orders"> | string
    order_items?: Order_itemsListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type ordersOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    status?: SortOrder
    provider_order_id?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    currency?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    order_number?: SortOrder
    order_items?: order_itemsOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
  }

  export type ordersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    provider_order_id?: string
    order_number?: string
    AND?: ordersWhereInput | ordersWhereInput[]
    OR?: ordersWhereInput[]
    NOT?: ordersWhereInput | ordersWhereInput[]
    user_id?: UuidFilter<"orders"> | string
    status?: EnumOrderStatusFilter<"orders"> | $Enums.OrderStatus
    amount?: DecimalNullableFilter<"orders"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringNullableFilter<"orders"> | string | null
    created_at?: DateTimeNullableFilter<"orders"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"orders"> | Date | string | null
    order_items?: Order_itemsListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "provider_order_id" | "order_number">

  export type ordersOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    status?: SortOrder
    provider_order_id?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    currency?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    order_number?: SortOrder
    _count?: ordersCountOrderByAggregateInput
    _avg?: ordersAvgOrderByAggregateInput
    _max?: ordersMaxOrderByAggregateInput
    _min?: ordersMinOrderByAggregateInput
    _sum?: ordersSumOrderByAggregateInput
  }

  export type ordersScalarWhereWithAggregatesInput = {
    AND?: ordersScalarWhereWithAggregatesInput | ordersScalarWhereWithAggregatesInput[]
    OR?: ordersScalarWhereWithAggregatesInput[]
    NOT?: ordersScalarWhereWithAggregatesInput | ordersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"orders"> | string
    user_id?: UuidWithAggregatesFilter<"orders"> | string
    status?: EnumOrderStatusWithAggregatesFilter<"orders"> | $Enums.OrderStatus
    provider_order_id?: StringNullableWithAggregatesFilter<"orders"> | string | null
    amount?: DecimalNullableWithAggregatesFilter<"orders"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringNullableWithAggregatesFilter<"orders"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"orders"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"orders"> | Date | string | null
    order_number?: StringWithAggregatesFilter<"orders"> | string
  }

  export type usersCreateInput = {
    id?: string
    username: string
    email: string
    phone?: string | null
    password: string
    created_at?: Date | string | null
    orders?: ordersCreateNestedManyWithoutUsersInput
    support_requests?: support_requestsCreateNestedManyWithoutUserInput
    user_products?: user_productsCreateNestedManyWithoutUsersInput
    user_subscriptions?: user_subscriptionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    id?: string
    username: string
    email: string
    phone?: string | null
    password: string
    created_at?: Date | string | null
    orders?: ordersUncheckedCreateNestedManyWithoutUsersInput
    support_requests?: support_requestsUncheckedCreateNestedManyWithoutUserInput
    user_products?: user_productsUncheckedCreateNestedManyWithoutUsersInput
    user_subscriptions?: user_subscriptionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orders?: ordersUpdateManyWithoutUsersNestedInput
    support_requests?: support_requestsUpdateManyWithoutUserNestedInput
    user_products?: user_productsUpdateManyWithoutUsersNestedInput
    user_subscriptions?: user_subscriptionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orders?: ordersUncheckedUpdateManyWithoutUsersNestedInput
    support_requests?: support_requestsUncheckedUpdateManyWithoutUserNestedInput
    user_products?: user_productsUncheckedUpdateManyWithoutUsersNestedInput
    user_subscriptions?: user_subscriptionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    id?: string
    username: string
    email: string
    phone?: string | null
    password: string
    created_at?: Date | string | null
  }

  export type usersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscriptionsCreateInput = {
    id?: string
    title: string
    duration_days: number
    price: Decimal | DecimalJsLike | number | string
    description?: string | null
    image?: string | null
    order_items?: order_itemsCreateNestedManyWithoutSubscriptionsInput
    user_subscriptions?: user_subscriptionsCreateNestedManyWithoutSubscriptionsInput
  }

  export type subscriptionsUncheckedCreateInput = {
    id?: string
    title: string
    duration_days: number
    price: Decimal | DecimalJsLike | number | string
    description?: string | null
    image?: string | null
    order_items?: order_itemsUncheckedCreateNestedManyWithoutSubscriptionsInput
    user_subscriptions?: user_subscriptionsUncheckedCreateNestedManyWithoutSubscriptionsInput
  }

  export type subscriptionsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    duration_days?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    order_items?: order_itemsUpdateManyWithoutSubscriptionsNestedInput
    user_subscriptions?: user_subscriptionsUpdateManyWithoutSubscriptionsNestedInput
  }

  export type subscriptionsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    duration_days?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    order_items?: order_itemsUncheckedUpdateManyWithoutSubscriptionsNestedInput
    user_subscriptions?: user_subscriptionsUncheckedUpdateManyWithoutSubscriptionsNestedInput
  }

  export type subscriptionsCreateManyInput = {
    id?: string
    title: string
    duration_days: number
    price: Decimal | DecimalJsLike | number | string
    description?: string | null
    image?: string | null
  }

  export type subscriptionsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    duration_days?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type subscriptionsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    duration_days?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_subscriptionsCreateInput = {
    id?: string
    start_date: Date | string
    end_date: Date | string
    active?: boolean
    subscriptions: subscriptionsCreateNestedOneWithoutUser_subscriptionsInput
    users: usersCreateNestedOneWithoutUser_subscriptionsInput
  }

  export type user_subscriptionsUncheckedCreateInput = {
    id?: string
    user_id: string
    subscription_id: string
    start_date: Date | string
    end_date: Date | string
    active?: boolean
  }

  export type user_subscriptionsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    subscriptions?: subscriptionsUpdateOneRequiredWithoutUser_subscriptionsNestedInput
    users?: usersUpdateOneRequiredWithoutUser_subscriptionsNestedInput
  }

  export type user_subscriptionsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type user_subscriptionsCreateManyInput = {
    id?: string
    user_id: string
    subscription_id: string
    start_date: Date | string
    end_date: Date | string
    active?: boolean
  }

  export type user_subscriptionsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type user_subscriptionsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    subscription_id?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type support_requestsCreateInput = {
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    operator_description?: string | null
    updated_at?: Date | string | null
    status?: $Enums.SupportStatus
    operator?: staff_membersCreateNestedOneWithoutSupport_requestsInput
    user: usersCreateNestedOneWithoutSupport_requestsInput
  }

  export type support_requestsUncheckedCreateInput = {
    id?: string
    user_id: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    operator_description?: string | null
    operator_id?: string | null
    updated_at?: Date | string | null
    status?: $Enums.SupportStatus
  }

  export type support_requestsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    operator_description?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumSupportStatusFieldUpdateOperationsInput | $Enums.SupportStatus
    operator?: staff_membersUpdateOneWithoutSupport_requestsNestedInput
    user?: usersUpdateOneRequiredWithoutSupport_requestsNestedInput
  }

  export type support_requestsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    operator_description?: NullableStringFieldUpdateOperationsInput | string | null
    operator_id?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumSupportStatusFieldUpdateOperationsInput | $Enums.SupportStatus
  }

  export type support_requestsCreateManyInput = {
    id?: string
    user_id: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    operator_description?: string | null
    operator_id?: string | null
    updated_at?: Date | string | null
    status?: $Enums.SupportStatus
  }

  export type support_requestsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    operator_description?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumSupportStatusFieldUpdateOperationsInput | $Enums.SupportStatus
  }

  export type support_requestsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    operator_description?: NullableStringFieldUpdateOperationsInput | string | null
    operator_id?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumSupportStatusFieldUpdateOperationsInput | $Enums.SupportStatus
  }

  export type promocodesCreateInput = {
    id?: string
    code: string
    expires_at?: Date | string | null
    denomination: number
    type: string
    promo_usage?: promo_usageCreateNestedManyWithoutPromocodesInput
  }

  export type promocodesUncheckedCreateInput = {
    id?: string
    code: string
    expires_at?: Date | string | null
    denomination: number
    type: string
    promo_usage?: promo_usageUncheckedCreateNestedManyWithoutPromocodesInput
  }

  export type promocodesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    denomination?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    promo_usage?: promo_usageUpdateManyWithoutPromocodesNestedInput
  }

  export type promocodesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    denomination?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    promo_usage?: promo_usageUncheckedUpdateManyWithoutPromocodesNestedInput
  }

  export type promocodesCreateManyInput = {
    id?: string
    code: string
    expires_at?: Date | string | null
    denomination: number
    type: string
  }

  export type promocodesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    denomination?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
  }

  export type promocodesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    denomination?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
  }

  export type promo_usageCreateInput = {
    id?: string
    user_id: string
    used_at?: Date | string | null
    promocodes: promocodesCreateNestedOneWithoutPromo_usageInput
  }

  export type promo_usageUncheckedCreateInput = {
    id?: string
    user_id: string
    promocode_id: string
    used_at?: Date | string | null
  }

  export type promo_usageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    used_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promocodes?: promocodesUpdateOneRequiredWithoutPromo_usageNestedInput
  }

  export type promo_usageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    promocode_id?: StringFieldUpdateOperationsInput | string
    used_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type promo_usageCreateManyInput = {
    id?: string
    user_id: string
    promocode_id: string
    used_at?: Date | string | null
  }

  export type promo_usageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    used_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type promo_usageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    promocode_id?: StringFieldUpdateOperationsInput | string
    used_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type categoriesCreateInput = {
    id?: string
    name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    products?: productsCreateNestedManyWithoutCategoriesInput
  }

  export type categoriesUncheckedCreateInput = {
    id?: string
    name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    products?: productsUncheckedCreateNestedManyWithoutCategoriesInput
  }

  export type categoriesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: productsUpdateManyWithoutCategoriesNestedInput
  }

  export type categoriesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: productsUncheckedUpdateManyWithoutCategoriesNestedInput
  }

  export type categoriesCreateManyInput = {
    id?: string
    name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type categoriesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type categoriesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type productsCreateInput = {
    id?: string
    name: string
    price: Decimal | DecimalJsLike | number | string
    denomination?: string | null
    total_amount?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    img?: string | null
    description?: string | null
    life_duration?: number | null
    order_items?: order_itemsCreateNestedManyWithoutProductsInput
    product_keys?: product_keysCreateNestedManyWithoutProductsInput
    categories?: categoriesCreateNestedOneWithoutProductsInput
    user_products?: user_productsCreateNestedManyWithoutProductsInput
  }

  export type productsUncheckedCreateInput = {
    id?: string
    name: string
    price: Decimal | DecimalJsLike | number | string
    category_id?: string | null
    denomination?: string | null
    total_amount?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    img?: string | null
    description?: string | null
    life_duration?: number | null
    order_items?: order_itemsUncheckedCreateNestedManyWithoutProductsInput
    product_keys?: product_keysUncheckedCreateNestedManyWithoutProductsInput
    user_products?: user_productsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    denomination?: NullableStringFieldUpdateOperationsInput | string | null
    total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    img?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    life_duration?: NullableIntFieldUpdateOperationsInput | number | null
    order_items?: order_itemsUpdateManyWithoutProductsNestedInput
    product_keys?: product_keysUpdateManyWithoutProductsNestedInput
    categories?: categoriesUpdateOneWithoutProductsNestedInput
    user_products?: user_productsUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    category_id?: NullableStringFieldUpdateOperationsInput | string | null
    denomination?: NullableStringFieldUpdateOperationsInput | string | null
    total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    img?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    life_duration?: NullableIntFieldUpdateOperationsInput | number | null
    order_items?: order_itemsUncheckedUpdateManyWithoutProductsNestedInput
    product_keys?: product_keysUncheckedUpdateManyWithoutProductsNestedInput
    user_products?: user_productsUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type productsCreateManyInput = {
    id?: string
    name: string
    price: Decimal | DecimalJsLike | number | string
    category_id?: string | null
    denomination?: string | null
    total_amount?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    img?: string | null
    description?: string | null
    life_duration?: number | null
  }

  export type productsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    denomination?: NullableStringFieldUpdateOperationsInput | string | null
    total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    img?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    life_duration?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type productsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    category_id?: NullableStringFieldUpdateOperationsInput | string | null
    denomination?: NullableStringFieldUpdateOperationsInput | string | null
    total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    img?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    life_duration?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type product_keysCreateInput = {
    id?: string
    key_encrypted: string
    used?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reserved_by_order_id?: string | null
    reserved_until?: Date | string | null
    key_events?: key_eventsCreateNestedManyWithoutProduct_keysInput
    keys_aliases?: keys_aliasesCreateNestedManyWithoutProduct_keysInput
    products?: productsCreateNestedOneWithoutProduct_keysInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsCreateNestedOneWithoutProduct_keys_user_products_product_key_idToproduct_keysInput
  }

  export type product_keysUncheckedCreateInput = {
    id?: string
    product_id?: string | null
    key_encrypted: string
    used?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reserved_by_order_id?: string | null
    reserved_until?: Date | string | null
    key_events?: key_eventsUncheckedCreateNestedManyWithoutProduct_keysInput
    keys_aliases?: keys_aliasesUncheckedCreateNestedManyWithoutProduct_keysInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsUncheckedCreateNestedOneWithoutProduct_keys_user_products_product_key_idToproduct_keysInput
  }

  export type product_keysUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    key_encrypted?: StringFieldUpdateOperationsInput | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reserved_by_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    reserved_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    key_events?: key_eventsUpdateManyWithoutProduct_keysNestedInput
    keys_aliases?: keys_aliasesUpdateManyWithoutProduct_keysNestedInput
    products?: productsUpdateOneWithoutProduct_keysNestedInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsUpdateOneWithoutProduct_keys_user_products_product_key_idToproduct_keysNestedInput
  }

  export type product_keysUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    key_encrypted?: StringFieldUpdateOperationsInput | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reserved_by_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    reserved_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    key_events?: key_eventsUncheckedUpdateManyWithoutProduct_keysNestedInput
    keys_aliases?: keys_aliasesUncheckedUpdateManyWithoutProduct_keysNestedInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsUncheckedUpdateOneWithoutProduct_keys_user_products_product_key_idToproduct_keysNestedInput
  }

  export type product_keysCreateManyInput = {
    id?: string
    product_id?: string | null
    key_encrypted: string
    used?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reserved_by_order_id?: string | null
    reserved_until?: Date | string | null
  }

  export type product_keysUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    key_encrypted?: StringFieldUpdateOperationsInput | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reserved_by_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    reserved_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type product_keysUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    key_encrypted?: StringFieldUpdateOperationsInput | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reserved_by_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    reserved_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_productsCreateInput = {
    id?: string
    added_at?: Date | string
    code?: string | null
    products: productsCreateNestedOneWithoutUser_productsInput
    product_keys_user_products_product_key_idToproduct_keys?: product_keysCreateNestedOneWithoutUser_products_user_products_product_key_idToproduct_keysInput
    users: usersCreateNestedOneWithoutUser_productsInput
  }

  export type user_productsUncheckedCreateInput = {
    id?: string
    user_id: string
    product_id: string
    added_at?: Date | string
    product_key_id?: string | null
    code?: string | null
  }

  export type user_productsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    products?: productsUpdateOneRequiredWithoutUser_productsNestedInput
    product_keys_user_products_product_key_idToproduct_keys?: product_keysUpdateOneWithoutUser_products_user_products_product_key_idToproduct_keysNestedInput
    users?: usersUpdateOneRequiredWithoutUser_productsNestedInput
  }

  export type user_productsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_key_id?: NullableStringFieldUpdateOperationsInput | string | null
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_productsCreateManyInput = {
    id?: string
    user_id: string
    product_id: string
    added_at?: Date | string
    product_key_id?: string | null
    code?: string | null
  }

  export type user_productsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_productsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_key_id?: NullableStringFieldUpdateOperationsInput | string | null
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type db_name_aliasesCreateInput = {
    id?: string
    table_name: string
    alias_name: string
    description?: string | null
  }

  export type db_name_aliasesUncheckedCreateInput = {
    id?: string
    table_name: string
    alias_name: string
    description?: string | null
  }

  export type db_name_aliasesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    alias_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type db_name_aliasesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    alias_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type db_name_aliasesCreateManyInput = {
    id?: string
    table_name: string
    alias_name: string
    description?: string | null
  }

  export type db_name_aliasesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    alias_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type db_name_aliasesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    alias_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type staff_membersCreateInput = {
    id?: string
    username: string
    email: string
    password: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    role: $Enums.StaffRole
    staff_rights?: staff_rightsCreateNestedManyWithoutStaff_membersInput
    support_requests?: support_requestsCreateNestedManyWithoutOperatorInput
  }

  export type staff_membersUncheckedCreateInput = {
    id?: string
    username: string
    email: string
    password: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    role: $Enums.StaffRole
    staff_rights?: staff_rightsUncheckedCreateNestedManyWithoutStaff_membersInput
    support_requests?: support_requestsUncheckedCreateNestedManyWithoutOperatorInput
  }

  export type staff_membersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumStaffRoleFieldUpdateOperationsInput | $Enums.StaffRole
    staff_rights?: staff_rightsUpdateManyWithoutStaff_membersNestedInput
    support_requests?: support_requestsUpdateManyWithoutOperatorNestedInput
  }

  export type staff_membersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumStaffRoleFieldUpdateOperationsInput | $Enums.StaffRole
    staff_rights?: staff_rightsUncheckedUpdateManyWithoutStaff_membersNestedInput
    support_requests?: support_requestsUncheckedUpdateManyWithoutOperatorNestedInput
  }

  export type staff_membersCreateManyInput = {
    id?: string
    username: string
    email: string
    password: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    role: $Enums.StaffRole
  }

  export type staff_membersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumStaffRoleFieldUpdateOperationsInput | $Enums.StaffRole
  }

  export type staff_membersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumStaffRoleFieldUpdateOperationsInput | $Enums.StaffRole
  }

  export type staff_rightsCreateInput = {
    id?: string
    component_name: string
    can_access?: boolean | null
    role?: $Enums.StaffRole | null
    staff_members?: staff_membersCreateNestedOneWithoutStaff_rightsInput
  }

  export type staff_rightsUncheckedCreateInput = {
    id?: string
    component_name: string
    can_access?: boolean | null
    staff_member_id?: string | null
    role?: $Enums.StaffRole | null
  }

  export type staff_rightsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    component_name?: StringFieldUpdateOperationsInput | string
    can_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role?: NullableEnumStaffRoleFieldUpdateOperationsInput | $Enums.StaffRole | null
    staff_members?: staff_membersUpdateOneWithoutStaff_rightsNestedInput
  }

  export type staff_rightsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    component_name?: StringFieldUpdateOperationsInput | string
    can_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    staff_member_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableEnumStaffRoleFieldUpdateOperationsInput | $Enums.StaffRole | null
  }

  export type staff_rightsCreateManyInput = {
    id?: string
    component_name: string
    can_access?: boolean | null
    staff_member_id?: string | null
    role?: $Enums.StaffRole | null
  }

  export type staff_rightsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    component_name?: StringFieldUpdateOperationsInput | string
    can_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role?: NullableEnumStaffRoleFieldUpdateOperationsInput | $Enums.StaffRole | null
  }

  export type staff_rightsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    component_name?: StringFieldUpdateOperationsInput | string
    can_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    staff_member_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableEnumStaffRoleFieldUpdateOperationsInput | $Enums.StaffRole | null
  }

  export type keys_aliasesCreateInput = {
    id?: string
    code: string
    purchased?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activated?: boolean | null
    activated_at?: Date | string | null
    active?: boolean | null
    active_days?: number | null
    product_keys: product_keysCreateNestedOneWithoutKeys_aliasesInput
    order_item_units?: order_item_unitsCreateNestedOneWithoutKeys_aliasesInput
    order_items?: order_itemsCreateNestedManyWithoutKeys_aliasesInput
  }

  export type keys_aliasesUncheckedCreateInput = {
    id?: string
    product_key_id: string
    code: string
    purchased?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activated?: boolean | null
    activated_at?: Date | string | null
    active?: boolean | null
    active_days?: number | null
    order_item_units?: order_item_unitsUncheckedCreateNestedOneWithoutKeys_aliasesInput
    order_items?: order_itemsUncheckedCreateNestedManyWithoutKeys_aliasesInput
  }

  export type keys_aliasesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    purchased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    active_days?: NullableIntFieldUpdateOperationsInput | number | null
    product_keys?: product_keysUpdateOneRequiredWithoutKeys_aliasesNestedInput
    order_item_units?: order_item_unitsUpdateOneWithoutKeys_aliasesNestedInput
    order_items?: order_itemsUpdateManyWithoutKeys_aliasesNestedInput
  }

  export type keys_aliasesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_key_id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    purchased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    active_days?: NullableIntFieldUpdateOperationsInput | number | null
    order_item_units?: order_item_unitsUncheckedUpdateOneWithoutKeys_aliasesNestedInput
    order_items?: order_itemsUncheckedUpdateManyWithoutKeys_aliasesNestedInput
  }

  export type keys_aliasesCreateManyInput = {
    id?: string
    product_key_id: string
    code: string
    purchased?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activated?: boolean | null
    activated_at?: Date | string | null
    active?: boolean | null
    active_days?: number | null
  }

  export type keys_aliasesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    purchased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    active_days?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type keys_aliasesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_key_id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    purchased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    active_days?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PostCreateInput = {
    id?: string
    raw_html?: string | null
    description?: string | null
    image?: string | null
    button_text?: string | null
    button_href?: string | null
    updatedAt?: Date | string
  }

  export type PostUncheckedCreateInput = {
    id?: string
    raw_html?: string | null
    description?: string | null
    image?: string | null
    button_text?: string | null
    button_href?: string | null
    updatedAt?: Date | string
  }

  export type PostUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    raw_html?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    button_text?: NullableStringFieldUpdateOperationsInput | string | null
    button_href?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    raw_html?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    button_text?: NullableStringFieldUpdateOperationsInput | string | null
    button_href?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostCreateManyInput = {
    id?: string
    raw_html?: string | null
    description?: string | null
    image?: string | null
    button_text?: string | null
    button_href?: string | null
    updatedAt?: Date | string
  }

  export type PostUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    raw_html?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    button_text?: NullableStringFieldUpdateOperationsInput | string | null
    button_href?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    raw_html?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    button_text?: NullableStringFieldUpdateOperationsInput | string | null
    button_href?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DraftCreateInput = {
    id?: string
    raw_html?: string | null
    description?: string | null
    image?: string | null
    button_text?: string | null
    button_href?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DraftUncheckedCreateInput = {
    id?: string
    raw_html?: string | null
    description?: string | null
    image?: string | null
    button_text?: string | null
    button_href?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DraftUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    raw_html?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    button_text?: NullableStringFieldUpdateOperationsInput | string | null
    button_href?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DraftUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    raw_html?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    button_text?: NullableStringFieldUpdateOperationsInput | string | null
    button_href?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DraftCreateManyInput = {
    id?: string
    raw_html?: string | null
    description?: string | null
    image?: string | null
    button_text?: string | null
    button_href?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DraftUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    raw_html?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    button_text?: NullableStringFieldUpdateOperationsInput | string | null
    button_href?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DraftUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    raw_html?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    button_text?: NullableStringFieldUpdateOperationsInput | string | null
    button_href?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type key_eventsCreateInput = {
    id?: string
    alias_id?: string | null
    order_id?: string | null
    order_item_id?: string | null
    event: $Enums.KeyEventType
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    product_keys?: product_keysCreateNestedOneWithoutKey_eventsInput
  }

  export type key_eventsUncheckedCreateInput = {
    id?: string
    product_key_id?: string | null
    alias_id?: string | null
    order_id?: string | null
    order_item_id?: string | null
    event: $Enums.KeyEventType
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type key_eventsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_item_id?: NullableStringFieldUpdateOperationsInput | string | null
    event?: EnumKeyEventTypeFieldUpdateOperationsInput | $Enums.KeyEventType
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_keys?: product_keysUpdateOneWithoutKey_eventsNestedInput
  }

  export type key_eventsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_key_id?: NullableStringFieldUpdateOperationsInput | string | null
    alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_item_id?: NullableStringFieldUpdateOperationsInput | string | null
    event?: EnumKeyEventTypeFieldUpdateOperationsInput | $Enums.KeyEventType
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type key_eventsCreateManyInput = {
    id?: string
    product_key_id?: string | null
    alias_id?: string | null
    order_id?: string | null
    order_item_id?: string | null
    event: $Enums.KeyEventType
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type key_eventsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_item_id?: NullableStringFieldUpdateOperationsInput | string | null
    event?: EnumKeyEventTypeFieldUpdateOperationsInput | $Enums.KeyEventType
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type key_eventsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_key_id?: NullableStringFieldUpdateOperationsInput | string | null
    alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_item_id?: NullableStringFieldUpdateOperationsInput | string | null
    event?: EnumKeyEventTypeFieldUpdateOperationsInput | $Enums.KeyEventType
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type order_item_unitsCreateInput = {
    id?: string
    keys_aliases?: keys_aliasesCreateNestedOneWithoutOrder_item_unitsInput
    order_items: order_itemsCreateNestedOneWithoutOrder_item_unitsInput
  }

  export type order_item_unitsUncheckedCreateInput = {
    id?: string
    order_item_id: string
    key_alias_id?: string | null
  }

  export type order_item_unitsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    keys_aliases?: keys_aliasesUpdateOneWithoutOrder_item_unitsNestedInput
    order_items?: order_itemsUpdateOneRequiredWithoutOrder_item_unitsNestedInput
  }

  export type order_item_unitsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_item_id?: StringFieldUpdateOperationsInput | string
    key_alias_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type order_item_unitsCreateManyInput = {
    id?: string
    order_item_id: string
    key_alias_id?: string | null
  }

  export type order_item_unitsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type order_item_unitsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_item_id?: StringFieldUpdateOperationsInput | string
    key_alias_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type order_itemsCreateInput = {
    id?: string
    qty?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    order_item_units?: order_item_unitsCreateNestedManyWithoutOrder_itemsInput
    keys_aliases?: keys_aliasesCreateNestedOneWithoutOrder_itemsInput
    orders: ordersCreateNestedOneWithoutOrder_itemsInput
    products?: productsCreateNestedOneWithoutOrder_itemsInput
    subscriptions?: subscriptionsCreateNestedOneWithoutOrder_itemsInput
  }

  export type order_itemsUncheckedCreateInput = {
    id?: string
    order_id: string
    product_id?: string | null
    qty?: number
    key_alias_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    subscription_id?: string | null
    order_item_units?: order_item_unitsUncheckedCreateNestedManyWithoutOrder_itemsInput
  }

  export type order_itemsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    order_item_units?: order_item_unitsUpdateManyWithoutOrder_itemsNestedInput
    keys_aliases?: keys_aliasesUpdateOneWithoutOrder_itemsNestedInput
    orders?: ordersUpdateOneRequiredWithoutOrder_itemsNestedInput
    products?: productsUpdateOneWithoutOrder_itemsNestedInput
    subscriptions?: subscriptionsUpdateOneWithoutOrder_itemsNestedInput
  }

  export type order_itemsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: IntFieldUpdateOperationsInput | number
    key_alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_item_units?: order_item_unitsUncheckedUpdateManyWithoutOrder_itemsNestedInput
  }

  export type order_itemsCreateManyInput = {
    id?: string
    order_id: string
    product_id?: string | null
    qty?: number
    key_alias_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    subscription_id?: string | null
  }

  export type order_itemsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
  }

  export type order_itemsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: IntFieldUpdateOperationsInput | number
    key_alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ordersCreateInput = {
    id?: string
    status?: $Enums.OrderStatus
    provider_order_id?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_number: string
    order_items?: order_itemsCreateNestedManyWithoutOrdersInput
    users: usersCreateNestedOneWithoutOrdersInput
  }

  export type ordersUncheckedCreateInput = {
    id?: string
    user_id: string
    status?: $Enums.OrderStatus
    provider_order_id?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_number: string
    order_items?: order_itemsUncheckedCreateNestedManyWithoutOrdersInput
  }

  export type ordersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    provider_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_number?: StringFieldUpdateOperationsInput | string
    order_items?: order_itemsUpdateManyWithoutOrdersNestedInput
    users?: usersUpdateOneRequiredWithoutOrdersNestedInput
  }

  export type ordersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    provider_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_number?: StringFieldUpdateOperationsInput | string
    order_items?: order_itemsUncheckedUpdateManyWithoutOrdersNestedInput
  }

  export type ordersCreateManyInput = {
    id?: string
    user_id: string
    status?: $Enums.OrderStatus
    provider_order_id?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_number: string
  }

  export type ordersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    provider_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_number?: StringFieldUpdateOperationsInput | string
  }

  export type ordersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    provider_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_number?: StringFieldUpdateOperationsInput | string
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type OrdersListRelationFilter = {
    every?: ordersWhereInput
    some?: ordersWhereInput
    none?: ordersWhereInput
  }

  export type Support_requestsListRelationFilter = {
    every?: support_requestsWhereInput
    some?: support_requestsWhereInput
    none?: support_requestsWhereInput
  }

  export type User_productsListRelationFilter = {
    every?: user_productsWhereInput
    some?: user_productsWhereInput
    none?: user_productsWhereInput
  }

  export type User_subscriptionsListRelationFilter = {
    every?: user_subscriptionsWhereInput
    some?: user_subscriptionsWhereInput
    none?: user_subscriptionsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ordersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type support_requestsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_productsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_subscriptionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type Order_itemsListRelationFilter = {
    every?: order_itemsWhereInput
    some?: order_itemsWhereInput
    none?: order_itemsWhereInput
  }

  export type order_itemsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type subscriptionsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    duration_days?: SortOrder
    price?: SortOrder
    description?: SortOrder
    image?: SortOrder
  }

  export type subscriptionsAvgOrderByAggregateInput = {
    duration_days?: SortOrder
    price?: SortOrder
  }

  export type subscriptionsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    duration_days?: SortOrder
    price?: SortOrder
    description?: SortOrder
    image?: SortOrder
  }

  export type subscriptionsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    duration_days?: SortOrder
    price?: SortOrder
    description?: SortOrder
    image?: SortOrder
  }

  export type subscriptionsSumOrderByAggregateInput = {
    duration_days?: SortOrder
    price?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type SubscriptionsScalarRelationFilter = {
    is?: subscriptionsWhereInput
    isNot?: subscriptionsWhereInput
  }

  export type UsersScalarRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type user_subscriptionsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    subscription_id?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    active?: SortOrder
  }

  export type user_subscriptionsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    subscription_id?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    active?: SortOrder
  }

  export type user_subscriptionsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    subscription_id?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    active?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type EnumSupportStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SupportStatus | EnumSupportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SupportStatus[] | ListEnumSupportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SupportStatus[] | ListEnumSupportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSupportStatusFilter<$PrismaModel> | $Enums.SupportStatus
  }

  export type Staff_membersNullableScalarRelationFilter = {
    is?: staff_membersWhereInput | null
    isNot?: staff_membersWhereInput | null
  }

  export type support_requestsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    operator_description?: SortOrder
    operator_id?: SortOrder
    updated_at?: SortOrder
    status?: SortOrder
  }

  export type support_requestsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    operator_description?: SortOrder
    operator_id?: SortOrder
    updated_at?: SortOrder
    status?: SortOrder
  }

  export type support_requestsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    operator_description?: SortOrder
    operator_id?: SortOrder
    updated_at?: SortOrder
    status?: SortOrder
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumSupportStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SupportStatus | EnumSupportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SupportStatus[] | ListEnumSupportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SupportStatus[] | ListEnumSupportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSupportStatusWithAggregatesFilter<$PrismaModel> | $Enums.SupportStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSupportStatusFilter<$PrismaModel>
    _max?: NestedEnumSupportStatusFilter<$PrismaModel>
  }

  export type Promo_usageListRelationFilter = {
    every?: promo_usageWhereInput
    some?: promo_usageWhereInput
    none?: promo_usageWhereInput
  }

  export type promo_usageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type promocodesCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    expires_at?: SortOrder
    denomination?: SortOrder
    type?: SortOrder
  }

  export type promocodesAvgOrderByAggregateInput = {
    denomination?: SortOrder
  }

  export type promocodesMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    expires_at?: SortOrder
    denomination?: SortOrder
    type?: SortOrder
  }

  export type promocodesMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    expires_at?: SortOrder
    denomination?: SortOrder
    type?: SortOrder
  }

  export type promocodesSumOrderByAggregateInput = {
    denomination?: SortOrder
  }

  export type PromocodesScalarRelationFilter = {
    is?: promocodesWhereInput
    isNot?: promocodesWhereInput
  }

  export type promo_usageCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    promocode_id?: SortOrder
    used_at?: SortOrder
  }

  export type promo_usageMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    promocode_id?: SortOrder
    used_at?: SortOrder
  }

  export type promo_usageMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    promocode_id?: SortOrder
    used_at?: SortOrder
  }

  export type ProductsListRelationFilter = {
    every?: productsWhereInput
    some?: productsWhereInput
    none?: productsWhereInput
  }

  export type productsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type categoriesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type categoriesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type categoriesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type Product_keysListRelationFilter = {
    every?: product_keysWhereInput
    some?: product_keysWhereInput
    none?: product_keysWhereInput
  }

  export type CategoriesNullableScalarRelationFilter = {
    is?: categoriesWhereInput | null
    isNot?: categoriesWhereInput | null
  }

  export type product_keysOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type productsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    price?: SortOrder
    category_id?: SortOrder
    denomination?: SortOrder
    total_amount?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    img?: SortOrder
    description?: SortOrder
    life_duration?: SortOrder
  }

  export type productsAvgOrderByAggregateInput = {
    price?: SortOrder
    total_amount?: SortOrder
    life_duration?: SortOrder
  }

  export type productsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    price?: SortOrder
    category_id?: SortOrder
    denomination?: SortOrder
    total_amount?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    img?: SortOrder
    description?: SortOrder
    life_duration?: SortOrder
  }

  export type productsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    price?: SortOrder
    category_id?: SortOrder
    denomination?: SortOrder
    total_amount?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    img?: SortOrder
    description?: SortOrder
    life_duration?: SortOrder
  }

  export type productsSumOrderByAggregateInput = {
    price?: SortOrder
    total_amount?: SortOrder
    life_duration?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type Key_eventsListRelationFilter = {
    every?: key_eventsWhereInput
    some?: key_eventsWhereInput
    none?: key_eventsWhereInput
  }

  export type Keys_aliasesListRelationFilter = {
    every?: keys_aliasesWhereInput
    some?: keys_aliasesWhereInput
    none?: keys_aliasesWhereInput
  }

  export type ProductsNullableScalarRelationFilter = {
    is?: productsWhereInput | null
    isNot?: productsWhereInput | null
  }

  export type User_productsNullableScalarRelationFilter = {
    is?: user_productsWhereInput | null
    isNot?: user_productsWhereInput | null
  }

  export type key_eventsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type keys_aliasesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type product_keysCountOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    key_encrypted?: SortOrder
    used?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    reserved_by_order_id?: SortOrder
    reserved_until?: SortOrder
  }

  export type product_keysMaxOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    key_encrypted?: SortOrder
    used?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    reserved_by_order_id?: SortOrder
    reserved_until?: SortOrder
  }

  export type product_keysMinOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    key_encrypted?: SortOrder
    used?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    reserved_by_order_id?: SortOrder
    reserved_until?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type ProductsScalarRelationFilter = {
    is?: productsWhereInput
    isNot?: productsWhereInput
  }

  export type Product_keysNullableScalarRelationFilter = {
    is?: product_keysWhereInput | null
    isNot?: product_keysWhereInput | null
  }

  export type user_productsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    added_at?: SortOrder
    product_key_id?: SortOrder
    code?: SortOrder
  }

  export type user_productsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    added_at?: SortOrder
    product_key_id?: SortOrder
    code?: SortOrder
  }

  export type user_productsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    product_id?: SortOrder
    added_at?: SortOrder
    product_key_id?: SortOrder
    code?: SortOrder
  }

  export type db_name_aliasesCountOrderByAggregateInput = {
    id?: SortOrder
    table_name?: SortOrder
    alias_name?: SortOrder
    description?: SortOrder
  }

  export type db_name_aliasesMaxOrderByAggregateInput = {
    id?: SortOrder
    table_name?: SortOrder
    alias_name?: SortOrder
    description?: SortOrder
  }

  export type db_name_aliasesMinOrderByAggregateInput = {
    id?: SortOrder
    table_name?: SortOrder
    alias_name?: SortOrder
    description?: SortOrder
  }

  export type EnumStaffRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.StaffRole | EnumStaffRoleFieldRefInput<$PrismaModel>
    in?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumStaffRoleFilter<$PrismaModel> | $Enums.StaffRole
  }

  export type Staff_rightsListRelationFilter = {
    every?: staff_rightsWhereInput
    some?: staff_rightsWhereInput
    none?: staff_rightsWhereInput
  }

  export type staff_rightsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type staff_membersCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    role?: SortOrder
  }

  export type staff_membersMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    role?: SortOrder
  }

  export type staff_membersMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    role?: SortOrder
  }

  export type EnumStaffRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StaffRole | EnumStaffRoleFieldRefInput<$PrismaModel>
    in?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumStaffRoleWithAggregatesFilter<$PrismaModel> | $Enums.StaffRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStaffRoleFilter<$PrismaModel>
    _max?: NestedEnumStaffRoleFilter<$PrismaModel>
  }

  export type EnumStaffRoleNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.StaffRole | EnumStaffRoleFieldRefInput<$PrismaModel> | null
    in?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel> | null
    not?: NestedEnumStaffRoleNullableFilter<$PrismaModel> | $Enums.StaffRole | null
  }

  export type staff_rightsStaff_member_idComponent_nameCompoundUniqueInput = {
    staff_member_id: string
    component_name: string
  }

  export type staff_rightsCountOrderByAggregateInput = {
    id?: SortOrder
    component_name?: SortOrder
    can_access?: SortOrder
    staff_member_id?: SortOrder
    role?: SortOrder
  }

  export type staff_rightsMaxOrderByAggregateInput = {
    id?: SortOrder
    component_name?: SortOrder
    can_access?: SortOrder
    staff_member_id?: SortOrder
    role?: SortOrder
  }

  export type staff_rightsMinOrderByAggregateInput = {
    id?: SortOrder
    component_name?: SortOrder
    can_access?: SortOrder
    staff_member_id?: SortOrder
    role?: SortOrder
  }

  export type EnumStaffRoleNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StaffRole | EnumStaffRoleFieldRefInput<$PrismaModel> | null
    in?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel> | null
    not?: NestedEnumStaffRoleNullableWithAggregatesFilter<$PrismaModel> | $Enums.StaffRole | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumStaffRoleNullableFilter<$PrismaModel>
    _max?: NestedEnumStaffRoleNullableFilter<$PrismaModel>
  }

  export type Product_keysScalarRelationFilter = {
    is?: product_keysWhereInput
    isNot?: product_keysWhereInput
  }

  export type Order_item_unitsNullableScalarRelationFilter = {
    is?: order_item_unitsWhereInput | null
    isNot?: order_item_unitsWhereInput | null
  }

  export type keys_aliasesCountOrderByAggregateInput = {
    id?: SortOrder
    product_key_id?: SortOrder
    code?: SortOrder
    purchased?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    activated?: SortOrder
    activated_at?: SortOrder
    active?: SortOrder
    active_days?: SortOrder
  }

  export type keys_aliasesAvgOrderByAggregateInput = {
    active_days?: SortOrder
  }

  export type keys_aliasesMaxOrderByAggregateInput = {
    id?: SortOrder
    product_key_id?: SortOrder
    code?: SortOrder
    purchased?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    activated?: SortOrder
    activated_at?: SortOrder
    active?: SortOrder
    active_days?: SortOrder
  }

  export type keys_aliasesMinOrderByAggregateInput = {
    id?: SortOrder
    product_key_id?: SortOrder
    code?: SortOrder
    purchased?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    activated?: SortOrder
    activated_at?: SortOrder
    active?: SortOrder
    active_days?: SortOrder
  }

  export type keys_aliasesSumOrderByAggregateInput = {
    active_days?: SortOrder
  }

  export type PostCountOrderByAggregateInput = {
    id?: SortOrder
    raw_html?: SortOrder
    description?: SortOrder
    image?: SortOrder
    button_text?: SortOrder
    button_href?: SortOrder
    updatedAt?: SortOrder
  }

  export type PostMaxOrderByAggregateInput = {
    id?: SortOrder
    raw_html?: SortOrder
    description?: SortOrder
    image?: SortOrder
    button_text?: SortOrder
    button_href?: SortOrder
    updatedAt?: SortOrder
  }

  export type PostMinOrderByAggregateInput = {
    id?: SortOrder
    raw_html?: SortOrder
    description?: SortOrder
    image?: SortOrder
    button_text?: SortOrder
    button_href?: SortOrder
    updatedAt?: SortOrder
  }

  export type DraftCountOrderByAggregateInput = {
    id?: SortOrder
    raw_html?: SortOrder
    description?: SortOrder
    image?: SortOrder
    button_text?: SortOrder
    button_href?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DraftMaxOrderByAggregateInput = {
    id?: SortOrder
    raw_html?: SortOrder
    description?: SortOrder
    image?: SortOrder
    button_text?: SortOrder
    button_href?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DraftMinOrderByAggregateInput = {
    id?: SortOrder
    raw_html?: SortOrder
    description?: SortOrder
    image?: SortOrder
    button_text?: SortOrder
    button_href?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumKeyEventTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.KeyEventType | EnumKeyEventTypeFieldRefInput<$PrismaModel>
    in?: $Enums.KeyEventType[] | ListEnumKeyEventTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.KeyEventType[] | ListEnumKeyEventTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumKeyEventTypeFilter<$PrismaModel> | $Enums.KeyEventType
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type key_eventsCountOrderByAggregateInput = {
    id?: SortOrder
    product_key_id?: SortOrder
    alias_id?: SortOrder
    order_id?: SortOrder
    order_item_id?: SortOrder
    event?: SortOrder
    details?: SortOrder
    created_at?: SortOrder
  }

  export type key_eventsMaxOrderByAggregateInput = {
    id?: SortOrder
    product_key_id?: SortOrder
    alias_id?: SortOrder
    order_id?: SortOrder
    order_item_id?: SortOrder
    event?: SortOrder
    created_at?: SortOrder
  }

  export type key_eventsMinOrderByAggregateInput = {
    id?: SortOrder
    product_key_id?: SortOrder
    alias_id?: SortOrder
    order_id?: SortOrder
    order_item_id?: SortOrder
    event?: SortOrder
    created_at?: SortOrder
  }

  export type EnumKeyEventTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.KeyEventType | EnumKeyEventTypeFieldRefInput<$PrismaModel>
    in?: $Enums.KeyEventType[] | ListEnumKeyEventTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.KeyEventType[] | ListEnumKeyEventTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumKeyEventTypeWithAggregatesFilter<$PrismaModel> | $Enums.KeyEventType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumKeyEventTypeFilter<$PrismaModel>
    _max?: NestedEnumKeyEventTypeFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type Keys_aliasesNullableScalarRelationFilter = {
    is?: keys_aliasesWhereInput | null
    isNot?: keys_aliasesWhereInput | null
  }

  export type Order_itemsScalarRelationFilter = {
    is?: order_itemsWhereInput
    isNot?: order_itemsWhereInput
  }

  export type order_item_unitsCountOrderByAggregateInput = {
    id?: SortOrder
    order_item_id?: SortOrder
    key_alias_id?: SortOrder
  }

  export type order_item_unitsMaxOrderByAggregateInput = {
    id?: SortOrder
    order_item_id?: SortOrder
    key_alias_id?: SortOrder
  }

  export type order_item_unitsMinOrderByAggregateInput = {
    id?: SortOrder
    order_item_id?: SortOrder
    key_alias_id?: SortOrder
  }

  export type EnumOrderItemTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderItemType | EnumOrderItemTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderItemType[] | ListEnumOrderItemTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderItemType[] | ListEnumOrderItemTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderItemTypeFilter<$PrismaModel> | $Enums.OrderItemType
  }

  export type Order_item_unitsListRelationFilter = {
    every?: order_item_unitsWhereInput
    some?: order_item_unitsWhereInput
    none?: order_item_unitsWhereInput
  }

  export type OrdersScalarRelationFilter = {
    is?: ordersWhereInput
    isNot?: ordersWhereInput
  }

  export type SubscriptionsNullableScalarRelationFilter = {
    is?: subscriptionsWhereInput | null
    isNot?: subscriptionsWhereInput | null
  }

  export type order_item_unitsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type order_itemsCountOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_id?: SortOrder
    qty?: SortOrder
    key_alias_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    item_type?: SortOrder
    subscription_id?: SortOrder
  }

  export type order_itemsAvgOrderByAggregateInput = {
    qty?: SortOrder
  }

  export type order_itemsMaxOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_id?: SortOrder
    qty?: SortOrder
    key_alias_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    item_type?: SortOrder
    subscription_id?: SortOrder
  }

  export type order_itemsMinOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_id?: SortOrder
    qty?: SortOrder
    key_alias_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    item_type?: SortOrder
    subscription_id?: SortOrder
  }

  export type order_itemsSumOrderByAggregateInput = {
    qty?: SortOrder
  }

  export type EnumOrderItemTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderItemType | EnumOrderItemTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderItemType[] | ListEnumOrderItemTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderItemType[] | ListEnumOrderItemTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderItemTypeWithAggregatesFilter<$PrismaModel> | $Enums.OrderItemType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderItemTypeFilter<$PrismaModel>
    _max?: NestedEnumOrderItemTypeFilter<$PrismaModel>
  }

  export type EnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type ordersCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    status?: SortOrder
    provider_order_id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    order_number?: SortOrder
  }

  export type ordersAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type ordersMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    status?: SortOrder
    provider_order_id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    order_number?: SortOrder
  }

  export type ordersMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    status?: SortOrder
    provider_order_id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    order_number?: SortOrder
  }

  export type ordersSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type EnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type ordersCreateNestedManyWithoutUsersInput = {
    create?: XOR<ordersCreateWithoutUsersInput, ordersUncheckedCreateWithoutUsersInput> | ordersCreateWithoutUsersInput[] | ordersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUsersInput | ordersCreateOrConnectWithoutUsersInput[]
    createMany?: ordersCreateManyUsersInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type support_requestsCreateNestedManyWithoutUserInput = {
    create?: XOR<support_requestsCreateWithoutUserInput, support_requestsUncheckedCreateWithoutUserInput> | support_requestsCreateWithoutUserInput[] | support_requestsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: support_requestsCreateOrConnectWithoutUserInput | support_requestsCreateOrConnectWithoutUserInput[]
    createMany?: support_requestsCreateManyUserInputEnvelope
    connect?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
  }

  export type user_productsCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_productsCreateWithoutUsersInput, user_productsUncheckedCreateWithoutUsersInput> | user_productsCreateWithoutUsersInput[] | user_productsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_productsCreateOrConnectWithoutUsersInput | user_productsCreateOrConnectWithoutUsersInput[]
    createMany?: user_productsCreateManyUsersInputEnvelope
    connect?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
  }

  export type user_subscriptionsCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_subscriptionsCreateWithoutUsersInput, user_subscriptionsUncheckedCreateWithoutUsersInput> | user_subscriptionsCreateWithoutUsersInput[] | user_subscriptionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_subscriptionsCreateOrConnectWithoutUsersInput | user_subscriptionsCreateOrConnectWithoutUsersInput[]
    createMany?: user_subscriptionsCreateManyUsersInputEnvelope
    connect?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
  }

  export type ordersUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<ordersCreateWithoutUsersInput, ordersUncheckedCreateWithoutUsersInput> | ordersCreateWithoutUsersInput[] | ordersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUsersInput | ordersCreateOrConnectWithoutUsersInput[]
    createMany?: ordersCreateManyUsersInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type support_requestsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<support_requestsCreateWithoutUserInput, support_requestsUncheckedCreateWithoutUserInput> | support_requestsCreateWithoutUserInput[] | support_requestsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: support_requestsCreateOrConnectWithoutUserInput | support_requestsCreateOrConnectWithoutUserInput[]
    createMany?: support_requestsCreateManyUserInputEnvelope
    connect?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
  }

  export type user_productsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_productsCreateWithoutUsersInput, user_productsUncheckedCreateWithoutUsersInput> | user_productsCreateWithoutUsersInput[] | user_productsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_productsCreateOrConnectWithoutUsersInput | user_productsCreateOrConnectWithoutUsersInput[]
    createMany?: user_productsCreateManyUsersInputEnvelope
    connect?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
  }

  export type user_subscriptionsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_subscriptionsCreateWithoutUsersInput, user_subscriptionsUncheckedCreateWithoutUsersInput> | user_subscriptionsCreateWithoutUsersInput[] | user_subscriptionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_subscriptionsCreateOrConnectWithoutUsersInput | user_subscriptionsCreateOrConnectWithoutUsersInput[]
    createMany?: user_subscriptionsCreateManyUsersInputEnvelope
    connect?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type ordersUpdateManyWithoutUsersNestedInput = {
    create?: XOR<ordersCreateWithoutUsersInput, ordersUncheckedCreateWithoutUsersInput> | ordersCreateWithoutUsersInput[] | ordersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUsersInput | ordersCreateOrConnectWithoutUsersInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutUsersInput | ordersUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: ordersCreateManyUsersInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutUsersInput | ordersUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutUsersInput | ordersUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type support_requestsUpdateManyWithoutUserNestedInput = {
    create?: XOR<support_requestsCreateWithoutUserInput, support_requestsUncheckedCreateWithoutUserInput> | support_requestsCreateWithoutUserInput[] | support_requestsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: support_requestsCreateOrConnectWithoutUserInput | support_requestsCreateOrConnectWithoutUserInput[]
    upsert?: support_requestsUpsertWithWhereUniqueWithoutUserInput | support_requestsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: support_requestsCreateManyUserInputEnvelope
    set?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    disconnect?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    delete?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    connect?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    update?: support_requestsUpdateWithWhereUniqueWithoutUserInput | support_requestsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: support_requestsUpdateManyWithWhereWithoutUserInput | support_requestsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: support_requestsScalarWhereInput | support_requestsScalarWhereInput[]
  }

  export type user_productsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_productsCreateWithoutUsersInput, user_productsUncheckedCreateWithoutUsersInput> | user_productsCreateWithoutUsersInput[] | user_productsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_productsCreateOrConnectWithoutUsersInput | user_productsCreateOrConnectWithoutUsersInput[]
    upsert?: user_productsUpsertWithWhereUniqueWithoutUsersInput | user_productsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_productsCreateManyUsersInputEnvelope
    set?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    disconnect?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    delete?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    connect?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    update?: user_productsUpdateWithWhereUniqueWithoutUsersInput | user_productsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_productsUpdateManyWithWhereWithoutUsersInput | user_productsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_productsScalarWhereInput | user_productsScalarWhereInput[]
  }

  export type user_subscriptionsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_subscriptionsCreateWithoutUsersInput, user_subscriptionsUncheckedCreateWithoutUsersInput> | user_subscriptionsCreateWithoutUsersInput[] | user_subscriptionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_subscriptionsCreateOrConnectWithoutUsersInput | user_subscriptionsCreateOrConnectWithoutUsersInput[]
    upsert?: user_subscriptionsUpsertWithWhereUniqueWithoutUsersInput | user_subscriptionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_subscriptionsCreateManyUsersInputEnvelope
    set?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    disconnect?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    delete?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    connect?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    update?: user_subscriptionsUpdateWithWhereUniqueWithoutUsersInput | user_subscriptionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_subscriptionsUpdateManyWithWhereWithoutUsersInput | user_subscriptionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_subscriptionsScalarWhereInput | user_subscriptionsScalarWhereInput[]
  }

  export type ordersUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<ordersCreateWithoutUsersInput, ordersUncheckedCreateWithoutUsersInput> | ordersCreateWithoutUsersInput[] | ordersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUsersInput | ordersCreateOrConnectWithoutUsersInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutUsersInput | ordersUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: ordersCreateManyUsersInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutUsersInput | ordersUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutUsersInput | ordersUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type support_requestsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<support_requestsCreateWithoutUserInput, support_requestsUncheckedCreateWithoutUserInput> | support_requestsCreateWithoutUserInput[] | support_requestsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: support_requestsCreateOrConnectWithoutUserInput | support_requestsCreateOrConnectWithoutUserInput[]
    upsert?: support_requestsUpsertWithWhereUniqueWithoutUserInput | support_requestsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: support_requestsCreateManyUserInputEnvelope
    set?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    disconnect?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    delete?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    connect?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    update?: support_requestsUpdateWithWhereUniqueWithoutUserInput | support_requestsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: support_requestsUpdateManyWithWhereWithoutUserInput | support_requestsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: support_requestsScalarWhereInput | support_requestsScalarWhereInput[]
  }

  export type user_productsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_productsCreateWithoutUsersInput, user_productsUncheckedCreateWithoutUsersInput> | user_productsCreateWithoutUsersInput[] | user_productsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_productsCreateOrConnectWithoutUsersInput | user_productsCreateOrConnectWithoutUsersInput[]
    upsert?: user_productsUpsertWithWhereUniqueWithoutUsersInput | user_productsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_productsCreateManyUsersInputEnvelope
    set?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    disconnect?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    delete?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    connect?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    update?: user_productsUpdateWithWhereUniqueWithoutUsersInput | user_productsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_productsUpdateManyWithWhereWithoutUsersInput | user_productsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_productsScalarWhereInput | user_productsScalarWhereInput[]
  }

  export type user_subscriptionsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_subscriptionsCreateWithoutUsersInput, user_subscriptionsUncheckedCreateWithoutUsersInput> | user_subscriptionsCreateWithoutUsersInput[] | user_subscriptionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_subscriptionsCreateOrConnectWithoutUsersInput | user_subscriptionsCreateOrConnectWithoutUsersInput[]
    upsert?: user_subscriptionsUpsertWithWhereUniqueWithoutUsersInput | user_subscriptionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_subscriptionsCreateManyUsersInputEnvelope
    set?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    disconnect?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    delete?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    connect?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    update?: user_subscriptionsUpdateWithWhereUniqueWithoutUsersInput | user_subscriptionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_subscriptionsUpdateManyWithWhereWithoutUsersInput | user_subscriptionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_subscriptionsScalarWhereInput | user_subscriptionsScalarWhereInput[]
  }

  export type order_itemsCreateNestedManyWithoutSubscriptionsInput = {
    create?: XOR<order_itemsCreateWithoutSubscriptionsInput, order_itemsUncheckedCreateWithoutSubscriptionsInput> | order_itemsCreateWithoutSubscriptionsInput[] | order_itemsUncheckedCreateWithoutSubscriptionsInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutSubscriptionsInput | order_itemsCreateOrConnectWithoutSubscriptionsInput[]
    createMany?: order_itemsCreateManySubscriptionsInputEnvelope
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
  }

  export type user_subscriptionsCreateNestedManyWithoutSubscriptionsInput = {
    create?: XOR<user_subscriptionsCreateWithoutSubscriptionsInput, user_subscriptionsUncheckedCreateWithoutSubscriptionsInput> | user_subscriptionsCreateWithoutSubscriptionsInput[] | user_subscriptionsUncheckedCreateWithoutSubscriptionsInput[]
    connectOrCreate?: user_subscriptionsCreateOrConnectWithoutSubscriptionsInput | user_subscriptionsCreateOrConnectWithoutSubscriptionsInput[]
    createMany?: user_subscriptionsCreateManySubscriptionsInputEnvelope
    connect?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
  }

  export type order_itemsUncheckedCreateNestedManyWithoutSubscriptionsInput = {
    create?: XOR<order_itemsCreateWithoutSubscriptionsInput, order_itemsUncheckedCreateWithoutSubscriptionsInput> | order_itemsCreateWithoutSubscriptionsInput[] | order_itemsUncheckedCreateWithoutSubscriptionsInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutSubscriptionsInput | order_itemsCreateOrConnectWithoutSubscriptionsInput[]
    createMany?: order_itemsCreateManySubscriptionsInputEnvelope
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
  }

  export type user_subscriptionsUncheckedCreateNestedManyWithoutSubscriptionsInput = {
    create?: XOR<user_subscriptionsCreateWithoutSubscriptionsInput, user_subscriptionsUncheckedCreateWithoutSubscriptionsInput> | user_subscriptionsCreateWithoutSubscriptionsInput[] | user_subscriptionsUncheckedCreateWithoutSubscriptionsInput[]
    connectOrCreate?: user_subscriptionsCreateOrConnectWithoutSubscriptionsInput | user_subscriptionsCreateOrConnectWithoutSubscriptionsInput[]
    createMany?: user_subscriptionsCreateManySubscriptionsInputEnvelope
    connect?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type order_itemsUpdateManyWithoutSubscriptionsNestedInput = {
    create?: XOR<order_itemsCreateWithoutSubscriptionsInput, order_itemsUncheckedCreateWithoutSubscriptionsInput> | order_itemsCreateWithoutSubscriptionsInput[] | order_itemsUncheckedCreateWithoutSubscriptionsInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutSubscriptionsInput | order_itemsCreateOrConnectWithoutSubscriptionsInput[]
    upsert?: order_itemsUpsertWithWhereUniqueWithoutSubscriptionsInput | order_itemsUpsertWithWhereUniqueWithoutSubscriptionsInput[]
    createMany?: order_itemsCreateManySubscriptionsInputEnvelope
    set?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    disconnect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    delete?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    update?: order_itemsUpdateWithWhereUniqueWithoutSubscriptionsInput | order_itemsUpdateWithWhereUniqueWithoutSubscriptionsInput[]
    updateMany?: order_itemsUpdateManyWithWhereWithoutSubscriptionsInput | order_itemsUpdateManyWithWhereWithoutSubscriptionsInput[]
    deleteMany?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
  }

  export type user_subscriptionsUpdateManyWithoutSubscriptionsNestedInput = {
    create?: XOR<user_subscriptionsCreateWithoutSubscriptionsInput, user_subscriptionsUncheckedCreateWithoutSubscriptionsInput> | user_subscriptionsCreateWithoutSubscriptionsInput[] | user_subscriptionsUncheckedCreateWithoutSubscriptionsInput[]
    connectOrCreate?: user_subscriptionsCreateOrConnectWithoutSubscriptionsInput | user_subscriptionsCreateOrConnectWithoutSubscriptionsInput[]
    upsert?: user_subscriptionsUpsertWithWhereUniqueWithoutSubscriptionsInput | user_subscriptionsUpsertWithWhereUniqueWithoutSubscriptionsInput[]
    createMany?: user_subscriptionsCreateManySubscriptionsInputEnvelope
    set?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    disconnect?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    delete?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    connect?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    update?: user_subscriptionsUpdateWithWhereUniqueWithoutSubscriptionsInput | user_subscriptionsUpdateWithWhereUniqueWithoutSubscriptionsInput[]
    updateMany?: user_subscriptionsUpdateManyWithWhereWithoutSubscriptionsInput | user_subscriptionsUpdateManyWithWhereWithoutSubscriptionsInput[]
    deleteMany?: user_subscriptionsScalarWhereInput | user_subscriptionsScalarWhereInput[]
  }

  export type order_itemsUncheckedUpdateManyWithoutSubscriptionsNestedInput = {
    create?: XOR<order_itemsCreateWithoutSubscriptionsInput, order_itemsUncheckedCreateWithoutSubscriptionsInput> | order_itemsCreateWithoutSubscriptionsInput[] | order_itemsUncheckedCreateWithoutSubscriptionsInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutSubscriptionsInput | order_itemsCreateOrConnectWithoutSubscriptionsInput[]
    upsert?: order_itemsUpsertWithWhereUniqueWithoutSubscriptionsInput | order_itemsUpsertWithWhereUniqueWithoutSubscriptionsInput[]
    createMany?: order_itemsCreateManySubscriptionsInputEnvelope
    set?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    disconnect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    delete?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    update?: order_itemsUpdateWithWhereUniqueWithoutSubscriptionsInput | order_itemsUpdateWithWhereUniqueWithoutSubscriptionsInput[]
    updateMany?: order_itemsUpdateManyWithWhereWithoutSubscriptionsInput | order_itemsUpdateManyWithWhereWithoutSubscriptionsInput[]
    deleteMany?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
  }

  export type user_subscriptionsUncheckedUpdateManyWithoutSubscriptionsNestedInput = {
    create?: XOR<user_subscriptionsCreateWithoutSubscriptionsInput, user_subscriptionsUncheckedCreateWithoutSubscriptionsInput> | user_subscriptionsCreateWithoutSubscriptionsInput[] | user_subscriptionsUncheckedCreateWithoutSubscriptionsInput[]
    connectOrCreate?: user_subscriptionsCreateOrConnectWithoutSubscriptionsInput | user_subscriptionsCreateOrConnectWithoutSubscriptionsInput[]
    upsert?: user_subscriptionsUpsertWithWhereUniqueWithoutSubscriptionsInput | user_subscriptionsUpsertWithWhereUniqueWithoutSubscriptionsInput[]
    createMany?: user_subscriptionsCreateManySubscriptionsInputEnvelope
    set?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    disconnect?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    delete?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    connect?: user_subscriptionsWhereUniqueInput | user_subscriptionsWhereUniqueInput[]
    update?: user_subscriptionsUpdateWithWhereUniqueWithoutSubscriptionsInput | user_subscriptionsUpdateWithWhereUniqueWithoutSubscriptionsInput[]
    updateMany?: user_subscriptionsUpdateManyWithWhereWithoutSubscriptionsInput | user_subscriptionsUpdateManyWithWhereWithoutSubscriptionsInput[]
    deleteMany?: user_subscriptionsScalarWhereInput | user_subscriptionsScalarWhereInput[]
  }

  export type subscriptionsCreateNestedOneWithoutUser_subscriptionsInput = {
    create?: XOR<subscriptionsCreateWithoutUser_subscriptionsInput, subscriptionsUncheckedCreateWithoutUser_subscriptionsInput>
    connectOrCreate?: subscriptionsCreateOrConnectWithoutUser_subscriptionsInput
    connect?: subscriptionsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutUser_subscriptionsInput = {
    create?: XOR<usersCreateWithoutUser_subscriptionsInput, usersUncheckedCreateWithoutUser_subscriptionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_subscriptionsInput
    connect?: usersWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type subscriptionsUpdateOneRequiredWithoutUser_subscriptionsNestedInput = {
    create?: XOR<subscriptionsCreateWithoutUser_subscriptionsInput, subscriptionsUncheckedCreateWithoutUser_subscriptionsInput>
    connectOrCreate?: subscriptionsCreateOrConnectWithoutUser_subscriptionsInput
    upsert?: subscriptionsUpsertWithoutUser_subscriptionsInput
    connect?: subscriptionsWhereUniqueInput
    update?: XOR<XOR<subscriptionsUpdateToOneWithWhereWithoutUser_subscriptionsInput, subscriptionsUpdateWithoutUser_subscriptionsInput>, subscriptionsUncheckedUpdateWithoutUser_subscriptionsInput>
  }

  export type usersUpdateOneRequiredWithoutUser_subscriptionsNestedInput = {
    create?: XOR<usersCreateWithoutUser_subscriptionsInput, usersUncheckedCreateWithoutUser_subscriptionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_subscriptionsInput
    upsert?: usersUpsertWithoutUser_subscriptionsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_subscriptionsInput, usersUpdateWithoutUser_subscriptionsInput>, usersUncheckedUpdateWithoutUser_subscriptionsInput>
  }

  export type staff_membersCreateNestedOneWithoutSupport_requestsInput = {
    create?: XOR<staff_membersCreateWithoutSupport_requestsInput, staff_membersUncheckedCreateWithoutSupport_requestsInput>
    connectOrCreate?: staff_membersCreateOrConnectWithoutSupport_requestsInput
    connect?: staff_membersWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutSupport_requestsInput = {
    create?: XOR<usersCreateWithoutSupport_requestsInput, usersUncheckedCreateWithoutSupport_requestsInput>
    connectOrCreate?: usersCreateOrConnectWithoutSupport_requestsInput
    connect?: usersWhereUniqueInput
  }

  export type EnumSupportStatusFieldUpdateOperationsInput = {
    set?: $Enums.SupportStatus
  }

  export type staff_membersUpdateOneWithoutSupport_requestsNestedInput = {
    create?: XOR<staff_membersCreateWithoutSupport_requestsInput, staff_membersUncheckedCreateWithoutSupport_requestsInput>
    connectOrCreate?: staff_membersCreateOrConnectWithoutSupport_requestsInput
    upsert?: staff_membersUpsertWithoutSupport_requestsInput
    disconnect?: staff_membersWhereInput | boolean
    delete?: staff_membersWhereInput | boolean
    connect?: staff_membersWhereUniqueInput
    update?: XOR<XOR<staff_membersUpdateToOneWithWhereWithoutSupport_requestsInput, staff_membersUpdateWithoutSupport_requestsInput>, staff_membersUncheckedUpdateWithoutSupport_requestsInput>
  }

  export type usersUpdateOneRequiredWithoutSupport_requestsNestedInput = {
    create?: XOR<usersCreateWithoutSupport_requestsInput, usersUncheckedCreateWithoutSupport_requestsInput>
    connectOrCreate?: usersCreateOrConnectWithoutSupport_requestsInput
    upsert?: usersUpsertWithoutSupport_requestsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutSupport_requestsInput, usersUpdateWithoutSupport_requestsInput>, usersUncheckedUpdateWithoutSupport_requestsInput>
  }

  export type promo_usageCreateNestedManyWithoutPromocodesInput = {
    create?: XOR<promo_usageCreateWithoutPromocodesInput, promo_usageUncheckedCreateWithoutPromocodesInput> | promo_usageCreateWithoutPromocodesInput[] | promo_usageUncheckedCreateWithoutPromocodesInput[]
    connectOrCreate?: promo_usageCreateOrConnectWithoutPromocodesInput | promo_usageCreateOrConnectWithoutPromocodesInput[]
    createMany?: promo_usageCreateManyPromocodesInputEnvelope
    connect?: promo_usageWhereUniqueInput | promo_usageWhereUniqueInput[]
  }

  export type promo_usageUncheckedCreateNestedManyWithoutPromocodesInput = {
    create?: XOR<promo_usageCreateWithoutPromocodesInput, promo_usageUncheckedCreateWithoutPromocodesInput> | promo_usageCreateWithoutPromocodesInput[] | promo_usageUncheckedCreateWithoutPromocodesInput[]
    connectOrCreate?: promo_usageCreateOrConnectWithoutPromocodesInput | promo_usageCreateOrConnectWithoutPromocodesInput[]
    createMany?: promo_usageCreateManyPromocodesInputEnvelope
    connect?: promo_usageWhereUniqueInput | promo_usageWhereUniqueInput[]
  }

  export type promo_usageUpdateManyWithoutPromocodesNestedInput = {
    create?: XOR<promo_usageCreateWithoutPromocodesInput, promo_usageUncheckedCreateWithoutPromocodesInput> | promo_usageCreateWithoutPromocodesInput[] | promo_usageUncheckedCreateWithoutPromocodesInput[]
    connectOrCreate?: promo_usageCreateOrConnectWithoutPromocodesInput | promo_usageCreateOrConnectWithoutPromocodesInput[]
    upsert?: promo_usageUpsertWithWhereUniqueWithoutPromocodesInput | promo_usageUpsertWithWhereUniqueWithoutPromocodesInput[]
    createMany?: promo_usageCreateManyPromocodesInputEnvelope
    set?: promo_usageWhereUniqueInput | promo_usageWhereUniqueInput[]
    disconnect?: promo_usageWhereUniqueInput | promo_usageWhereUniqueInput[]
    delete?: promo_usageWhereUniqueInput | promo_usageWhereUniqueInput[]
    connect?: promo_usageWhereUniqueInput | promo_usageWhereUniqueInput[]
    update?: promo_usageUpdateWithWhereUniqueWithoutPromocodesInput | promo_usageUpdateWithWhereUniqueWithoutPromocodesInput[]
    updateMany?: promo_usageUpdateManyWithWhereWithoutPromocodesInput | promo_usageUpdateManyWithWhereWithoutPromocodesInput[]
    deleteMany?: promo_usageScalarWhereInput | promo_usageScalarWhereInput[]
  }

  export type promo_usageUncheckedUpdateManyWithoutPromocodesNestedInput = {
    create?: XOR<promo_usageCreateWithoutPromocodesInput, promo_usageUncheckedCreateWithoutPromocodesInput> | promo_usageCreateWithoutPromocodesInput[] | promo_usageUncheckedCreateWithoutPromocodesInput[]
    connectOrCreate?: promo_usageCreateOrConnectWithoutPromocodesInput | promo_usageCreateOrConnectWithoutPromocodesInput[]
    upsert?: promo_usageUpsertWithWhereUniqueWithoutPromocodesInput | promo_usageUpsertWithWhereUniqueWithoutPromocodesInput[]
    createMany?: promo_usageCreateManyPromocodesInputEnvelope
    set?: promo_usageWhereUniqueInput | promo_usageWhereUniqueInput[]
    disconnect?: promo_usageWhereUniqueInput | promo_usageWhereUniqueInput[]
    delete?: promo_usageWhereUniqueInput | promo_usageWhereUniqueInput[]
    connect?: promo_usageWhereUniqueInput | promo_usageWhereUniqueInput[]
    update?: promo_usageUpdateWithWhereUniqueWithoutPromocodesInput | promo_usageUpdateWithWhereUniqueWithoutPromocodesInput[]
    updateMany?: promo_usageUpdateManyWithWhereWithoutPromocodesInput | promo_usageUpdateManyWithWhereWithoutPromocodesInput[]
    deleteMany?: promo_usageScalarWhereInput | promo_usageScalarWhereInput[]
  }

  export type promocodesCreateNestedOneWithoutPromo_usageInput = {
    create?: XOR<promocodesCreateWithoutPromo_usageInput, promocodesUncheckedCreateWithoutPromo_usageInput>
    connectOrCreate?: promocodesCreateOrConnectWithoutPromo_usageInput
    connect?: promocodesWhereUniqueInput
  }

  export type promocodesUpdateOneRequiredWithoutPromo_usageNestedInput = {
    create?: XOR<promocodesCreateWithoutPromo_usageInput, promocodesUncheckedCreateWithoutPromo_usageInput>
    connectOrCreate?: promocodesCreateOrConnectWithoutPromo_usageInput
    upsert?: promocodesUpsertWithoutPromo_usageInput
    connect?: promocodesWhereUniqueInput
    update?: XOR<XOR<promocodesUpdateToOneWithWhereWithoutPromo_usageInput, promocodesUpdateWithoutPromo_usageInput>, promocodesUncheckedUpdateWithoutPromo_usageInput>
  }

  export type productsCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<productsCreateWithoutCategoriesInput, productsUncheckedCreateWithoutCategoriesInput> | productsCreateWithoutCategoriesInput[] | productsUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: productsCreateOrConnectWithoutCategoriesInput | productsCreateOrConnectWithoutCategoriesInput[]
    createMany?: productsCreateManyCategoriesInputEnvelope
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
  }

  export type productsUncheckedCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<productsCreateWithoutCategoriesInput, productsUncheckedCreateWithoutCategoriesInput> | productsCreateWithoutCategoriesInput[] | productsUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: productsCreateOrConnectWithoutCategoriesInput | productsCreateOrConnectWithoutCategoriesInput[]
    createMany?: productsCreateManyCategoriesInputEnvelope
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
  }

  export type productsUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<productsCreateWithoutCategoriesInput, productsUncheckedCreateWithoutCategoriesInput> | productsCreateWithoutCategoriesInput[] | productsUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: productsCreateOrConnectWithoutCategoriesInput | productsCreateOrConnectWithoutCategoriesInput[]
    upsert?: productsUpsertWithWhereUniqueWithoutCategoriesInput | productsUpsertWithWhereUniqueWithoutCategoriesInput[]
    createMany?: productsCreateManyCategoriesInputEnvelope
    set?: productsWhereUniqueInput | productsWhereUniqueInput[]
    disconnect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    delete?: productsWhereUniqueInput | productsWhereUniqueInput[]
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    update?: productsUpdateWithWhereUniqueWithoutCategoriesInput | productsUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: productsUpdateManyWithWhereWithoutCategoriesInput | productsUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: productsScalarWhereInput | productsScalarWhereInput[]
  }

  export type productsUncheckedUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<productsCreateWithoutCategoriesInput, productsUncheckedCreateWithoutCategoriesInput> | productsCreateWithoutCategoriesInput[] | productsUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: productsCreateOrConnectWithoutCategoriesInput | productsCreateOrConnectWithoutCategoriesInput[]
    upsert?: productsUpsertWithWhereUniqueWithoutCategoriesInput | productsUpsertWithWhereUniqueWithoutCategoriesInput[]
    createMany?: productsCreateManyCategoriesInputEnvelope
    set?: productsWhereUniqueInput | productsWhereUniqueInput[]
    disconnect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    delete?: productsWhereUniqueInput | productsWhereUniqueInput[]
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    update?: productsUpdateWithWhereUniqueWithoutCategoriesInput | productsUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: productsUpdateManyWithWhereWithoutCategoriesInput | productsUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: productsScalarWhereInput | productsScalarWhereInput[]
  }

  export type order_itemsCreateNestedManyWithoutProductsInput = {
    create?: XOR<order_itemsCreateWithoutProductsInput, order_itemsUncheckedCreateWithoutProductsInput> | order_itemsCreateWithoutProductsInput[] | order_itemsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutProductsInput | order_itemsCreateOrConnectWithoutProductsInput[]
    createMany?: order_itemsCreateManyProductsInputEnvelope
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
  }

  export type product_keysCreateNestedManyWithoutProductsInput = {
    create?: XOR<product_keysCreateWithoutProductsInput, product_keysUncheckedCreateWithoutProductsInput> | product_keysCreateWithoutProductsInput[] | product_keysUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: product_keysCreateOrConnectWithoutProductsInput | product_keysCreateOrConnectWithoutProductsInput[]
    createMany?: product_keysCreateManyProductsInputEnvelope
    connect?: product_keysWhereUniqueInput | product_keysWhereUniqueInput[]
  }

  export type categoriesCreateNestedOneWithoutProductsInput = {
    create?: XOR<categoriesCreateWithoutProductsInput, categoriesUncheckedCreateWithoutProductsInput>
    connectOrCreate?: categoriesCreateOrConnectWithoutProductsInput
    connect?: categoriesWhereUniqueInput
  }

  export type user_productsCreateNestedManyWithoutProductsInput = {
    create?: XOR<user_productsCreateWithoutProductsInput, user_productsUncheckedCreateWithoutProductsInput> | user_productsCreateWithoutProductsInput[] | user_productsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: user_productsCreateOrConnectWithoutProductsInput | user_productsCreateOrConnectWithoutProductsInput[]
    createMany?: user_productsCreateManyProductsInputEnvelope
    connect?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
  }

  export type order_itemsUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<order_itemsCreateWithoutProductsInput, order_itemsUncheckedCreateWithoutProductsInput> | order_itemsCreateWithoutProductsInput[] | order_itemsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutProductsInput | order_itemsCreateOrConnectWithoutProductsInput[]
    createMany?: order_itemsCreateManyProductsInputEnvelope
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
  }

  export type product_keysUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<product_keysCreateWithoutProductsInput, product_keysUncheckedCreateWithoutProductsInput> | product_keysCreateWithoutProductsInput[] | product_keysUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: product_keysCreateOrConnectWithoutProductsInput | product_keysCreateOrConnectWithoutProductsInput[]
    createMany?: product_keysCreateManyProductsInputEnvelope
    connect?: product_keysWhereUniqueInput | product_keysWhereUniqueInput[]
  }

  export type user_productsUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<user_productsCreateWithoutProductsInput, user_productsUncheckedCreateWithoutProductsInput> | user_productsCreateWithoutProductsInput[] | user_productsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: user_productsCreateOrConnectWithoutProductsInput | user_productsCreateOrConnectWithoutProductsInput[]
    createMany?: user_productsCreateManyProductsInputEnvelope
    connect?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type order_itemsUpdateManyWithoutProductsNestedInput = {
    create?: XOR<order_itemsCreateWithoutProductsInput, order_itemsUncheckedCreateWithoutProductsInput> | order_itemsCreateWithoutProductsInput[] | order_itemsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutProductsInput | order_itemsCreateOrConnectWithoutProductsInput[]
    upsert?: order_itemsUpsertWithWhereUniqueWithoutProductsInput | order_itemsUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: order_itemsCreateManyProductsInputEnvelope
    set?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    disconnect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    delete?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    update?: order_itemsUpdateWithWhereUniqueWithoutProductsInput | order_itemsUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: order_itemsUpdateManyWithWhereWithoutProductsInput | order_itemsUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
  }

  export type product_keysUpdateManyWithoutProductsNestedInput = {
    create?: XOR<product_keysCreateWithoutProductsInput, product_keysUncheckedCreateWithoutProductsInput> | product_keysCreateWithoutProductsInput[] | product_keysUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: product_keysCreateOrConnectWithoutProductsInput | product_keysCreateOrConnectWithoutProductsInput[]
    upsert?: product_keysUpsertWithWhereUniqueWithoutProductsInput | product_keysUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: product_keysCreateManyProductsInputEnvelope
    set?: product_keysWhereUniqueInput | product_keysWhereUniqueInput[]
    disconnect?: product_keysWhereUniqueInput | product_keysWhereUniqueInput[]
    delete?: product_keysWhereUniqueInput | product_keysWhereUniqueInput[]
    connect?: product_keysWhereUniqueInput | product_keysWhereUniqueInput[]
    update?: product_keysUpdateWithWhereUniqueWithoutProductsInput | product_keysUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: product_keysUpdateManyWithWhereWithoutProductsInput | product_keysUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: product_keysScalarWhereInput | product_keysScalarWhereInput[]
  }

  export type categoriesUpdateOneWithoutProductsNestedInput = {
    create?: XOR<categoriesCreateWithoutProductsInput, categoriesUncheckedCreateWithoutProductsInput>
    connectOrCreate?: categoriesCreateOrConnectWithoutProductsInput
    upsert?: categoriesUpsertWithoutProductsInput
    disconnect?: categoriesWhereInput | boolean
    delete?: categoriesWhereInput | boolean
    connect?: categoriesWhereUniqueInput
    update?: XOR<XOR<categoriesUpdateToOneWithWhereWithoutProductsInput, categoriesUpdateWithoutProductsInput>, categoriesUncheckedUpdateWithoutProductsInput>
  }

  export type user_productsUpdateManyWithoutProductsNestedInput = {
    create?: XOR<user_productsCreateWithoutProductsInput, user_productsUncheckedCreateWithoutProductsInput> | user_productsCreateWithoutProductsInput[] | user_productsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: user_productsCreateOrConnectWithoutProductsInput | user_productsCreateOrConnectWithoutProductsInput[]
    upsert?: user_productsUpsertWithWhereUniqueWithoutProductsInput | user_productsUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: user_productsCreateManyProductsInputEnvelope
    set?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    disconnect?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    delete?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    connect?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    update?: user_productsUpdateWithWhereUniqueWithoutProductsInput | user_productsUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: user_productsUpdateManyWithWhereWithoutProductsInput | user_productsUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: user_productsScalarWhereInput | user_productsScalarWhereInput[]
  }

  export type order_itemsUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<order_itemsCreateWithoutProductsInput, order_itemsUncheckedCreateWithoutProductsInput> | order_itemsCreateWithoutProductsInput[] | order_itemsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutProductsInput | order_itemsCreateOrConnectWithoutProductsInput[]
    upsert?: order_itemsUpsertWithWhereUniqueWithoutProductsInput | order_itemsUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: order_itemsCreateManyProductsInputEnvelope
    set?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    disconnect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    delete?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    update?: order_itemsUpdateWithWhereUniqueWithoutProductsInput | order_itemsUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: order_itemsUpdateManyWithWhereWithoutProductsInput | order_itemsUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
  }

  export type product_keysUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<product_keysCreateWithoutProductsInput, product_keysUncheckedCreateWithoutProductsInput> | product_keysCreateWithoutProductsInput[] | product_keysUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: product_keysCreateOrConnectWithoutProductsInput | product_keysCreateOrConnectWithoutProductsInput[]
    upsert?: product_keysUpsertWithWhereUniqueWithoutProductsInput | product_keysUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: product_keysCreateManyProductsInputEnvelope
    set?: product_keysWhereUniqueInput | product_keysWhereUniqueInput[]
    disconnect?: product_keysWhereUniqueInput | product_keysWhereUniqueInput[]
    delete?: product_keysWhereUniqueInput | product_keysWhereUniqueInput[]
    connect?: product_keysWhereUniqueInput | product_keysWhereUniqueInput[]
    update?: product_keysUpdateWithWhereUniqueWithoutProductsInput | product_keysUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: product_keysUpdateManyWithWhereWithoutProductsInput | product_keysUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: product_keysScalarWhereInput | product_keysScalarWhereInput[]
  }

  export type user_productsUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<user_productsCreateWithoutProductsInput, user_productsUncheckedCreateWithoutProductsInput> | user_productsCreateWithoutProductsInput[] | user_productsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: user_productsCreateOrConnectWithoutProductsInput | user_productsCreateOrConnectWithoutProductsInput[]
    upsert?: user_productsUpsertWithWhereUniqueWithoutProductsInput | user_productsUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: user_productsCreateManyProductsInputEnvelope
    set?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    disconnect?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    delete?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    connect?: user_productsWhereUniqueInput | user_productsWhereUniqueInput[]
    update?: user_productsUpdateWithWhereUniqueWithoutProductsInput | user_productsUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: user_productsUpdateManyWithWhereWithoutProductsInput | user_productsUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: user_productsScalarWhereInput | user_productsScalarWhereInput[]
  }

  export type key_eventsCreateNestedManyWithoutProduct_keysInput = {
    create?: XOR<key_eventsCreateWithoutProduct_keysInput, key_eventsUncheckedCreateWithoutProduct_keysInput> | key_eventsCreateWithoutProduct_keysInput[] | key_eventsUncheckedCreateWithoutProduct_keysInput[]
    connectOrCreate?: key_eventsCreateOrConnectWithoutProduct_keysInput | key_eventsCreateOrConnectWithoutProduct_keysInput[]
    createMany?: key_eventsCreateManyProduct_keysInputEnvelope
    connect?: key_eventsWhereUniqueInput | key_eventsWhereUniqueInput[]
  }

  export type keys_aliasesCreateNestedManyWithoutProduct_keysInput = {
    create?: XOR<keys_aliasesCreateWithoutProduct_keysInput, keys_aliasesUncheckedCreateWithoutProduct_keysInput> | keys_aliasesCreateWithoutProduct_keysInput[] | keys_aliasesUncheckedCreateWithoutProduct_keysInput[]
    connectOrCreate?: keys_aliasesCreateOrConnectWithoutProduct_keysInput | keys_aliasesCreateOrConnectWithoutProduct_keysInput[]
    createMany?: keys_aliasesCreateManyProduct_keysInputEnvelope
    connect?: keys_aliasesWhereUniqueInput | keys_aliasesWhereUniqueInput[]
  }

  export type productsCreateNestedOneWithoutProduct_keysInput = {
    create?: XOR<productsCreateWithoutProduct_keysInput, productsUncheckedCreateWithoutProduct_keysInput>
    connectOrCreate?: productsCreateOrConnectWithoutProduct_keysInput
    connect?: productsWhereUniqueInput
  }

  export type user_productsCreateNestedOneWithoutProduct_keys_user_products_product_key_idToproduct_keysInput = {
    create?: XOR<user_productsCreateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput, user_productsUncheckedCreateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput>
    connectOrCreate?: user_productsCreateOrConnectWithoutProduct_keys_user_products_product_key_idToproduct_keysInput
    connect?: user_productsWhereUniqueInput
  }

  export type key_eventsUncheckedCreateNestedManyWithoutProduct_keysInput = {
    create?: XOR<key_eventsCreateWithoutProduct_keysInput, key_eventsUncheckedCreateWithoutProduct_keysInput> | key_eventsCreateWithoutProduct_keysInput[] | key_eventsUncheckedCreateWithoutProduct_keysInput[]
    connectOrCreate?: key_eventsCreateOrConnectWithoutProduct_keysInput | key_eventsCreateOrConnectWithoutProduct_keysInput[]
    createMany?: key_eventsCreateManyProduct_keysInputEnvelope
    connect?: key_eventsWhereUniqueInput | key_eventsWhereUniqueInput[]
  }

  export type keys_aliasesUncheckedCreateNestedManyWithoutProduct_keysInput = {
    create?: XOR<keys_aliasesCreateWithoutProduct_keysInput, keys_aliasesUncheckedCreateWithoutProduct_keysInput> | keys_aliasesCreateWithoutProduct_keysInput[] | keys_aliasesUncheckedCreateWithoutProduct_keysInput[]
    connectOrCreate?: keys_aliasesCreateOrConnectWithoutProduct_keysInput | keys_aliasesCreateOrConnectWithoutProduct_keysInput[]
    createMany?: keys_aliasesCreateManyProduct_keysInputEnvelope
    connect?: keys_aliasesWhereUniqueInput | keys_aliasesWhereUniqueInput[]
  }

  export type user_productsUncheckedCreateNestedOneWithoutProduct_keys_user_products_product_key_idToproduct_keysInput = {
    create?: XOR<user_productsCreateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput, user_productsUncheckedCreateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput>
    connectOrCreate?: user_productsCreateOrConnectWithoutProduct_keys_user_products_product_key_idToproduct_keysInput
    connect?: user_productsWhereUniqueInput
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type key_eventsUpdateManyWithoutProduct_keysNestedInput = {
    create?: XOR<key_eventsCreateWithoutProduct_keysInput, key_eventsUncheckedCreateWithoutProduct_keysInput> | key_eventsCreateWithoutProduct_keysInput[] | key_eventsUncheckedCreateWithoutProduct_keysInput[]
    connectOrCreate?: key_eventsCreateOrConnectWithoutProduct_keysInput | key_eventsCreateOrConnectWithoutProduct_keysInput[]
    upsert?: key_eventsUpsertWithWhereUniqueWithoutProduct_keysInput | key_eventsUpsertWithWhereUniqueWithoutProduct_keysInput[]
    createMany?: key_eventsCreateManyProduct_keysInputEnvelope
    set?: key_eventsWhereUniqueInput | key_eventsWhereUniqueInput[]
    disconnect?: key_eventsWhereUniqueInput | key_eventsWhereUniqueInput[]
    delete?: key_eventsWhereUniqueInput | key_eventsWhereUniqueInput[]
    connect?: key_eventsWhereUniqueInput | key_eventsWhereUniqueInput[]
    update?: key_eventsUpdateWithWhereUniqueWithoutProduct_keysInput | key_eventsUpdateWithWhereUniqueWithoutProduct_keysInput[]
    updateMany?: key_eventsUpdateManyWithWhereWithoutProduct_keysInput | key_eventsUpdateManyWithWhereWithoutProduct_keysInput[]
    deleteMany?: key_eventsScalarWhereInput | key_eventsScalarWhereInput[]
  }

  export type keys_aliasesUpdateManyWithoutProduct_keysNestedInput = {
    create?: XOR<keys_aliasesCreateWithoutProduct_keysInput, keys_aliasesUncheckedCreateWithoutProduct_keysInput> | keys_aliasesCreateWithoutProduct_keysInput[] | keys_aliasesUncheckedCreateWithoutProduct_keysInput[]
    connectOrCreate?: keys_aliasesCreateOrConnectWithoutProduct_keysInput | keys_aliasesCreateOrConnectWithoutProduct_keysInput[]
    upsert?: keys_aliasesUpsertWithWhereUniqueWithoutProduct_keysInput | keys_aliasesUpsertWithWhereUniqueWithoutProduct_keysInput[]
    createMany?: keys_aliasesCreateManyProduct_keysInputEnvelope
    set?: keys_aliasesWhereUniqueInput | keys_aliasesWhereUniqueInput[]
    disconnect?: keys_aliasesWhereUniqueInput | keys_aliasesWhereUniqueInput[]
    delete?: keys_aliasesWhereUniqueInput | keys_aliasesWhereUniqueInput[]
    connect?: keys_aliasesWhereUniqueInput | keys_aliasesWhereUniqueInput[]
    update?: keys_aliasesUpdateWithWhereUniqueWithoutProduct_keysInput | keys_aliasesUpdateWithWhereUniqueWithoutProduct_keysInput[]
    updateMany?: keys_aliasesUpdateManyWithWhereWithoutProduct_keysInput | keys_aliasesUpdateManyWithWhereWithoutProduct_keysInput[]
    deleteMany?: keys_aliasesScalarWhereInput | keys_aliasesScalarWhereInput[]
  }

  export type productsUpdateOneWithoutProduct_keysNestedInput = {
    create?: XOR<productsCreateWithoutProduct_keysInput, productsUncheckedCreateWithoutProduct_keysInput>
    connectOrCreate?: productsCreateOrConnectWithoutProduct_keysInput
    upsert?: productsUpsertWithoutProduct_keysInput
    disconnect?: productsWhereInput | boolean
    delete?: productsWhereInput | boolean
    connect?: productsWhereUniqueInput
    update?: XOR<XOR<productsUpdateToOneWithWhereWithoutProduct_keysInput, productsUpdateWithoutProduct_keysInput>, productsUncheckedUpdateWithoutProduct_keysInput>
  }

  export type user_productsUpdateOneWithoutProduct_keys_user_products_product_key_idToproduct_keysNestedInput = {
    create?: XOR<user_productsCreateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput, user_productsUncheckedCreateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput>
    connectOrCreate?: user_productsCreateOrConnectWithoutProduct_keys_user_products_product_key_idToproduct_keysInput
    upsert?: user_productsUpsertWithoutProduct_keys_user_products_product_key_idToproduct_keysInput
    disconnect?: user_productsWhereInput | boolean
    delete?: user_productsWhereInput | boolean
    connect?: user_productsWhereUniqueInput
    update?: XOR<XOR<user_productsUpdateToOneWithWhereWithoutProduct_keys_user_products_product_key_idToproduct_keysInput, user_productsUpdateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput>, user_productsUncheckedUpdateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput>
  }

  export type key_eventsUncheckedUpdateManyWithoutProduct_keysNestedInput = {
    create?: XOR<key_eventsCreateWithoutProduct_keysInput, key_eventsUncheckedCreateWithoutProduct_keysInput> | key_eventsCreateWithoutProduct_keysInput[] | key_eventsUncheckedCreateWithoutProduct_keysInput[]
    connectOrCreate?: key_eventsCreateOrConnectWithoutProduct_keysInput | key_eventsCreateOrConnectWithoutProduct_keysInput[]
    upsert?: key_eventsUpsertWithWhereUniqueWithoutProduct_keysInput | key_eventsUpsertWithWhereUniqueWithoutProduct_keysInput[]
    createMany?: key_eventsCreateManyProduct_keysInputEnvelope
    set?: key_eventsWhereUniqueInput | key_eventsWhereUniqueInput[]
    disconnect?: key_eventsWhereUniqueInput | key_eventsWhereUniqueInput[]
    delete?: key_eventsWhereUniqueInput | key_eventsWhereUniqueInput[]
    connect?: key_eventsWhereUniqueInput | key_eventsWhereUniqueInput[]
    update?: key_eventsUpdateWithWhereUniqueWithoutProduct_keysInput | key_eventsUpdateWithWhereUniqueWithoutProduct_keysInput[]
    updateMany?: key_eventsUpdateManyWithWhereWithoutProduct_keysInput | key_eventsUpdateManyWithWhereWithoutProduct_keysInput[]
    deleteMany?: key_eventsScalarWhereInput | key_eventsScalarWhereInput[]
  }

  export type keys_aliasesUncheckedUpdateManyWithoutProduct_keysNestedInput = {
    create?: XOR<keys_aliasesCreateWithoutProduct_keysInput, keys_aliasesUncheckedCreateWithoutProduct_keysInput> | keys_aliasesCreateWithoutProduct_keysInput[] | keys_aliasesUncheckedCreateWithoutProduct_keysInput[]
    connectOrCreate?: keys_aliasesCreateOrConnectWithoutProduct_keysInput | keys_aliasesCreateOrConnectWithoutProduct_keysInput[]
    upsert?: keys_aliasesUpsertWithWhereUniqueWithoutProduct_keysInput | keys_aliasesUpsertWithWhereUniqueWithoutProduct_keysInput[]
    createMany?: keys_aliasesCreateManyProduct_keysInputEnvelope
    set?: keys_aliasesWhereUniqueInput | keys_aliasesWhereUniqueInput[]
    disconnect?: keys_aliasesWhereUniqueInput | keys_aliasesWhereUniqueInput[]
    delete?: keys_aliasesWhereUniqueInput | keys_aliasesWhereUniqueInput[]
    connect?: keys_aliasesWhereUniqueInput | keys_aliasesWhereUniqueInput[]
    update?: keys_aliasesUpdateWithWhereUniqueWithoutProduct_keysInput | keys_aliasesUpdateWithWhereUniqueWithoutProduct_keysInput[]
    updateMany?: keys_aliasesUpdateManyWithWhereWithoutProduct_keysInput | keys_aliasesUpdateManyWithWhereWithoutProduct_keysInput[]
    deleteMany?: keys_aliasesScalarWhereInput | keys_aliasesScalarWhereInput[]
  }

  export type user_productsUncheckedUpdateOneWithoutProduct_keys_user_products_product_key_idToproduct_keysNestedInput = {
    create?: XOR<user_productsCreateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput, user_productsUncheckedCreateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput>
    connectOrCreate?: user_productsCreateOrConnectWithoutProduct_keys_user_products_product_key_idToproduct_keysInput
    upsert?: user_productsUpsertWithoutProduct_keys_user_products_product_key_idToproduct_keysInput
    disconnect?: user_productsWhereInput | boolean
    delete?: user_productsWhereInput | boolean
    connect?: user_productsWhereUniqueInput
    update?: XOR<XOR<user_productsUpdateToOneWithWhereWithoutProduct_keys_user_products_product_key_idToproduct_keysInput, user_productsUpdateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput>, user_productsUncheckedUpdateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput>
  }

  export type productsCreateNestedOneWithoutUser_productsInput = {
    create?: XOR<productsCreateWithoutUser_productsInput, productsUncheckedCreateWithoutUser_productsInput>
    connectOrCreate?: productsCreateOrConnectWithoutUser_productsInput
    connect?: productsWhereUniqueInput
  }

  export type product_keysCreateNestedOneWithoutUser_products_user_products_product_key_idToproduct_keysInput = {
    create?: XOR<product_keysCreateWithoutUser_products_user_products_product_key_idToproduct_keysInput, product_keysUncheckedCreateWithoutUser_products_user_products_product_key_idToproduct_keysInput>
    connectOrCreate?: product_keysCreateOrConnectWithoutUser_products_user_products_product_key_idToproduct_keysInput
    connect?: product_keysWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutUser_productsInput = {
    create?: XOR<usersCreateWithoutUser_productsInput, usersUncheckedCreateWithoutUser_productsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_productsInput
    connect?: usersWhereUniqueInput
  }

  export type productsUpdateOneRequiredWithoutUser_productsNestedInput = {
    create?: XOR<productsCreateWithoutUser_productsInput, productsUncheckedCreateWithoutUser_productsInput>
    connectOrCreate?: productsCreateOrConnectWithoutUser_productsInput
    upsert?: productsUpsertWithoutUser_productsInput
    connect?: productsWhereUniqueInput
    update?: XOR<XOR<productsUpdateToOneWithWhereWithoutUser_productsInput, productsUpdateWithoutUser_productsInput>, productsUncheckedUpdateWithoutUser_productsInput>
  }

  export type product_keysUpdateOneWithoutUser_products_user_products_product_key_idToproduct_keysNestedInput = {
    create?: XOR<product_keysCreateWithoutUser_products_user_products_product_key_idToproduct_keysInput, product_keysUncheckedCreateWithoutUser_products_user_products_product_key_idToproduct_keysInput>
    connectOrCreate?: product_keysCreateOrConnectWithoutUser_products_user_products_product_key_idToproduct_keysInput
    upsert?: product_keysUpsertWithoutUser_products_user_products_product_key_idToproduct_keysInput
    disconnect?: product_keysWhereInput | boolean
    delete?: product_keysWhereInput | boolean
    connect?: product_keysWhereUniqueInput
    update?: XOR<XOR<product_keysUpdateToOneWithWhereWithoutUser_products_user_products_product_key_idToproduct_keysInput, product_keysUpdateWithoutUser_products_user_products_product_key_idToproduct_keysInput>, product_keysUncheckedUpdateWithoutUser_products_user_products_product_key_idToproduct_keysInput>
  }

  export type usersUpdateOneRequiredWithoutUser_productsNestedInput = {
    create?: XOR<usersCreateWithoutUser_productsInput, usersUncheckedCreateWithoutUser_productsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_productsInput
    upsert?: usersUpsertWithoutUser_productsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_productsInput, usersUpdateWithoutUser_productsInput>, usersUncheckedUpdateWithoutUser_productsInput>
  }

  export type staff_rightsCreateNestedManyWithoutStaff_membersInput = {
    create?: XOR<staff_rightsCreateWithoutStaff_membersInput, staff_rightsUncheckedCreateWithoutStaff_membersInput> | staff_rightsCreateWithoutStaff_membersInput[] | staff_rightsUncheckedCreateWithoutStaff_membersInput[]
    connectOrCreate?: staff_rightsCreateOrConnectWithoutStaff_membersInput | staff_rightsCreateOrConnectWithoutStaff_membersInput[]
    createMany?: staff_rightsCreateManyStaff_membersInputEnvelope
    connect?: staff_rightsWhereUniqueInput | staff_rightsWhereUniqueInput[]
  }

  export type support_requestsCreateNestedManyWithoutOperatorInput = {
    create?: XOR<support_requestsCreateWithoutOperatorInput, support_requestsUncheckedCreateWithoutOperatorInput> | support_requestsCreateWithoutOperatorInput[] | support_requestsUncheckedCreateWithoutOperatorInput[]
    connectOrCreate?: support_requestsCreateOrConnectWithoutOperatorInput | support_requestsCreateOrConnectWithoutOperatorInput[]
    createMany?: support_requestsCreateManyOperatorInputEnvelope
    connect?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
  }

  export type staff_rightsUncheckedCreateNestedManyWithoutStaff_membersInput = {
    create?: XOR<staff_rightsCreateWithoutStaff_membersInput, staff_rightsUncheckedCreateWithoutStaff_membersInput> | staff_rightsCreateWithoutStaff_membersInput[] | staff_rightsUncheckedCreateWithoutStaff_membersInput[]
    connectOrCreate?: staff_rightsCreateOrConnectWithoutStaff_membersInput | staff_rightsCreateOrConnectWithoutStaff_membersInput[]
    createMany?: staff_rightsCreateManyStaff_membersInputEnvelope
    connect?: staff_rightsWhereUniqueInput | staff_rightsWhereUniqueInput[]
  }

  export type support_requestsUncheckedCreateNestedManyWithoutOperatorInput = {
    create?: XOR<support_requestsCreateWithoutOperatorInput, support_requestsUncheckedCreateWithoutOperatorInput> | support_requestsCreateWithoutOperatorInput[] | support_requestsUncheckedCreateWithoutOperatorInput[]
    connectOrCreate?: support_requestsCreateOrConnectWithoutOperatorInput | support_requestsCreateOrConnectWithoutOperatorInput[]
    createMany?: support_requestsCreateManyOperatorInputEnvelope
    connect?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
  }

  export type EnumStaffRoleFieldUpdateOperationsInput = {
    set?: $Enums.StaffRole
  }

  export type staff_rightsUpdateManyWithoutStaff_membersNestedInput = {
    create?: XOR<staff_rightsCreateWithoutStaff_membersInput, staff_rightsUncheckedCreateWithoutStaff_membersInput> | staff_rightsCreateWithoutStaff_membersInput[] | staff_rightsUncheckedCreateWithoutStaff_membersInput[]
    connectOrCreate?: staff_rightsCreateOrConnectWithoutStaff_membersInput | staff_rightsCreateOrConnectWithoutStaff_membersInput[]
    upsert?: staff_rightsUpsertWithWhereUniqueWithoutStaff_membersInput | staff_rightsUpsertWithWhereUniqueWithoutStaff_membersInput[]
    createMany?: staff_rightsCreateManyStaff_membersInputEnvelope
    set?: staff_rightsWhereUniqueInput | staff_rightsWhereUniqueInput[]
    disconnect?: staff_rightsWhereUniqueInput | staff_rightsWhereUniqueInput[]
    delete?: staff_rightsWhereUniqueInput | staff_rightsWhereUniqueInput[]
    connect?: staff_rightsWhereUniqueInput | staff_rightsWhereUniqueInput[]
    update?: staff_rightsUpdateWithWhereUniqueWithoutStaff_membersInput | staff_rightsUpdateWithWhereUniqueWithoutStaff_membersInput[]
    updateMany?: staff_rightsUpdateManyWithWhereWithoutStaff_membersInput | staff_rightsUpdateManyWithWhereWithoutStaff_membersInput[]
    deleteMany?: staff_rightsScalarWhereInput | staff_rightsScalarWhereInput[]
  }

  export type support_requestsUpdateManyWithoutOperatorNestedInput = {
    create?: XOR<support_requestsCreateWithoutOperatorInput, support_requestsUncheckedCreateWithoutOperatorInput> | support_requestsCreateWithoutOperatorInput[] | support_requestsUncheckedCreateWithoutOperatorInput[]
    connectOrCreate?: support_requestsCreateOrConnectWithoutOperatorInput | support_requestsCreateOrConnectWithoutOperatorInput[]
    upsert?: support_requestsUpsertWithWhereUniqueWithoutOperatorInput | support_requestsUpsertWithWhereUniqueWithoutOperatorInput[]
    createMany?: support_requestsCreateManyOperatorInputEnvelope
    set?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    disconnect?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    delete?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    connect?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    update?: support_requestsUpdateWithWhereUniqueWithoutOperatorInput | support_requestsUpdateWithWhereUniqueWithoutOperatorInput[]
    updateMany?: support_requestsUpdateManyWithWhereWithoutOperatorInput | support_requestsUpdateManyWithWhereWithoutOperatorInput[]
    deleteMany?: support_requestsScalarWhereInput | support_requestsScalarWhereInput[]
  }

  export type staff_rightsUncheckedUpdateManyWithoutStaff_membersNestedInput = {
    create?: XOR<staff_rightsCreateWithoutStaff_membersInput, staff_rightsUncheckedCreateWithoutStaff_membersInput> | staff_rightsCreateWithoutStaff_membersInput[] | staff_rightsUncheckedCreateWithoutStaff_membersInput[]
    connectOrCreate?: staff_rightsCreateOrConnectWithoutStaff_membersInput | staff_rightsCreateOrConnectWithoutStaff_membersInput[]
    upsert?: staff_rightsUpsertWithWhereUniqueWithoutStaff_membersInput | staff_rightsUpsertWithWhereUniqueWithoutStaff_membersInput[]
    createMany?: staff_rightsCreateManyStaff_membersInputEnvelope
    set?: staff_rightsWhereUniqueInput | staff_rightsWhereUniqueInput[]
    disconnect?: staff_rightsWhereUniqueInput | staff_rightsWhereUniqueInput[]
    delete?: staff_rightsWhereUniqueInput | staff_rightsWhereUniqueInput[]
    connect?: staff_rightsWhereUniqueInput | staff_rightsWhereUniqueInput[]
    update?: staff_rightsUpdateWithWhereUniqueWithoutStaff_membersInput | staff_rightsUpdateWithWhereUniqueWithoutStaff_membersInput[]
    updateMany?: staff_rightsUpdateManyWithWhereWithoutStaff_membersInput | staff_rightsUpdateManyWithWhereWithoutStaff_membersInput[]
    deleteMany?: staff_rightsScalarWhereInput | staff_rightsScalarWhereInput[]
  }

  export type support_requestsUncheckedUpdateManyWithoutOperatorNestedInput = {
    create?: XOR<support_requestsCreateWithoutOperatorInput, support_requestsUncheckedCreateWithoutOperatorInput> | support_requestsCreateWithoutOperatorInput[] | support_requestsUncheckedCreateWithoutOperatorInput[]
    connectOrCreate?: support_requestsCreateOrConnectWithoutOperatorInput | support_requestsCreateOrConnectWithoutOperatorInput[]
    upsert?: support_requestsUpsertWithWhereUniqueWithoutOperatorInput | support_requestsUpsertWithWhereUniqueWithoutOperatorInput[]
    createMany?: support_requestsCreateManyOperatorInputEnvelope
    set?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    disconnect?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    delete?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    connect?: support_requestsWhereUniqueInput | support_requestsWhereUniqueInput[]
    update?: support_requestsUpdateWithWhereUniqueWithoutOperatorInput | support_requestsUpdateWithWhereUniqueWithoutOperatorInput[]
    updateMany?: support_requestsUpdateManyWithWhereWithoutOperatorInput | support_requestsUpdateManyWithWhereWithoutOperatorInput[]
    deleteMany?: support_requestsScalarWhereInput | support_requestsScalarWhereInput[]
  }

  export type staff_membersCreateNestedOneWithoutStaff_rightsInput = {
    create?: XOR<staff_membersCreateWithoutStaff_rightsInput, staff_membersUncheckedCreateWithoutStaff_rightsInput>
    connectOrCreate?: staff_membersCreateOrConnectWithoutStaff_rightsInput
    connect?: staff_membersWhereUniqueInput
  }

  export type NullableEnumStaffRoleFieldUpdateOperationsInput = {
    set?: $Enums.StaffRole | null
  }

  export type staff_membersUpdateOneWithoutStaff_rightsNestedInput = {
    create?: XOR<staff_membersCreateWithoutStaff_rightsInput, staff_membersUncheckedCreateWithoutStaff_rightsInput>
    connectOrCreate?: staff_membersCreateOrConnectWithoutStaff_rightsInput
    upsert?: staff_membersUpsertWithoutStaff_rightsInput
    disconnect?: staff_membersWhereInput | boolean
    delete?: staff_membersWhereInput | boolean
    connect?: staff_membersWhereUniqueInput
    update?: XOR<XOR<staff_membersUpdateToOneWithWhereWithoutStaff_rightsInput, staff_membersUpdateWithoutStaff_rightsInput>, staff_membersUncheckedUpdateWithoutStaff_rightsInput>
  }

  export type product_keysCreateNestedOneWithoutKeys_aliasesInput = {
    create?: XOR<product_keysCreateWithoutKeys_aliasesInput, product_keysUncheckedCreateWithoutKeys_aliasesInput>
    connectOrCreate?: product_keysCreateOrConnectWithoutKeys_aliasesInput
    connect?: product_keysWhereUniqueInput
  }

  export type order_item_unitsCreateNestedOneWithoutKeys_aliasesInput = {
    create?: XOR<order_item_unitsCreateWithoutKeys_aliasesInput, order_item_unitsUncheckedCreateWithoutKeys_aliasesInput>
    connectOrCreate?: order_item_unitsCreateOrConnectWithoutKeys_aliasesInput
    connect?: order_item_unitsWhereUniqueInput
  }

  export type order_itemsCreateNestedManyWithoutKeys_aliasesInput = {
    create?: XOR<order_itemsCreateWithoutKeys_aliasesInput, order_itemsUncheckedCreateWithoutKeys_aliasesInput> | order_itemsCreateWithoutKeys_aliasesInput[] | order_itemsUncheckedCreateWithoutKeys_aliasesInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutKeys_aliasesInput | order_itemsCreateOrConnectWithoutKeys_aliasesInput[]
    createMany?: order_itemsCreateManyKeys_aliasesInputEnvelope
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
  }

  export type order_item_unitsUncheckedCreateNestedOneWithoutKeys_aliasesInput = {
    create?: XOR<order_item_unitsCreateWithoutKeys_aliasesInput, order_item_unitsUncheckedCreateWithoutKeys_aliasesInput>
    connectOrCreate?: order_item_unitsCreateOrConnectWithoutKeys_aliasesInput
    connect?: order_item_unitsWhereUniqueInput
  }

  export type order_itemsUncheckedCreateNestedManyWithoutKeys_aliasesInput = {
    create?: XOR<order_itemsCreateWithoutKeys_aliasesInput, order_itemsUncheckedCreateWithoutKeys_aliasesInput> | order_itemsCreateWithoutKeys_aliasesInput[] | order_itemsUncheckedCreateWithoutKeys_aliasesInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutKeys_aliasesInput | order_itemsCreateOrConnectWithoutKeys_aliasesInput[]
    createMany?: order_itemsCreateManyKeys_aliasesInputEnvelope
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
  }

  export type product_keysUpdateOneRequiredWithoutKeys_aliasesNestedInput = {
    create?: XOR<product_keysCreateWithoutKeys_aliasesInput, product_keysUncheckedCreateWithoutKeys_aliasesInput>
    connectOrCreate?: product_keysCreateOrConnectWithoutKeys_aliasesInput
    upsert?: product_keysUpsertWithoutKeys_aliasesInput
    connect?: product_keysWhereUniqueInput
    update?: XOR<XOR<product_keysUpdateToOneWithWhereWithoutKeys_aliasesInput, product_keysUpdateWithoutKeys_aliasesInput>, product_keysUncheckedUpdateWithoutKeys_aliasesInput>
  }

  export type order_item_unitsUpdateOneWithoutKeys_aliasesNestedInput = {
    create?: XOR<order_item_unitsCreateWithoutKeys_aliasesInput, order_item_unitsUncheckedCreateWithoutKeys_aliasesInput>
    connectOrCreate?: order_item_unitsCreateOrConnectWithoutKeys_aliasesInput
    upsert?: order_item_unitsUpsertWithoutKeys_aliasesInput
    disconnect?: order_item_unitsWhereInput | boolean
    delete?: order_item_unitsWhereInput | boolean
    connect?: order_item_unitsWhereUniqueInput
    update?: XOR<XOR<order_item_unitsUpdateToOneWithWhereWithoutKeys_aliasesInput, order_item_unitsUpdateWithoutKeys_aliasesInput>, order_item_unitsUncheckedUpdateWithoutKeys_aliasesInput>
  }

  export type order_itemsUpdateManyWithoutKeys_aliasesNestedInput = {
    create?: XOR<order_itemsCreateWithoutKeys_aliasesInput, order_itemsUncheckedCreateWithoutKeys_aliasesInput> | order_itemsCreateWithoutKeys_aliasesInput[] | order_itemsUncheckedCreateWithoutKeys_aliasesInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutKeys_aliasesInput | order_itemsCreateOrConnectWithoutKeys_aliasesInput[]
    upsert?: order_itemsUpsertWithWhereUniqueWithoutKeys_aliasesInput | order_itemsUpsertWithWhereUniqueWithoutKeys_aliasesInput[]
    createMany?: order_itemsCreateManyKeys_aliasesInputEnvelope
    set?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    disconnect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    delete?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    update?: order_itemsUpdateWithWhereUniqueWithoutKeys_aliasesInput | order_itemsUpdateWithWhereUniqueWithoutKeys_aliasesInput[]
    updateMany?: order_itemsUpdateManyWithWhereWithoutKeys_aliasesInput | order_itemsUpdateManyWithWhereWithoutKeys_aliasesInput[]
    deleteMany?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
  }

  export type order_item_unitsUncheckedUpdateOneWithoutKeys_aliasesNestedInput = {
    create?: XOR<order_item_unitsCreateWithoutKeys_aliasesInput, order_item_unitsUncheckedCreateWithoutKeys_aliasesInput>
    connectOrCreate?: order_item_unitsCreateOrConnectWithoutKeys_aliasesInput
    upsert?: order_item_unitsUpsertWithoutKeys_aliasesInput
    disconnect?: order_item_unitsWhereInput | boolean
    delete?: order_item_unitsWhereInput | boolean
    connect?: order_item_unitsWhereUniqueInput
    update?: XOR<XOR<order_item_unitsUpdateToOneWithWhereWithoutKeys_aliasesInput, order_item_unitsUpdateWithoutKeys_aliasesInput>, order_item_unitsUncheckedUpdateWithoutKeys_aliasesInput>
  }

  export type order_itemsUncheckedUpdateManyWithoutKeys_aliasesNestedInput = {
    create?: XOR<order_itemsCreateWithoutKeys_aliasesInput, order_itemsUncheckedCreateWithoutKeys_aliasesInput> | order_itemsCreateWithoutKeys_aliasesInput[] | order_itemsUncheckedCreateWithoutKeys_aliasesInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutKeys_aliasesInput | order_itemsCreateOrConnectWithoutKeys_aliasesInput[]
    upsert?: order_itemsUpsertWithWhereUniqueWithoutKeys_aliasesInput | order_itemsUpsertWithWhereUniqueWithoutKeys_aliasesInput[]
    createMany?: order_itemsCreateManyKeys_aliasesInputEnvelope
    set?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    disconnect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    delete?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    update?: order_itemsUpdateWithWhereUniqueWithoutKeys_aliasesInput | order_itemsUpdateWithWhereUniqueWithoutKeys_aliasesInput[]
    updateMany?: order_itemsUpdateManyWithWhereWithoutKeys_aliasesInput | order_itemsUpdateManyWithWhereWithoutKeys_aliasesInput[]
    deleteMany?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
  }

  export type product_keysCreateNestedOneWithoutKey_eventsInput = {
    create?: XOR<product_keysCreateWithoutKey_eventsInput, product_keysUncheckedCreateWithoutKey_eventsInput>
    connectOrCreate?: product_keysCreateOrConnectWithoutKey_eventsInput
    connect?: product_keysWhereUniqueInput
  }

  export type EnumKeyEventTypeFieldUpdateOperationsInput = {
    set?: $Enums.KeyEventType
  }

  export type product_keysUpdateOneWithoutKey_eventsNestedInput = {
    create?: XOR<product_keysCreateWithoutKey_eventsInput, product_keysUncheckedCreateWithoutKey_eventsInput>
    connectOrCreate?: product_keysCreateOrConnectWithoutKey_eventsInput
    upsert?: product_keysUpsertWithoutKey_eventsInput
    disconnect?: product_keysWhereInput | boolean
    delete?: product_keysWhereInput | boolean
    connect?: product_keysWhereUniqueInput
    update?: XOR<XOR<product_keysUpdateToOneWithWhereWithoutKey_eventsInput, product_keysUpdateWithoutKey_eventsInput>, product_keysUncheckedUpdateWithoutKey_eventsInput>
  }

  export type keys_aliasesCreateNestedOneWithoutOrder_item_unitsInput = {
    create?: XOR<keys_aliasesCreateWithoutOrder_item_unitsInput, keys_aliasesUncheckedCreateWithoutOrder_item_unitsInput>
    connectOrCreate?: keys_aliasesCreateOrConnectWithoutOrder_item_unitsInput
    connect?: keys_aliasesWhereUniqueInput
  }

  export type order_itemsCreateNestedOneWithoutOrder_item_unitsInput = {
    create?: XOR<order_itemsCreateWithoutOrder_item_unitsInput, order_itemsUncheckedCreateWithoutOrder_item_unitsInput>
    connectOrCreate?: order_itemsCreateOrConnectWithoutOrder_item_unitsInput
    connect?: order_itemsWhereUniqueInput
  }

  export type keys_aliasesUpdateOneWithoutOrder_item_unitsNestedInput = {
    create?: XOR<keys_aliasesCreateWithoutOrder_item_unitsInput, keys_aliasesUncheckedCreateWithoutOrder_item_unitsInput>
    connectOrCreate?: keys_aliasesCreateOrConnectWithoutOrder_item_unitsInput
    upsert?: keys_aliasesUpsertWithoutOrder_item_unitsInput
    disconnect?: keys_aliasesWhereInput | boolean
    delete?: keys_aliasesWhereInput | boolean
    connect?: keys_aliasesWhereUniqueInput
    update?: XOR<XOR<keys_aliasesUpdateToOneWithWhereWithoutOrder_item_unitsInput, keys_aliasesUpdateWithoutOrder_item_unitsInput>, keys_aliasesUncheckedUpdateWithoutOrder_item_unitsInput>
  }

  export type order_itemsUpdateOneRequiredWithoutOrder_item_unitsNestedInput = {
    create?: XOR<order_itemsCreateWithoutOrder_item_unitsInput, order_itemsUncheckedCreateWithoutOrder_item_unitsInput>
    connectOrCreate?: order_itemsCreateOrConnectWithoutOrder_item_unitsInput
    upsert?: order_itemsUpsertWithoutOrder_item_unitsInput
    connect?: order_itemsWhereUniqueInput
    update?: XOR<XOR<order_itemsUpdateToOneWithWhereWithoutOrder_item_unitsInput, order_itemsUpdateWithoutOrder_item_unitsInput>, order_itemsUncheckedUpdateWithoutOrder_item_unitsInput>
  }

  export type order_item_unitsCreateNestedManyWithoutOrder_itemsInput = {
    create?: XOR<order_item_unitsCreateWithoutOrder_itemsInput, order_item_unitsUncheckedCreateWithoutOrder_itemsInput> | order_item_unitsCreateWithoutOrder_itemsInput[] | order_item_unitsUncheckedCreateWithoutOrder_itemsInput[]
    connectOrCreate?: order_item_unitsCreateOrConnectWithoutOrder_itemsInput | order_item_unitsCreateOrConnectWithoutOrder_itemsInput[]
    createMany?: order_item_unitsCreateManyOrder_itemsInputEnvelope
    connect?: order_item_unitsWhereUniqueInput | order_item_unitsWhereUniqueInput[]
  }

  export type keys_aliasesCreateNestedOneWithoutOrder_itemsInput = {
    create?: XOR<keys_aliasesCreateWithoutOrder_itemsInput, keys_aliasesUncheckedCreateWithoutOrder_itemsInput>
    connectOrCreate?: keys_aliasesCreateOrConnectWithoutOrder_itemsInput
    connect?: keys_aliasesWhereUniqueInput
  }

  export type ordersCreateNestedOneWithoutOrder_itemsInput = {
    create?: XOR<ordersCreateWithoutOrder_itemsInput, ordersUncheckedCreateWithoutOrder_itemsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutOrder_itemsInput
    connect?: ordersWhereUniqueInput
  }

  export type productsCreateNestedOneWithoutOrder_itemsInput = {
    create?: XOR<productsCreateWithoutOrder_itemsInput, productsUncheckedCreateWithoutOrder_itemsInput>
    connectOrCreate?: productsCreateOrConnectWithoutOrder_itemsInput
    connect?: productsWhereUniqueInput
  }

  export type subscriptionsCreateNestedOneWithoutOrder_itemsInput = {
    create?: XOR<subscriptionsCreateWithoutOrder_itemsInput, subscriptionsUncheckedCreateWithoutOrder_itemsInput>
    connectOrCreate?: subscriptionsCreateOrConnectWithoutOrder_itemsInput
    connect?: subscriptionsWhereUniqueInput
  }

  export type order_item_unitsUncheckedCreateNestedManyWithoutOrder_itemsInput = {
    create?: XOR<order_item_unitsCreateWithoutOrder_itemsInput, order_item_unitsUncheckedCreateWithoutOrder_itemsInput> | order_item_unitsCreateWithoutOrder_itemsInput[] | order_item_unitsUncheckedCreateWithoutOrder_itemsInput[]
    connectOrCreate?: order_item_unitsCreateOrConnectWithoutOrder_itemsInput | order_item_unitsCreateOrConnectWithoutOrder_itemsInput[]
    createMany?: order_item_unitsCreateManyOrder_itemsInputEnvelope
    connect?: order_item_unitsWhereUniqueInput | order_item_unitsWhereUniqueInput[]
  }

  export type EnumOrderItemTypeFieldUpdateOperationsInput = {
    set?: $Enums.OrderItemType
  }

  export type order_item_unitsUpdateManyWithoutOrder_itemsNestedInput = {
    create?: XOR<order_item_unitsCreateWithoutOrder_itemsInput, order_item_unitsUncheckedCreateWithoutOrder_itemsInput> | order_item_unitsCreateWithoutOrder_itemsInput[] | order_item_unitsUncheckedCreateWithoutOrder_itemsInput[]
    connectOrCreate?: order_item_unitsCreateOrConnectWithoutOrder_itemsInput | order_item_unitsCreateOrConnectWithoutOrder_itemsInput[]
    upsert?: order_item_unitsUpsertWithWhereUniqueWithoutOrder_itemsInput | order_item_unitsUpsertWithWhereUniqueWithoutOrder_itemsInput[]
    createMany?: order_item_unitsCreateManyOrder_itemsInputEnvelope
    set?: order_item_unitsWhereUniqueInput | order_item_unitsWhereUniqueInput[]
    disconnect?: order_item_unitsWhereUniqueInput | order_item_unitsWhereUniqueInput[]
    delete?: order_item_unitsWhereUniqueInput | order_item_unitsWhereUniqueInput[]
    connect?: order_item_unitsWhereUniqueInput | order_item_unitsWhereUniqueInput[]
    update?: order_item_unitsUpdateWithWhereUniqueWithoutOrder_itemsInput | order_item_unitsUpdateWithWhereUniqueWithoutOrder_itemsInput[]
    updateMany?: order_item_unitsUpdateManyWithWhereWithoutOrder_itemsInput | order_item_unitsUpdateManyWithWhereWithoutOrder_itemsInput[]
    deleteMany?: order_item_unitsScalarWhereInput | order_item_unitsScalarWhereInput[]
  }

  export type keys_aliasesUpdateOneWithoutOrder_itemsNestedInput = {
    create?: XOR<keys_aliasesCreateWithoutOrder_itemsInput, keys_aliasesUncheckedCreateWithoutOrder_itemsInput>
    connectOrCreate?: keys_aliasesCreateOrConnectWithoutOrder_itemsInput
    upsert?: keys_aliasesUpsertWithoutOrder_itemsInput
    disconnect?: keys_aliasesWhereInput | boolean
    delete?: keys_aliasesWhereInput | boolean
    connect?: keys_aliasesWhereUniqueInput
    update?: XOR<XOR<keys_aliasesUpdateToOneWithWhereWithoutOrder_itemsInput, keys_aliasesUpdateWithoutOrder_itemsInput>, keys_aliasesUncheckedUpdateWithoutOrder_itemsInput>
  }

  export type ordersUpdateOneRequiredWithoutOrder_itemsNestedInput = {
    create?: XOR<ordersCreateWithoutOrder_itemsInput, ordersUncheckedCreateWithoutOrder_itemsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutOrder_itemsInput
    upsert?: ordersUpsertWithoutOrder_itemsInput
    connect?: ordersWhereUniqueInput
    update?: XOR<XOR<ordersUpdateToOneWithWhereWithoutOrder_itemsInput, ordersUpdateWithoutOrder_itemsInput>, ordersUncheckedUpdateWithoutOrder_itemsInput>
  }

  export type productsUpdateOneWithoutOrder_itemsNestedInput = {
    create?: XOR<productsCreateWithoutOrder_itemsInput, productsUncheckedCreateWithoutOrder_itemsInput>
    connectOrCreate?: productsCreateOrConnectWithoutOrder_itemsInput
    upsert?: productsUpsertWithoutOrder_itemsInput
    disconnect?: productsWhereInput | boolean
    delete?: productsWhereInput | boolean
    connect?: productsWhereUniqueInput
    update?: XOR<XOR<productsUpdateToOneWithWhereWithoutOrder_itemsInput, productsUpdateWithoutOrder_itemsInput>, productsUncheckedUpdateWithoutOrder_itemsInput>
  }

  export type subscriptionsUpdateOneWithoutOrder_itemsNestedInput = {
    create?: XOR<subscriptionsCreateWithoutOrder_itemsInput, subscriptionsUncheckedCreateWithoutOrder_itemsInput>
    connectOrCreate?: subscriptionsCreateOrConnectWithoutOrder_itemsInput
    upsert?: subscriptionsUpsertWithoutOrder_itemsInput
    disconnect?: subscriptionsWhereInput | boolean
    delete?: subscriptionsWhereInput | boolean
    connect?: subscriptionsWhereUniqueInput
    update?: XOR<XOR<subscriptionsUpdateToOneWithWhereWithoutOrder_itemsInput, subscriptionsUpdateWithoutOrder_itemsInput>, subscriptionsUncheckedUpdateWithoutOrder_itemsInput>
  }

  export type order_item_unitsUncheckedUpdateManyWithoutOrder_itemsNestedInput = {
    create?: XOR<order_item_unitsCreateWithoutOrder_itemsInput, order_item_unitsUncheckedCreateWithoutOrder_itemsInput> | order_item_unitsCreateWithoutOrder_itemsInput[] | order_item_unitsUncheckedCreateWithoutOrder_itemsInput[]
    connectOrCreate?: order_item_unitsCreateOrConnectWithoutOrder_itemsInput | order_item_unitsCreateOrConnectWithoutOrder_itemsInput[]
    upsert?: order_item_unitsUpsertWithWhereUniqueWithoutOrder_itemsInput | order_item_unitsUpsertWithWhereUniqueWithoutOrder_itemsInput[]
    createMany?: order_item_unitsCreateManyOrder_itemsInputEnvelope
    set?: order_item_unitsWhereUniqueInput | order_item_unitsWhereUniqueInput[]
    disconnect?: order_item_unitsWhereUniqueInput | order_item_unitsWhereUniqueInput[]
    delete?: order_item_unitsWhereUniqueInput | order_item_unitsWhereUniqueInput[]
    connect?: order_item_unitsWhereUniqueInput | order_item_unitsWhereUniqueInput[]
    update?: order_item_unitsUpdateWithWhereUniqueWithoutOrder_itemsInput | order_item_unitsUpdateWithWhereUniqueWithoutOrder_itemsInput[]
    updateMany?: order_item_unitsUpdateManyWithWhereWithoutOrder_itemsInput | order_item_unitsUpdateManyWithWhereWithoutOrder_itemsInput[]
    deleteMany?: order_item_unitsScalarWhereInput | order_item_unitsScalarWhereInput[]
  }

  export type order_itemsCreateNestedManyWithoutOrdersInput = {
    create?: XOR<order_itemsCreateWithoutOrdersInput, order_itemsUncheckedCreateWithoutOrdersInput> | order_itemsCreateWithoutOrdersInput[] | order_itemsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutOrdersInput | order_itemsCreateOrConnectWithoutOrdersInput[]
    createMany?: order_itemsCreateManyOrdersInputEnvelope
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutOrdersInput = {
    create?: XOR<usersCreateWithoutOrdersInput, usersUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: usersCreateOrConnectWithoutOrdersInput
    connect?: usersWhereUniqueInput
  }

  export type order_itemsUncheckedCreateNestedManyWithoutOrdersInput = {
    create?: XOR<order_itemsCreateWithoutOrdersInput, order_itemsUncheckedCreateWithoutOrdersInput> | order_itemsCreateWithoutOrdersInput[] | order_itemsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutOrdersInput | order_itemsCreateOrConnectWithoutOrdersInput[]
    createMany?: order_itemsCreateManyOrdersInputEnvelope
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
  }

  export type EnumOrderStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderStatus
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type order_itemsUpdateManyWithoutOrdersNestedInput = {
    create?: XOR<order_itemsCreateWithoutOrdersInput, order_itemsUncheckedCreateWithoutOrdersInput> | order_itemsCreateWithoutOrdersInput[] | order_itemsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutOrdersInput | order_itemsCreateOrConnectWithoutOrdersInput[]
    upsert?: order_itemsUpsertWithWhereUniqueWithoutOrdersInput | order_itemsUpsertWithWhereUniqueWithoutOrdersInput[]
    createMany?: order_itemsCreateManyOrdersInputEnvelope
    set?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    disconnect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    delete?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    update?: order_itemsUpdateWithWhereUniqueWithoutOrdersInput | order_itemsUpdateWithWhereUniqueWithoutOrdersInput[]
    updateMany?: order_itemsUpdateManyWithWhereWithoutOrdersInput | order_itemsUpdateManyWithWhereWithoutOrdersInput[]
    deleteMany?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutOrdersNestedInput = {
    create?: XOR<usersCreateWithoutOrdersInput, usersUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: usersCreateOrConnectWithoutOrdersInput
    upsert?: usersUpsertWithoutOrdersInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutOrdersInput, usersUpdateWithoutOrdersInput>, usersUncheckedUpdateWithoutOrdersInput>
  }

  export type order_itemsUncheckedUpdateManyWithoutOrdersNestedInput = {
    create?: XOR<order_itemsCreateWithoutOrdersInput, order_itemsUncheckedCreateWithoutOrdersInput> | order_itemsCreateWithoutOrdersInput[] | order_itemsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_itemsCreateOrConnectWithoutOrdersInput | order_itemsCreateOrConnectWithoutOrdersInput[]
    upsert?: order_itemsUpsertWithWhereUniqueWithoutOrdersInput | order_itemsUpsertWithWhereUniqueWithoutOrdersInput[]
    createMany?: order_itemsCreateManyOrdersInputEnvelope
    set?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    disconnect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    delete?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    connect?: order_itemsWhereUniqueInput | order_itemsWhereUniqueInput[]
    update?: order_itemsUpdateWithWhereUniqueWithoutOrdersInput | order_itemsUpdateWithWhereUniqueWithoutOrdersInput[]
    updateMany?: order_itemsUpdateManyWithWhereWithoutOrdersInput | order_itemsUpdateManyWithWhereWithoutOrdersInput[]
    deleteMany?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumSupportStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SupportStatus | EnumSupportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SupportStatus[] | ListEnumSupportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SupportStatus[] | ListEnumSupportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSupportStatusFilter<$PrismaModel> | $Enums.SupportStatus
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedEnumSupportStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SupportStatus | EnumSupportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SupportStatus[] | ListEnumSupportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SupportStatus[] | ListEnumSupportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSupportStatusWithAggregatesFilter<$PrismaModel> | $Enums.SupportStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSupportStatusFilter<$PrismaModel>
    _max?: NestedEnumSupportStatusFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumStaffRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.StaffRole | EnumStaffRoleFieldRefInput<$PrismaModel>
    in?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumStaffRoleFilter<$PrismaModel> | $Enums.StaffRole
  }

  export type NestedEnumStaffRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StaffRole | EnumStaffRoleFieldRefInput<$PrismaModel>
    in?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumStaffRoleWithAggregatesFilter<$PrismaModel> | $Enums.StaffRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStaffRoleFilter<$PrismaModel>
    _max?: NestedEnumStaffRoleFilter<$PrismaModel>
  }

  export type NestedEnumStaffRoleNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.StaffRole | EnumStaffRoleFieldRefInput<$PrismaModel> | null
    in?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel> | null
    not?: NestedEnumStaffRoleNullableFilter<$PrismaModel> | $Enums.StaffRole | null
  }

  export type NestedEnumStaffRoleNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StaffRole | EnumStaffRoleFieldRefInput<$PrismaModel> | null
    in?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.StaffRole[] | ListEnumStaffRoleFieldRefInput<$PrismaModel> | null
    not?: NestedEnumStaffRoleNullableWithAggregatesFilter<$PrismaModel> | $Enums.StaffRole | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumStaffRoleNullableFilter<$PrismaModel>
    _max?: NestedEnumStaffRoleNullableFilter<$PrismaModel>
  }

  export type NestedEnumKeyEventTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.KeyEventType | EnumKeyEventTypeFieldRefInput<$PrismaModel>
    in?: $Enums.KeyEventType[] | ListEnumKeyEventTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.KeyEventType[] | ListEnumKeyEventTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumKeyEventTypeFilter<$PrismaModel> | $Enums.KeyEventType
  }

  export type NestedEnumKeyEventTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.KeyEventType | EnumKeyEventTypeFieldRefInput<$PrismaModel>
    in?: $Enums.KeyEventType[] | ListEnumKeyEventTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.KeyEventType[] | ListEnumKeyEventTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumKeyEventTypeWithAggregatesFilter<$PrismaModel> | $Enums.KeyEventType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumKeyEventTypeFilter<$PrismaModel>
    _max?: NestedEnumKeyEventTypeFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumOrderItemTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderItemType | EnumOrderItemTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderItemType[] | ListEnumOrderItemTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderItemType[] | ListEnumOrderItemTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderItemTypeFilter<$PrismaModel> | $Enums.OrderItemType
  }

  export type NestedEnumOrderItemTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderItemType | EnumOrderItemTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderItemType[] | ListEnumOrderItemTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderItemType[] | ListEnumOrderItemTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderItemTypeWithAggregatesFilter<$PrismaModel> | $Enums.OrderItemType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderItemTypeFilter<$PrismaModel>
    _max?: NestedEnumOrderItemTypeFilter<$PrismaModel>
  }

  export type NestedEnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type ordersCreateWithoutUsersInput = {
    id?: string
    status?: $Enums.OrderStatus
    provider_order_id?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_number: string
    order_items?: order_itemsCreateNestedManyWithoutOrdersInput
  }

  export type ordersUncheckedCreateWithoutUsersInput = {
    id?: string
    status?: $Enums.OrderStatus
    provider_order_id?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_number: string
    order_items?: order_itemsUncheckedCreateNestedManyWithoutOrdersInput
  }

  export type ordersCreateOrConnectWithoutUsersInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutUsersInput, ordersUncheckedCreateWithoutUsersInput>
  }

  export type ordersCreateManyUsersInputEnvelope = {
    data: ordersCreateManyUsersInput | ordersCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type support_requestsCreateWithoutUserInput = {
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    operator_description?: string | null
    updated_at?: Date | string | null
    status?: $Enums.SupportStatus
    operator?: staff_membersCreateNestedOneWithoutSupport_requestsInput
  }

  export type support_requestsUncheckedCreateWithoutUserInput = {
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    operator_description?: string | null
    operator_id?: string | null
    updated_at?: Date | string | null
    status?: $Enums.SupportStatus
  }

  export type support_requestsCreateOrConnectWithoutUserInput = {
    where: support_requestsWhereUniqueInput
    create: XOR<support_requestsCreateWithoutUserInput, support_requestsUncheckedCreateWithoutUserInput>
  }

  export type support_requestsCreateManyUserInputEnvelope = {
    data: support_requestsCreateManyUserInput | support_requestsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type user_productsCreateWithoutUsersInput = {
    id?: string
    added_at?: Date | string
    code?: string | null
    products: productsCreateNestedOneWithoutUser_productsInput
    product_keys_user_products_product_key_idToproduct_keys?: product_keysCreateNestedOneWithoutUser_products_user_products_product_key_idToproduct_keysInput
  }

  export type user_productsUncheckedCreateWithoutUsersInput = {
    id?: string
    product_id: string
    added_at?: Date | string
    product_key_id?: string | null
    code?: string | null
  }

  export type user_productsCreateOrConnectWithoutUsersInput = {
    where: user_productsWhereUniqueInput
    create: XOR<user_productsCreateWithoutUsersInput, user_productsUncheckedCreateWithoutUsersInput>
  }

  export type user_productsCreateManyUsersInputEnvelope = {
    data: user_productsCreateManyUsersInput | user_productsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type user_subscriptionsCreateWithoutUsersInput = {
    id?: string
    start_date: Date | string
    end_date: Date | string
    active?: boolean
    subscriptions: subscriptionsCreateNestedOneWithoutUser_subscriptionsInput
  }

  export type user_subscriptionsUncheckedCreateWithoutUsersInput = {
    id?: string
    subscription_id: string
    start_date: Date | string
    end_date: Date | string
    active?: boolean
  }

  export type user_subscriptionsCreateOrConnectWithoutUsersInput = {
    where: user_subscriptionsWhereUniqueInput
    create: XOR<user_subscriptionsCreateWithoutUsersInput, user_subscriptionsUncheckedCreateWithoutUsersInput>
  }

  export type user_subscriptionsCreateManyUsersInputEnvelope = {
    data: user_subscriptionsCreateManyUsersInput | user_subscriptionsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type ordersUpsertWithWhereUniqueWithoutUsersInput = {
    where: ordersWhereUniqueInput
    update: XOR<ordersUpdateWithoutUsersInput, ordersUncheckedUpdateWithoutUsersInput>
    create: XOR<ordersCreateWithoutUsersInput, ordersUncheckedCreateWithoutUsersInput>
  }

  export type ordersUpdateWithWhereUniqueWithoutUsersInput = {
    where: ordersWhereUniqueInput
    data: XOR<ordersUpdateWithoutUsersInput, ordersUncheckedUpdateWithoutUsersInput>
  }

  export type ordersUpdateManyWithWhereWithoutUsersInput = {
    where: ordersScalarWhereInput
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyWithoutUsersInput>
  }

  export type ordersScalarWhereInput = {
    AND?: ordersScalarWhereInput | ordersScalarWhereInput[]
    OR?: ordersScalarWhereInput[]
    NOT?: ordersScalarWhereInput | ordersScalarWhereInput[]
    id?: UuidFilter<"orders"> | string
    user_id?: UuidFilter<"orders"> | string
    status?: EnumOrderStatusFilter<"orders"> | $Enums.OrderStatus
    provider_order_id?: StringNullableFilter<"orders"> | string | null
    amount?: DecimalNullableFilter<"orders"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringNullableFilter<"orders"> | string | null
    created_at?: DateTimeNullableFilter<"orders"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"orders"> | Date | string | null
    order_number?: StringFilter<"orders"> | string
  }

  export type support_requestsUpsertWithWhereUniqueWithoutUserInput = {
    where: support_requestsWhereUniqueInput
    update: XOR<support_requestsUpdateWithoutUserInput, support_requestsUncheckedUpdateWithoutUserInput>
    create: XOR<support_requestsCreateWithoutUserInput, support_requestsUncheckedCreateWithoutUserInput>
  }

  export type support_requestsUpdateWithWhereUniqueWithoutUserInput = {
    where: support_requestsWhereUniqueInput
    data: XOR<support_requestsUpdateWithoutUserInput, support_requestsUncheckedUpdateWithoutUserInput>
  }

  export type support_requestsUpdateManyWithWhereWithoutUserInput = {
    where: support_requestsScalarWhereInput
    data: XOR<support_requestsUpdateManyMutationInput, support_requestsUncheckedUpdateManyWithoutUserInput>
  }

  export type support_requestsScalarWhereInput = {
    AND?: support_requestsScalarWhereInput | support_requestsScalarWhereInput[]
    OR?: support_requestsScalarWhereInput[]
    NOT?: support_requestsScalarWhereInput | support_requestsScalarWhereInput[]
    id?: UuidFilter<"support_requests"> | string
    user_id?: UuidFilter<"support_requests"> | string
    title?: StringFilter<"support_requests"> | string
    description?: StringNullableFilter<"support_requests"> | string | null
    created_at?: DateTimeNullableFilter<"support_requests"> | Date | string | null
    operator_description?: StringNullableFilter<"support_requests"> | string | null
    operator_id?: UuidNullableFilter<"support_requests"> | string | null
    updated_at?: DateTimeNullableFilter<"support_requests"> | Date | string | null
    status?: EnumSupportStatusFilter<"support_requests"> | $Enums.SupportStatus
  }

  export type user_productsUpsertWithWhereUniqueWithoutUsersInput = {
    where: user_productsWhereUniqueInput
    update: XOR<user_productsUpdateWithoutUsersInput, user_productsUncheckedUpdateWithoutUsersInput>
    create: XOR<user_productsCreateWithoutUsersInput, user_productsUncheckedCreateWithoutUsersInput>
  }

  export type user_productsUpdateWithWhereUniqueWithoutUsersInput = {
    where: user_productsWhereUniqueInput
    data: XOR<user_productsUpdateWithoutUsersInput, user_productsUncheckedUpdateWithoutUsersInput>
  }

  export type user_productsUpdateManyWithWhereWithoutUsersInput = {
    where: user_productsScalarWhereInput
    data: XOR<user_productsUpdateManyMutationInput, user_productsUncheckedUpdateManyWithoutUsersInput>
  }

  export type user_productsScalarWhereInput = {
    AND?: user_productsScalarWhereInput | user_productsScalarWhereInput[]
    OR?: user_productsScalarWhereInput[]
    NOT?: user_productsScalarWhereInput | user_productsScalarWhereInput[]
    id?: UuidFilter<"user_products"> | string
    user_id?: UuidFilter<"user_products"> | string
    product_id?: UuidFilter<"user_products"> | string
    added_at?: DateTimeFilter<"user_products"> | Date | string
    product_key_id?: UuidNullableFilter<"user_products"> | string | null
    code?: StringNullableFilter<"user_products"> | string | null
  }

  export type user_subscriptionsUpsertWithWhereUniqueWithoutUsersInput = {
    where: user_subscriptionsWhereUniqueInput
    update: XOR<user_subscriptionsUpdateWithoutUsersInput, user_subscriptionsUncheckedUpdateWithoutUsersInput>
    create: XOR<user_subscriptionsCreateWithoutUsersInput, user_subscriptionsUncheckedCreateWithoutUsersInput>
  }

  export type user_subscriptionsUpdateWithWhereUniqueWithoutUsersInput = {
    where: user_subscriptionsWhereUniqueInput
    data: XOR<user_subscriptionsUpdateWithoutUsersInput, user_subscriptionsUncheckedUpdateWithoutUsersInput>
  }

  export type user_subscriptionsUpdateManyWithWhereWithoutUsersInput = {
    where: user_subscriptionsScalarWhereInput
    data: XOR<user_subscriptionsUpdateManyMutationInput, user_subscriptionsUncheckedUpdateManyWithoutUsersInput>
  }

  export type user_subscriptionsScalarWhereInput = {
    AND?: user_subscriptionsScalarWhereInput | user_subscriptionsScalarWhereInput[]
    OR?: user_subscriptionsScalarWhereInput[]
    NOT?: user_subscriptionsScalarWhereInput | user_subscriptionsScalarWhereInput[]
    id?: UuidFilter<"user_subscriptions"> | string
    user_id?: UuidFilter<"user_subscriptions"> | string
    subscription_id?: UuidFilter<"user_subscriptions"> | string
    start_date?: DateTimeFilter<"user_subscriptions"> | Date | string
    end_date?: DateTimeFilter<"user_subscriptions"> | Date | string
    active?: BoolFilter<"user_subscriptions"> | boolean
  }

  export type order_itemsCreateWithoutSubscriptionsInput = {
    id?: string
    qty?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    order_item_units?: order_item_unitsCreateNestedManyWithoutOrder_itemsInput
    keys_aliases?: keys_aliasesCreateNestedOneWithoutOrder_itemsInput
    orders: ordersCreateNestedOneWithoutOrder_itemsInput
    products?: productsCreateNestedOneWithoutOrder_itemsInput
  }

  export type order_itemsUncheckedCreateWithoutSubscriptionsInput = {
    id?: string
    order_id: string
    product_id?: string | null
    qty?: number
    key_alias_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    order_item_units?: order_item_unitsUncheckedCreateNestedManyWithoutOrder_itemsInput
  }

  export type order_itemsCreateOrConnectWithoutSubscriptionsInput = {
    where: order_itemsWhereUniqueInput
    create: XOR<order_itemsCreateWithoutSubscriptionsInput, order_itemsUncheckedCreateWithoutSubscriptionsInput>
  }

  export type order_itemsCreateManySubscriptionsInputEnvelope = {
    data: order_itemsCreateManySubscriptionsInput | order_itemsCreateManySubscriptionsInput[]
    skipDuplicates?: boolean
  }

  export type user_subscriptionsCreateWithoutSubscriptionsInput = {
    id?: string
    start_date: Date | string
    end_date: Date | string
    active?: boolean
    users: usersCreateNestedOneWithoutUser_subscriptionsInput
  }

  export type user_subscriptionsUncheckedCreateWithoutSubscriptionsInput = {
    id?: string
    user_id: string
    start_date: Date | string
    end_date: Date | string
    active?: boolean
  }

  export type user_subscriptionsCreateOrConnectWithoutSubscriptionsInput = {
    where: user_subscriptionsWhereUniqueInput
    create: XOR<user_subscriptionsCreateWithoutSubscriptionsInput, user_subscriptionsUncheckedCreateWithoutSubscriptionsInput>
  }

  export type user_subscriptionsCreateManySubscriptionsInputEnvelope = {
    data: user_subscriptionsCreateManySubscriptionsInput | user_subscriptionsCreateManySubscriptionsInput[]
    skipDuplicates?: boolean
  }

  export type order_itemsUpsertWithWhereUniqueWithoutSubscriptionsInput = {
    where: order_itemsWhereUniqueInput
    update: XOR<order_itemsUpdateWithoutSubscriptionsInput, order_itemsUncheckedUpdateWithoutSubscriptionsInput>
    create: XOR<order_itemsCreateWithoutSubscriptionsInput, order_itemsUncheckedCreateWithoutSubscriptionsInput>
  }

  export type order_itemsUpdateWithWhereUniqueWithoutSubscriptionsInput = {
    where: order_itemsWhereUniqueInput
    data: XOR<order_itemsUpdateWithoutSubscriptionsInput, order_itemsUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type order_itemsUpdateManyWithWhereWithoutSubscriptionsInput = {
    where: order_itemsScalarWhereInput
    data: XOR<order_itemsUpdateManyMutationInput, order_itemsUncheckedUpdateManyWithoutSubscriptionsInput>
  }

  export type order_itemsScalarWhereInput = {
    AND?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
    OR?: order_itemsScalarWhereInput[]
    NOT?: order_itemsScalarWhereInput | order_itemsScalarWhereInput[]
    id?: UuidFilter<"order_items"> | string
    order_id?: UuidFilter<"order_items"> | string
    product_id?: UuidNullableFilter<"order_items"> | string | null
    qty?: IntFilter<"order_items"> | number
    key_alias_id?: UuidNullableFilter<"order_items"> | string | null
    created_at?: DateTimeNullableFilter<"order_items"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"order_items"> | Date | string | null
    item_type?: EnumOrderItemTypeFilter<"order_items"> | $Enums.OrderItemType
    subscription_id?: UuidNullableFilter<"order_items"> | string | null
  }

  export type user_subscriptionsUpsertWithWhereUniqueWithoutSubscriptionsInput = {
    where: user_subscriptionsWhereUniqueInput
    update: XOR<user_subscriptionsUpdateWithoutSubscriptionsInput, user_subscriptionsUncheckedUpdateWithoutSubscriptionsInput>
    create: XOR<user_subscriptionsCreateWithoutSubscriptionsInput, user_subscriptionsUncheckedCreateWithoutSubscriptionsInput>
  }

  export type user_subscriptionsUpdateWithWhereUniqueWithoutSubscriptionsInput = {
    where: user_subscriptionsWhereUniqueInput
    data: XOR<user_subscriptionsUpdateWithoutSubscriptionsInput, user_subscriptionsUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type user_subscriptionsUpdateManyWithWhereWithoutSubscriptionsInput = {
    where: user_subscriptionsScalarWhereInput
    data: XOR<user_subscriptionsUpdateManyMutationInput, user_subscriptionsUncheckedUpdateManyWithoutSubscriptionsInput>
  }

  export type subscriptionsCreateWithoutUser_subscriptionsInput = {
    id?: string
    title: string
    duration_days: number
    price: Decimal | DecimalJsLike | number | string
    description?: string | null
    image?: string | null
    order_items?: order_itemsCreateNestedManyWithoutSubscriptionsInput
  }

  export type subscriptionsUncheckedCreateWithoutUser_subscriptionsInput = {
    id?: string
    title: string
    duration_days: number
    price: Decimal | DecimalJsLike | number | string
    description?: string | null
    image?: string | null
    order_items?: order_itemsUncheckedCreateNestedManyWithoutSubscriptionsInput
  }

  export type subscriptionsCreateOrConnectWithoutUser_subscriptionsInput = {
    where: subscriptionsWhereUniqueInput
    create: XOR<subscriptionsCreateWithoutUser_subscriptionsInput, subscriptionsUncheckedCreateWithoutUser_subscriptionsInput>
  }

  export type usersCreateWithoutUser_subscriptionsInput = {
    id?: string
    username: string
    email: string
    phone?: string | null
    password: string
    created_at?: Date | string | null
    orders?: ordersCreateNestedManyWithoutUsersInput
    support_requests?: support_requestsCreateNestedManyWithoutUserInput
    user_products?: user_productsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_subscriptionsInput = {
    id?: string
    username: string
    email: string
    phone?: string | null
    password: string
    created_at?: Date | string | null
    orders?: ordersUncheckedCreateNestedManyWithoutUsersInput
    support_requests?: support_requestsUncheckedCreateNestedManyWithoutUserInput
    user_products?: user_productsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_subscriptionsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_subscriptionsInput, usersUncheckedCreateWithoutUser_subscriptionsInput>
  }

  export type subscriptionsUpsertWithoutUser_subscriptionsInput = {
    update: XOR<subscriptionsUpdateWithoutUser_subscriptionsInput, subscriptionsUncheckedUpdateWithoutUser_subscriptionsInput>
    create: XOR<subscriptionsCreateWithoutUser_subscriptionsInput, subscriptionsUncheckedCreateWithoutUser_subscriptionsInput>
    where?: subscriptionsWhereInput
  }

  export type subscriptionsUpdateToOneWithWhereWithoutUser_subscriptionsInput = {
    where?: subscriptionsWhereInput
    data: XOR<subscriptionsUpdateWithoutUser_subscriptionsInput, subscriptionsUncheckedUpdateWithoutUser_subscriptionsInput>
  }

  export type subscriptionsUpdateWithoutUser_subscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    duration_days?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    order_items?: order_itemsUpdateManyWithoutSubscriptionsNestedInput
  }

  export type subscriptionsUncheckedUpdateWithoutUser_subscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    duration_days?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    order_items?: order_itemsUncheckedUpdateManyWithoutSubscriptionsNestedInput
  }

  export type usersUpsertWithoutUser_subscriptionsInput = {
    update: XOR<usersUpdateWithoutUser_subscriptionsInput, usersUncheckedUpdateWithoutUser_subscriptionsInput>
    create: XOR<usersCreateWithoutUser_subscriptionsInput, usersUncheckedCreateWithoutUser_subscriptionsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_subscriptionsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_subscriptionsInput, usersUncheckedUpdateWithoutUser_subscriptionsInput>
  }

  export type usersUpdateWithoutUser_subscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orders?: ordersUpdateManyWithoutUsersNestedInput
    support_requests?: support_requestsUpdateManyWithoutUserNestedInput
    user_products?: user_productsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_subscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orders?: ordersUncheckedUpdateManyWithoutUsersNestedInput
    support_requests?: support_requestsUncheckedUpdateManyWithoutUserNestedInput
    user_products?: user_productsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type staff_membersCreateWithoutSupport_requestsInput = {
    id?: string
    username: string
    email: string
    password: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    role: $Enums.StaffRole
    staff_rights?: staff_rightsCreateNestedManyWithoutStaff_membersInput
  }

  export type staff_membersUncheckedCreateWithoutSupport_requestsInput = {
    id?: string
    username: string
    email: string
    password: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    role: $Enums.StaffRole
    staff_rights?: staff_rightsUncheckedCreateNestedManyWithoutStaff_membersInput
  }

  export type staff_membersCreateOrConnectWithoutSupport_requestsInput = {
    where: staff_membersWhereUniqueInput
    create: XOR<staff_membersCreateWithoutSupport_requestsInput, staff_membersUncheckedCreateWithoutSupport_requestsInput>
  }

  export type usersCreateWithoutSupport_requestsInput = {
    id?: string
    username: string
    email: string
    phone?: string | null
    password: string
    created_at?: Date | string | null
    orders?: ordersCreateNestedManyWithoutUsersInput
    user_products?: user_productsCreateNestedManyWithoutUsersInput
    user_subscriptions?: user_subscriptionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutSupport_requestsInput = {
    id?: string
    username: string
    email: string
    phone?: string | null
    password: string
    created_at?: Date | string | null
    orders?: ordersUncheckedCreateNestedManyWithoutUsersInput
    user_products?: user_productsUncheckedCreateNestedManyWithoutUsersInput
    user_subscriptions?: user_subscriptionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutSupport_requestsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutSupport_requestsInput, usersUncheckedCreateWithoutSupport_requestsInput>
  }

  export type staff_membersUpsertWithoutSupport_requestsInput = {
    update: XOR<staff_membersUpdateWithoutSupport_requestsInput, staff_membersUncheckedUpdateWithoutSupport_requestsInput>
    create: XOR<staff_membersCreateWithoutSupport_requestsInput, staff_membersUncheckedCreateWithoutSupport_requestsInput>
    where?: staff_membersWhereInput
  }

  export type staff_membersUpdateToOneWithWhereWithoutSupport_requestsInput = {
    where?: staff_membersWhereInput
    data: XOR<staff_membersUpdateWithoutSupport_requestsInput, staff_membersUncheckedUpdateWithoutSupport_requestsInput>
  }

  export type staff_membersUpdateWithoutSupport_requestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumStaffRoleFieldUpdateOperationsInput | $Enums.StaffRole
    staff_rights?: staff_rightsUpdateManyWithoutStaff_membersNestedInput
  }

  export type staff_membersUncheckedUpdateWithoutSupport_requestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumStaffRoleFieldUpdateOperationsInput | $Enums.StaffRole
    staff_rights?: staff_rightsUncheckedUpdateManyWithoutStaff_membersNestedInput
  }

  export type usersUpsertWithoutSupport_requestsInput = {
    update: XOR<usersUpdateWithoutSupport_requestsInput, usersUncheckedUpdateWithoutSupport_requestsInput>
    create: XOR<usersCreateWithoutSupport_requestsInput, usersUncheckedCreateWithoutSupport_requestsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutSupport_requestsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutSupport_requestsInput, usersUncheckedUpdateWithoutSupport_requestsInput>
  }

  export type usersUpdateWithoutSupport_requestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orders?: ordersUpdateManyWithoutUsersNestedInput
    user_products?: user_productsUpdateManyWithoutUsersNestedInput
    user_subscriptions?: user_subscriptionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutSupport_requestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orders?: ordersUncheckedUpdateManyWithoutUsersNestedInput
    user_products?: user_productsUncheckedUpdateManyWithoutUsersNestedInput
    user_subscriptions?: user_subscriptionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type promo_usageCreateWithoutPromocodesInput = {
    id?: string
    user_id: string
    used_at?: Date | string | null
  }

  export type promo_usageUncheckedCreateWithoutPromocodesInput = {
    id?: string
    user_id: string
    used_at?: Date | string | null
  }

  export type promo_usageCreateOrConnectWithoutPromocodesInput = {
    where: promo_usageWhereUniqueInput
    create: XOR<promo_usageCreateWithoutPromocodesInput, promo_usageUncheckedCreateWithoutPromocodesInput>
  }

  export type promo_usageCreateManyPromocodesInputEnvelope = {
    data: promo_usageCreateManyPromocodesInput | promo_usageCreateManyPromocodesInput[]
    skipDuplicates?: boolean
  }

  export type promo_usageUpsertWithWhereUniqueWithoutPromocodesInput = {
    where: promo_usageWhereUniqueInput
    update: XOR<promo_usageUpdateWithoutPromocodesInput, promo_usageUncheckedUpdateWithoutPromocodesInput>
    create: XOR<promo_usageCreateWithoutPromocodesInput, promo_usageUncheckedCreateWithoutPromocodesInput>
  }

  export type promo_usageUpdateWithWhereUniqueWithoutPromocodesInput = {
    where: promo_usageWhereUniqueInput
    data: XOR<promo_usageUpdateWithoutPromocodesInput, promo_usageUncheckedUpdateWithoutPromocodesInput>
  }

  export type promo_usageUpdateManyWithWhereWithoutPromocodesInput = {
    where: promo_usageScalarWhereInput
    data: XOR<promo_usageUpdateManyMutationInput, promo_usageUncheckedUpdateManyWithoutPromocodesInput>
  }

  export type promo_usageScalarWhereInput = {
    AND?: promo_usageScalarWhereInput | promo_usageScalarWhereInput[]
    OR?: promo_usageScalarWhereInput[]
    NOT?: promo_usageScalarWhereInput | promo_usageScalarWhereInput[]
    id?: UuidFilter<"promo_usage"> | string
    user_id?: UuidFilter<"promo_usage"> | string
    promocode_id?: UuidFilter<"promo_usage"> | string
    used_at?: DateTimeNullableFilter<"promo_usage"> | Date | string | null
  }

  export type promocodesCreateWithoutPromo_usageInput = {
    id?: string
    code: string
    expires_at?: Date | string | null
    denomination: number
    type: string
  }

  export type promocodesUncheckedCreateWithoutPromo_usageInput = {
    id?: string
    code: string
    expires_at?: Date | string | null
    denomination: number
    type: string
  }

  export type promocodesCreateOrConnectWithoutPromo_usageInput = {
    where: promocodesWhereUniqueInput
    create: XOR<promocodesCreateWithoutPromo_usageInput, promocodesUncheckedCreateWithoutPromo_usageInput>
  }

  export type promocodesUpsertWithoutPromo_usageInput = {
    update: XOR<promocodesUpdateWithoutPromo_usageInput, promocodesUncheckedUpdateWithoutPromo_usageInput>
    create: XOR<promocodesCreateWithoutPromo_usageInput, promocodesUncheckedCreateWithoutPromo_usageInput>
    where?: promocodesWhereInput
  }

  export type promocodesUpdateToOneWithWhereWithoutPromo_usageInput = {
    where?: promocodesWhereInput
    data: XOR<promocodesUpdateWithoutPromo_usageInput, promocodesUncheckedUpdateWithoutPromo_usageInput>
  }

  export type promocodesUpdateWithoutPromo_usageInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    denomination?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
  }

  export type promocodesUncheckedUpdateWithoutPromo_usageInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    denomination?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
  }

  export type productsCreateWithoutCategoriesInput = {
    id?: string
    name: string
    price: Decimal | DecimalJsLike | number | string
    denomination?: string | null
    total_amount?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    img?: string | null
    description?: string | null
    life_duration?: number | null
    order_items?: order_itemsCreateNestedManyWithoutProductsInput
    product_keys?: product_keysCreateNestedManyWithoutProductsInput
    user_products?: user_productsCreateNestedManyWithoutProductsInput
  }

  export type productsUncheckedCreateWithoutCategoriesInput = {
    id?: string
    name: string
    price: Decimal | DecimalJsLike | number | string
    denomination?: string | null
    total_amount?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    img?: string | null
    description?: string | null
    life_duration?: number | null
    order_items?: order_itemsUncheckedCreateNestedManyWithoutProductsInput
    product_keys?: product_keysUncheckedCreateNestedManyWithoutProductsInput
    user_products?: user_productsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsCreateOrConnectWithoutCategoriesInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutCategoriesInput, productsUncheckedCreateWithoutCategoriesInput>
  }

  export type productsCreateManyCategoriesInputEnvelope = {
    data: productsCreateManyCategoriesInput | productsCreateManyCategoriesInput[]
    skipDuplicates?: boolean
  }

  export type productsUpsertWithWhereUniqueWithoutCategoriesInput = {
    where: productsWhereUniqueInput
    update: XOR<productsUpdateWithoutCategoriesInput, productsUncheckedUpdateWithoutCategoriesInput>
    create: XOR<productsCreateWithoutCategoriesInput, productsUncheckedCreateWithoutCategoriesInput>
  }

  export type productsUpdateWithWhereUniqueWithoutCategoriesInput = {
    where: productsWhereUniqueInput
    data: XOR<productsUpdateWithoutCategoriesInput, productsUncheckedUpdateWithoutCategoriesInput>
  }

  export type productsUpdateManyWithWhereWithoutCategoriesInput = {
    where: productsScalarWhereInput
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyWithoutCategoriesInput>
  }

  export type productsScalarWhereInput = {
    AND?: productsScalarWhereInput | productsScalarWhereInput[]
    OR?: productsScalarWhereInput[]
    NOT?: productsScalarWhereInput | productsScalarWhereInput[]
    id?: UuidFilter<"products"> | string
    name?: StringFilter<"products"> | string
    price?: DecimalFilter<"products"> | Decimal | DecimalJsLike | number | string
    category_id?: UuidNullableFilter<"products"> | string | null
    denomination?: StringNullableFilter<"products"> | string | null
    total_amount?: IntNullableFilter<"products"> | number | null
    created_at?: DateTimeNullableFilter<"products"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"products"> | Date | string | null
    img?: StringNullableFilter<"products"> | string | null
    description?: StringNullableFilter<"products"> | string | null
    life_duration?: IntNullableFilter<"products"> | number | null
  }

  export type order_itemsCreateWithoutProductsInput = {
    id?: string
    qty?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    order_item_units?: order_item_unitsCreateNestedManyWithoutOrder_itemsInput
    keys_aliases?: keys_aliasesCreateNestedOneWithoutOrder_itemsInput
    orders: ordersCreateNestedOneWithoutOrder_itemsInput
    subscriptions?: subscriptionsCreateNestedOneWithoutOrder_itemsInput
  }

  export type order_itemsUncheckedCreateWithoutProductsInput = {
    id?: string
    order_id: string
    qty?: number
    key_alias_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    subscription_id?: string | null
    order_item_units?: order_item_unitsUncheckedCreateNestedManyWithoutOrder_itemsInput
  }

  export type order_itemsCreateOrConnectWithoutProductsInput = {
    where: order_itemsWhereUniqueInput
    create: XOR<order_itemsCreateWithoutProductsInput, order_itemsUncheckedCreateWithoutProductsInput>
  }

  export type order_itemsCreateManyProductsInputEnvelope = {
    data: order_itemsCreateManyProductsInput | order_itemsCreateManyProductsInput[]
    skipDuplicates?: boolean
  }

  export type product_keysCreateWithoutProductsInput = {
    id?: string
    key_encrypted: string
    used?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reserved_by_order_id?: string | null
    reserved_until?: Date | string | null
    key_events?: key_eventsCreateNestedManyWithoutProduct_keysInput
    keys_aliases?: keys_aliasesCreateNestedManyWithoutProduct_keysInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsCreateNestedOneWithoutProduct_keys_user_products_product_key_idToproduct_keysInput
  }

  export type product_keysUncheckedCreateWithoutProductsInput = {
    id?: string
    key_encrypted: string
    used?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reserved_by_order_id?: string | null
    reserved_until?: Date | string | null
    key_events?: key_eventsUncheckedCreateNestedManyWithoutProduct_keysInput
    keys_aliases?: keys_aliasesUncheckedCreateNestedManyWithoutProduct_keysInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsUncheckedCreateNestedOneWithoutProduct_keys_user_products_product_key_idToproduct_keysInput
  }

  export type product_keysCreateOrConnectWithoutProductsInput = {
    where: product_keysWhereUniqueInput
    create: XOR<product_keysCreateWithoutProductsInput, product_keysUncheckedCreateWithoutProductsInput>
  }

  export type product_keysCreateManyProductsInputEnvelope = {
    data: product_keysCreateManyProductsInput | product_keysCreateManyProductsInput[]
    skipDuplicates?: boolean
  }

  export type categoriesCreateWithoutProductsInput = {
    id?: string
    name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type categoriesUncheckedCreateWithoutProductsInput = {
    id?: string
    name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type categoriesCreateOrConnectWithoutProductsInput = {
    where: categoriesWhereUniqueInput
    create: XOR<categoriesCreateWithoutProductsInput, categoriesUncheckedCreateWithoutProductsInput>
  }

  export type user_productsCreateWithoutProductsInput = {
    id?: string
    added_at?: Date | string
    code?: string | null
    product_keys_user_products_product_key_idToproduct_keys?: product_keysCreateNestedOneWithoutUser_products_user_products_product_key_idToproduct_keysInput
    users: usersCreateNestedOneWithoutUser_productsInput
  }

  export type user_productsUncheckedCreateWithoutProductsInput = {
    id?: string
    user_id: string
    added_at?: Date | string
    product_key_id?: string | null
    code?: string | null
  }

  export type user_productsCreateOrConnectWithoutProductsInput = {
    where: user_productsWhereUniqueInput
    create: XOR<user_productsCreateWithoutProductsInput, user_productsUncheckedCreateWithoutProductsInput>
  }

  export type user_productsCreateManyProductsInputEnvelope = {
    data: user_productsCreateManyProductsInput | user_productsCreateManyProductsInput[]
    skipDuplicates?: boolean
  }

  export type order_itemsUpsertWithWhereUniqueWithoutProductsInput = {
    where: order_itemsWhereUniqueInput
    update: XOR<order_itemsUpdateWithoutProductsInput, order_itemsUncheckedUpdateWithoutProductsInput>
    create: XOR<order_itemsCreateWithoutProductsInput, order_itemsUncheckedCreateWithoutProductsInput>
  }

  export type order_itemsUpdateWithWhereUniqueWithoutProductsInput = {
    where: order_itemsWhereUniqueInput
    data: XOR<order_itemsUpdateWithoutProductsInput, order_itemsUncheckedUpdateWithoutProductsInput>
  }

  export type order_itemsUpdateManyWithWhereWithoutProductsInput = {
    where: order_itemsScalarWhereInput
    data: XOR<order_itemsUpdateManyMutationInput, order_itemsUncheckedUpdateManyWithoutProductsInput>
  }

  export type product_keysUpsertWithWhereUniqueWithoutProductsInput = {
    where: product_keysWhereUniqueInput
    update: XOR<product_keysUpdateWithoutProductsInput, product_keysUncheckedUpdateWithoutProductsInput>
    create: XOR<product_keysCreateWithoutProductsInput, product_keysUncheckedCreateWithoutProductsInput>
  }

  export type product_keysUpdateWithWhereUniqueWithoutProductsInput = {
    where: product_keysWhereUniqueInput
    data: XOR<product_keysUpdateWithoutProductsInput, product_keysUncheckedUpdateWithoutProductsInput>
  }

  export type product_keysUpdateManyWithWhereWithoutProductsInput = {
    where: product_keysScalarWhereInput
    data: XOR<product_keysUpdateManyMutationInput, product_keysUncheckedUpdateManyWithoutProductsInput>
  }

  export type product_keysScalarWhereInput = {
    AND?: product_keysScalarWhereInput | product_keysScalarWhereInput[]
    OR?: product_keysScalarWhereInput[]
    NOT?: product_keysScalarWhereInput | product_keysScalarWhereInput[]
    id?: UuidFilter<"product_keys"> | string
    product_id?: UuidNullableFilter<"product_keys"> | string | null
    key_encrypted?: StringFilter<"product_keys"> | string
    used?: BoolNullableFilter<"product_keys"> | boolean | null
    created_at?: DateTimeNullableFilter<"product_keys"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"product_keys"> | Date | string | null
    reserved_by_order_id?: UuidNullableFilter<"product_keys"> | string | null
    reserved_until?: DateTimeNullableFilter<"product_keys"> | Date | string | null
  }

  export type categoriesUpsertWithoutProductsInput = {
    update: XOR<categoriesUpdateWithoutProductsInput, categoriesUncheckedUpdateWithoutProductsInput>
    create: XOR<categoriesCreateWithoutProductsInput, categoriesUncheckedCreateWithoutProductsInput>
    where?: categoriesWhereInput
  }

  export type categoriesUpdateToOneWithWhereWithoutProductsInput = {
    where?: categoriesWhereInput
    data: XOR<categoriesUpdateWithoutProductsInput, categoriesUncheckedUpdateWithoutProductsInput>
  }

  export type categoriesUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type categoriesUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_productsUpsertWithWhereUniqueWithoutProductsInput = {
    where: user_productsWhereUniqueInput
    update: XOR<user_productsUpdateWithoutProductsInput, user_productsUncheckedUpdateWithoutProductsInput>
    create: XOR<user_productsCreateWithoutProductsInput, user_productsUncheckedCreateWithoutProductsInput>
  }

  export type user_productsUpdateWithWhereUniqueWithoutProductsInput = {
    where: user_productsWhereUniqueInput
    data: XOR<user_productsUpdateWithoutProductsInput, user_productsUncheckedUpdateWithoutProductsInput>
  }

  export type user_productsUpdateManyWithWhereWithoutProductsInput = {
    where: user_productsScalarWhereInput
    data: XOR<user_productsUpdateManyMutationInput, user_productsUncheckedUpdateManyWithoutProductsInput>
  }

  export type key_eventsCreateWithoutProduct_keysInput = {
    id?: string
    alias_id?: string | null
    order_id?: string | null
    order_item_id?: string | null
    event: $Enums.KeyEventType
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type key_eventsUncheckedCreateWithoutProduct_keysInput = {
    id?: string
    alias_id?: string | null
    order_id?: string | null
    order_item_id?: string | null
    event: $Enums.KeyEventType
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type key_eventsCreateOrConnectWithoutProduct_keysInput = {
    where: key_eventsWhereUniqueInput
    create: XOR<key_eventsCreateWithoutProduct_keysInput, key_eventsUncheckedCreateWithoutProduct_keysInput>
  }

  export type key_eventsCreateManyProduct_keysInputEnvelope = {
    data: key_eventsCreateManyProduct_keysInput | key_eventsCreateManyProduct_keysInput[]
    skipDuplicates?: boolean
  }

  export type keys_aliasesCreateWithoutProduct_keysInput = {
    id?: string
    code: string
    purchased?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activated?: boolean | null
    activated_at?: Date | string | null
    active?: boolean | null
    active_days?: number | null
    order_item_units?: order_item_unitsCreateNestedOneWithoutKeys_aliasesInput
    order_items?: order_itemsCreateNestedManyWithoutKeys_aliasesInput
  }

  export type keys_aliasesUncheckedCreateWithoutProduct_keysInput = {
    id?: string
    code: string
    purchased?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activated?: boolean | null
    activated_at?: Date | string | null
    active?: boolean | null
    active_days?: number | null
    order_item_units?: order_item_unitsUncheckedCreateNestedOneWithoutKeys_aliasesInput
    order_items?: order_itemsUncheckedCreateNestedManyWithoutKeys_aliasesInput
  }

  export type keys_aliasesCreateOrConnectWithoutProduct_keysInput = {
    where: keys_aliasesWhereUniqueInput
    create: XOR<keys_aliasesCreateWithoutProduct_keysInput, keys_aliasesUncheckedCreateWithoutProduct_keysInput>
  }

  export type keys_aliasesCreateManyProduct_keysInputEnvelope = {
    data: keys_aliasesCreateManyProduct_keysInput | keys_aliasesCreateManyProduct_keysInput[]
    skipDuplicates?: boolean
  }

  export type productsCreateWithoutProduct_keysInput = {
    id?: string
    name: string
    price: Decimal | DecimalJsLike | number | string
    denomination?: string | null
    total_amount?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    img?: string | null
    description?: string | null
    life_duration?: number | null
    order_items?: order_itemsCreateNestedManyWithoutProductsInput
    categories?: categoriesCreateNestedOneWithoutProductsInput
    user_products?: user_productsCreateNestedManyWithoutProductsInput
  }

  export type productsUncheckedCreateWithoutProduct_keysInput = {
    id?: string
    name: string
    price: Decimal | DecimalJsLike | number | string
    category_id?: string | null
    denomination?: string | null
    total_amount?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    img?: string | null
    description?: string | null
    life_duration?: number | null
    order_items?: order_itemsUncheckedCreateNestedManyWithoutProductsInput
    user_products?: user_productsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsCreateOrConnectWithoutProduct_keysInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutProduct_keysInput, productsUncheckedCreateWithoutProduct_keysInput>
  }

  export type user_productsCreateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput = {
    id?: string
    added_at?: Date | string
    code?: string | null
    products: productsCreateNestedOneWithoutUser_productsInput
    users: usersCreateNestedOneWithoutUser_productsInput
  }

  export type user_productsUncheckedCreateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput = {
    id?: string
    user_id: string
    product_id: string
    added_at?: Date | string
    code?: string | null
  }

  export type user_productsCreateOrConnectWithoutProduct_keys_user_products_product_key_idToproduct_keysInput = {
    where: user_productsWhereUniqueInput
    create: XOR<user_productsCreateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput, user_productsUncheckedCreateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput>
  }

  export type key_eventsUpsertWithWhereUniqueWithoutProduct_keysInput = {
    where: key_eventsWhereUniqueInput
    update: XOR<key_eventsUpdateWithoutProduct_keysInput, key_eventsUncheckedUpdateWithoutProduct_keysInput>
    create: XOR<key_eventsCreateWithoutProduct_keysInput, key_eventsUncheckedCreateWithoutProduct_keysInput>
  }

  export type key_eventsUpdateWithWhereUniqueWithoutProduct_keysInput = {
    where: key_eventsWhereUniqueInput
    data: XOR<key_eventsUpdateWithoutProduct_keysInput, key_eventsUncheckedUpdateWithoutProduct_keysInput>
  }

  export type key_eventsUpdateManyWithWhereWithoutProduct_keysInput = {
    where: key_eventsScalarWhereInput
    data: XOR<key_eventsUpdateManyMutationInput, key_eventsUncheckedUpdateManyWithoutProduct_keysInput>
  }

  export type key_eventsScalarWhereInput = {
    AND?: key_eventsScalarWhereInput | key_eventsScalarWhereInput[]
    OR?: key_eventsScalarWhereInput[]
    NOT?: key_eventsScalarWhereInput | key_eventsScalarWhereInput[]
    id?: UuidFilter<"key_events"> | string
    product_key_id?: UuidNullableFilter<"key_events"> | string | null
    alias_id?: UuidNullableFilter<"key_events"> | string | null
    order_id?: UuidNullableFilter<"key_events"> | string | null
    order_item_id?: UuidNullableFilter<"key_events"> | string | null
    event?: EnumKeyEventTypeFilter<"key_events"> | $Enums.KeyEventType
    details?: JsonNullableFilter<"key_events">
    created_at?: DateTimeFilter<"key_events"> | Date | string
  }

  export type keys_aliasesUpsertWithWhereUniqueWithoutProduct_keysInput = {
    where: keys_aliasesWhereUniqueInput
    update: XOR<keys_aliasesUpdateWithoutProduct_keysInput, keys_aliasesUncheckedUpdateWithoutProduct_keysInput>
    create: XOR<keys_aliasesCreateWithoutProduct_keysInput, keys_aliasesUncheckedCreateWithoutProduct_keysInput>
  }

  export type keys_aliasesUpdateWithWhereUniqueWithoutProduct_keysInput = {
    where: keys_aliasesWhereUniqueInput
    data: XOR<keys_aliasesUpdateWithoutProduct_keysInput, keys_aliasesUncheckedUpdateWithoutProduct_keysInput>
  }

  export type keys_aliasesUpdateManyWithWhereWithoutProduct_keysInput = {
    where: keys_aliasesScalarWhereInput
    data: XOR<keys_aliasesUpdateManyMutationInput, keys_aliasesUncheckedUpdateManyWithoutProduct_keysInput>
  }

  export type keys_aliasesScalarWhereInput = {
    AND?: keys_aliasesScalarWhereInput | keys_aliasesScalarWhereInput[]
    OR?: keys_aliasesScalarWhereInput[]
    NOT?: keys_aliasesScalarWhereInput | keys_aliasesScalarWhereInput[]
    id?: UuidFilter<"keys_aliases"> | string
    product_key_id?: UuidFilter<"keys_aliases"> | string
    code?: StringFilter<"keys_aliases"> | string
    purchased?: BoolNullableFilter<"keys_aliases"> | boolean | null
    created_at?: DateTimeNullableFilter<"keys_aliases"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"keys_aliases"> | Date | string | null
    activated?: BoolNullableFilter<"keys_aliases"> | boolean | null
    activated_at?: DateTimeNullableFilter<"keys_aliases"> | Date | string | null
    active?: BoolNullableFilter<"keys_aliases"> | boolean | null
    active_days?: IntNullableFilter<"keys_aliases"> | number | null
  }

  export type productsUpsertWithoutProduct_keysInput = {
    update: XOR<productsUpdateWithoutProduct_keysInput, productsUncheckedUpdateWithoutProduct_keysInput>
    create: XOR<productsCreateWithoutProduct_keysInput, productsUncheckedCreateWithoutProduct_keysInput>
    where?: productsWhereInput
  }

  export type productsUpdateToOneWithWhereWithoutProduct_keysInput = {
    where?: productsWhereInput
    data: XOR<productsUpdateWithoutProduct_keysInput, productsUncheckedUpdateWithoutProduct_keysInput>
  }

  export type productsUpdateWithoutProduct_keysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    denomination?: NullableStringFieldUpdateOperationsInput | string | null
    total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    img?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    life_duration?: NullableIntFieldUpdateOperationsInput | number | null
    order_items?: order_itemsUpdateManyWithoutProductsNestedInput
    categories?: categoriesUpdateOneWithoutProductsNestedInput
    user_products?: user_productsUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateWithoutProduct_keysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    category_id?: NullableStringFieldUpdateOperationsInput | string | null
    denomination?: NullableStringFieldUpdateOperationsInput | string | null
    total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    img?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    life_duration?: NullableIntFieldUpdateOperationsInput | number | null
    order_items?: order_itemsUncheckedUpdateManyWithoutProductsNestedInput
    user_products?: user_productsUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type user_productsUpsertWithoutProduct_keys_user_products_product_key_idToproduct_keysInput = {
    update: XOR<user_productsUpdateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput, user_productsUncheckedUpdateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput>
    create: XOR<user_productsCreateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput, user_productsUncheckedCreateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput>
    where?: user_productsWhereInput
  }

  export type user_productsUpdateToOneWithWhereWithoutProduct_keys_user_products_product_key_idToproduct_keysInput = {
    where?: user_productsWhereInput
    data: XOR<user_productsUpdateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput, user_productsUncheckedUpdateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput>
  }

  export type user_productsUpdateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput = {
    id?: StringFieldUpdateOperationsInput | string
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    products?: productsUpdateOneRequiredWithoutUser_productsNestedInput
    users?: usersUpdateOneRequiredWithoutUser_productsNestedInput
  }

  export type user_productsUncheckedUpdateWithoutProduct_keys_user_products_product_key_idToproduct_keysInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productsCreateWithoutUser_productsInput = {
    id?: string
    name: string
    price: Decimal | DecimalJsLike | number | string
    denomination?: string | null
    total_amount?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    img?: string | null
    description?: string | null
    life_duration?: number | null
    order_items?: order_itemsCreateNestedManyWithoutProductsInput
    product_keys?: product_keysCreateNestedManyWithoutProductsInput
    categories?: categoriesCreateNestedOneWithoutProductsInput
  }

  export type productsUncheckedCreateWithoutUser_productsInput = {
    id?: string
    name: string
    price: Decimal | DecimalJsLike | number | string
    category_id?: string | null
    denomination?: string | null
    total_amount?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    img?: string | null
    description?: string | null
    life_duration?: number | null
    order_items?: order_itemsUncheckedCreateNestedManyWithoutProductsInput
    product_keys?: product_keysUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsCreateOrConnectWithoutUser_productsInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutUser_productsInput, productsUncheckedCreateWithoutUser_productsInput>
  }

  export type product_keysCreateWithoutUser_products_user_products_product_key_idToproduct_keysInput = {
    id?: string
    key_encrypted: string
    used?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reserved_by_order_id?: string | null
    reserved_until?: Date | string | null
    key_events?: key_eventsCreateNestedManyWithoutProduct_keysInput
    keys_aliases?: keys_aliasesCreateNestedManyWithoutProduct_keysInput
    products?: productsCreateNestedOneWithoutProduct_keysInput
  }

  export type product_keysUncheckedCreateWithoutUser_products_user_products_product_key_idToproduct_keysInput = {
    id?: string
    product_id?: string | null
    key_encrypted: string
    used?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reserved_by_order_id?: string | null
    reserved_until?: Date | string | null
    key_events?: key_eventsUncheckedCreateNestedManyWithoutProduct_keysInput
    keys_aliases?: keys_aliasesUncheckedCreateNestedManyWithoutProduct_keysInput
  }

  export type product_keysCreateOrConnectWithoutUser_products_user_products_product_key_idToproduct_keysInput = {
    where: product_keysWhereUniqueInput
    create: XOR<product_keysCreateWithoutUser_products_user_products_product_key_idToproduct_keysInput, product_keysUncheckedCreateWithoutUser_products_user_products_product_key_idToproduct_keysInput>
  }

  export type usersCreateWithoutUser_productsInput = {
    id?: string
    username: string
    email: string
    phone?: string | null
    password: string
    created_at?: Date | string | null
    orders?: ordersCreateNestedManyWithoutUsersInput
    support_requests?: support_requestsCreateNestedManyWithoutUserInput
    user_subscriptions?: user_subscriptionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_productsInput = {
    id?: string
    username: string
    email: string
    phone?: string | null
    password: string
    created_at?: Date | string | null
    orders?: ordersUncheckedCreateNestedManyWithoutUsersInput
    support_requests?: support_requestsUncheckedCreateNestedManyWithoutUserInput
    user_subscriptions?: user_subscriptionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_productsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_productsInput, usersUncheckedCreateWithoutUser_productsInput>
  }

  export type productsUpsertWithoutUser_productsInput = {
    update: XOR<productsUpdateWithoutUser_productsInput, productsUncheckedUpdateWithoutUser_productsInput>
    create: XOR<productsCreateWithoutUser_productsInput, productsUncheckedCreateWithoutUser_productsInput>
    where?: productsWhereInput
  }

  export type productsUpdateToOneWithWhereWithoutUser_productsInput = {
    where?: productsWhereInput
    data: XOR<productsUpdateWithoutUser_productsInput, productsUncheckedUpdateWithoutUser_productsInput>
  }

  export type productsUpdateWithoutUser_productsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    denomination?: NullableStringFieldUpdateOperationsInput | string | null
    total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    img?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    life_duration?: NullableIntFieldUpdateOperationsInput | number | null
    order_items?: order_itemsUpdateManyWithoutProductsNestedInput
    product_keys?: product_keysUpdateManyWithoutProductsNestedInput
    categories?: categoriesUpdateOneWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateWithoutUser_productsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    category_id?: NullableStringFieldUpdateOperationsInput | string | null
    denomination?: NullableStringFieldUpdateOperationsInput | string | null
    total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    img?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    life_duration?: NullableIntFieldUpdateOperationsInput | number | null
    order_items?: order_itemsUncheckedUpdateManyWithoutProductsNestedInput
    product_keys?: product_keysUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type product_keysUpsertWithoutUser_products_user_products_product_key_idToproduct_keysInput = {
    update: XOR<product_keysUpdateWithoutUser_products_user_products_product_key_idToproduct_keysInput, product_keysUncheckedUpdateWithoutUser_products_user_products_product_key_idToproduct_keysInput>
    create: XOR<product_keysCreateWithoutUser_products_user_products_product_key_idToproduct_keysInput, product_keysUncheckedCreateWithoutUser_products_user_products_product_key_idToproduct_keysInput>
    where?: product_keysWhereInput
  }

  export type product_keysUpdateToOneWithWhereWithoutUser_products_user_products_product_key_idToproduct_keysInput = {
    where?: product_keysWhereInput
    data: XOR<product_keysUpdateWithoutUser_products_user_products_product_key_idToproduct_keysInput, product_keysUncheckedUpdateWithoutUser_products_user_products_product_key_idToproduct_keysInput>
  }

  export type product_keysUpdateWithoutUser_products_user_products_product_key_idToproduct_keysInput = {
    id?: StringFieldUpdateOperationsInput | string
    key_encrypted?: StringFieldUpdateOperationsInput | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reserved_by_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    reserved_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    key_events?: key_eventsUpdateManyWithoutProduct_keysNestedInput
    keys_aliases?: keys_aliasesUpdateManyWithoutProduct_keysNestedInput
    products?: productsUpdateOneWithoutProduct_keysNestedInput
  }

  export type product_keysUncheckedUpdateWithoutUser_products_user_products_product_key_idToproduct_keysInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    key_encrypted?: StringFieldUpdateOperationsInput | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reserved_by_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    reserved_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    key_events?: key_eventsUncheckedUpdateManyWithoutProduct_keysNestedInput
    keys_aliases?: keys_aliasesUncheckedUpdateManyWithoutProduct_keysNestedInput
  }

  export type usersUpsertWithoutUser_productsInput = {
    update: XOR<usersUpdateWithoutUser_productsInput, usersUncheckedUpdateWithoutUser_productsInput>
    create: XOR<usersCreateWithoutUser_productsInput, usersUncheckedCreateWithoutUser_productsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_productsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_productsInput, usersUncheckedUpdateWithoutUser_productsInput>
  }

  export type usersUpdateWithoutUser_productsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orders?: ordersUpdateManyWithoutUsersNestedInput
    support_requests?: support_requestsUpdateManyWithoutUserNestedInput
    user_subscriptions?: user_subscriptionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_productsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orders?: ordersUncheckedUpdateManyWithoutUsersNestedInput
    support_requests?: support_requestsUncheckedUpdateManyWithoutUserNestedInput
    user_subscriptions?: user_subscriptionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type staff_rightsCreateWithoutStaff_membersInput = {
    id?: string
    component_name: string
    can_access?: boolean | null
    role?: $Enums.StaffRole | null
  }

  export type staff_rightsUncheckedCreateWithoutStaff_membersInput = {
    id?: string
    component_name: string
    can_access?: boolean | null
    role?: $Enums.StaffRole | null
  }

  export type staff_rightsCreateOrConnectWithoutStaff_membersInput = {
    where: staff_rightsWhereUniqueInput
    create: XOR<staff_rightsCreateWithoutStaff_membersInput, staff_rightsUncheckedCreateWithoutStaff_membersInput>
  }

  export type staff_rightsCreateManyStaff_membersInputEnvelope = {
    data: staff_rightsCreateManyStaff_membersInput | staff_rightsCreateManyStaff_membersInput[]
    skipDuplicates?: boolean
  }

  export type support_requestsCreateWithoutOperatorInput = {
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    operator_description?: string | null
    updated_at?: Date | string | null
    status?: $Enums.SupportStatus
    user: usersCreateNestedOneWithoutSupport_requestsInput
  }

  export type support_requestsUncheckedCreateWithoutOperatorInput = {
    id?: string
    user_id: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    operator_description?: string | null
    updated_at?: Date | string | null
    status?: $Enums.SupportStatus
  }

  export type support_requestsCreateOrConnectWithoutOperatorInput = {
    where: support_requestsWhereUniqueInput
    create: XOR<support_requestsCreateWithoutOperatorInput, support_requestsUncheckedCreateWithoutOperatorInput>
  }

  export type support_requestsCreateManyOperatorInputEnvelope = {
    data: support_requestsCreateManyOperatorInput | support_requestsCreateManyOperatorInput[]
    skipDuplicates?: boolean
  }

  export type staff_rightsUpsertWithWhereUniqueWithoutStaff_membersInput = {
    where: staff_rightsWhereUniqueInput
    update: XOR<staff_rightsUpdateWithoutStaff_membersInput, staff_rightsUncheckedUpdateWithoutStaff_membersInput>
    create: XOR<staff_rightsCreateWithoutStaff_membersInput, staff_rightsUncheckedCreateWithoutStaff_membersInput>
  }

  export type staff_rightsUpdateWithWhereUniqueWithoutStaff_membersInput = {
    where: staff_rightsWhereUniqueInput
    data: XOR<staff_rightsUpdateWithoutStaff_membersInput, staff_rightsUncheckedUpdateWithoutStaff_membersInput>
  }

  export type staff_rightsUpdateManyWithWhereWithoutStaff_membersInput = {
    where: staff_rightsScalarWhereInput
    data: XOR<staff_rightsUpdateManyMutationInput, staff_rightsUncheckedUpdateManyWithoutStaff_membersInput>
  }

  export type staff_rightsScalarWhereInput = {
    AND?: staff_rightsScalarWhereInput | staff_rightsScalarWhereInput[]
    OR?: staff_rightsScalarWhereInput[]
    NOT?: staff_rightsScalarWhereInput | staff_rightsScalarWhereInput[]
    id?: UuidFilter<"staff_rights"> | string
    component_name?: StringFilter<"staff_rights"> | string
    can_access?: BoolNullableFilter<"staff_rights"> | boolean | null
    staff_member_id?: UuidNullableFilter<"staff_rights"> | string | null
    role?: EnumStaffRoleNullableFilter<"staff_rights"> | $Enums.StaffRole | null
  }

  export type support_requestsUpsertWithWhereUniqueWithoutOperatorInput = {
    where: support_requestsWhereUniqueInput
    update: XOR<support_requestsUpdateWithoutOperatorInput, support_requestsUncheckedUpdateWithoutOperatorInput>
    create: XOR<support_requestsCreateWithoutOperatorInput, support_requestsUncheckedCreateWithoutOperatorInput>
  }

  export type support_requestsUpdateWithWhereUniqueWithoutOperatorInput = {
    where: support_requestsWhereUniqueInput
    data: XOR<support_requestsUpdateWithoutOperatorInput, support_requestsUncheckedUpdateWithoutOperatorInput>
  }

  export type support_requestsUpdateManyWithWhereWithoutOperatorInput = {
    where: support_requestsScalarWhereInput
    data: XOR<support_requestsUpdateManyMutationInput, support_requestsUncheckedUpdateManyWithoutOperatorInput>
  }

  export type staff_membersCreateWithoutStaff_rightsInput = {
    id?: string
    username: string
    email: string
    password: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    role: $Enums.StaffRole
    support_requests?: support_requestsCreateNestedManyWithoutOperatorInput
  }

  export type staff_membersUncheckedCreateWithoutStaff_rightsInput = {
    id?: string
    username: string
    email: string
    password: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    role: $Enums.StaffRole
    support_requests?: support_requestsUncheckedCreateNestedManyWithoutOperatorInput
  }

  export type staff_membersCreateOrConnectWithoutStaff_rightsInput = {
    where: staff_membersWhereUniqueInput
    create: XOR<staff_membersCreateWithoutStaff_rightsInput, staff_membersUncheckedCreateWithoutStaff_rightsInput>
  }

  export type staff_membersUpsertWithoutStaff_rightsInput = {
    update: XOR<staff_membersUpdateWithoutStaff_rightsInput, staff_membersUncheckedUpdateWithoutStaff_rightsInput>
    create: XOR<staff_membersCreateWithoutStaff_rightsInput, staff_membersUncheckedCreateWithoutStaff_rightsInput>
    where?: staff_membersWhereInput
  }

  export type staff_membersUpdateToOneWithWhereWithoutStaff_rightsInput = {
    where?: staff_membersWhereInput
    data: XOR<staff_membersUpdateWithoutStaff_rightsInput, staff_membersUncheckedUpdateWithoutStaff_rightsInput>
  }

  export type staff_membersUpdateWithoutStaff_rightsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumStaffRoleFieldUpdateOperationsInput | $Enums.StaffRole
    support_requests?: support_requestsUpdateManyWithoutOperatorNestedInput
  }

  export type staff_membersUncheckedUpdateWithoutStaff_rightsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumStaffRoleFieldUpdateOperationsInput | $Enums.StaffRole
    support_requests?: support_requestsUncheckedUpdateManyWithoutOperatorNestedInput
  }

  export type product_keysCreateWithoutKeys_aliasesInput = {
    id?: string
    key_encrypted: string
    used?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reserved_by_order_id?: string | null
    reserved_until?: Date | string | null
    key_events?: key_eventsCreateNestedManyWithoutProduct_keysInput
    products?: productsCreateNestedOneWithoutProduct_keysInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsCreateNestedOneWithoutProduct_keys_user_products_product_key_idToproduct_keysInput
  }

  export type product_keysUncheckedCreateWithoutKeys_aliasesInput = {
    id?: string
    product_id?: string | null
    key_encrypted: string
    used?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reserved_by_order_id?: string | null
    reserved_until?: Date | string | null
    key_events?: key_eventsUncheckedCreateNestedManyWithoutProduct_keysInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsUncheckedCreateNestedOneWithoutProduct_keys_user_products_product_key_idToproduct_keysInput
  }

  export type product_keysCreateOrConnectWithoutKeys_aliasesInput = {
    where: product_keysWhereUniqueInput
    create: XOR<product_keysCreateWithoutKeys_aliasesInput, product_keysUncheckedCreateWithoutKeys_aliasesInput>
  }

  export type order_item_unitsCreateWithoutKeys_aliasesInput = {
    id?: string
    order_items: order_itemsCreateNestedOneWithoutOrder_item_unitsInput
  }

  export type order_item_unitsUncheckedCreateWithoutKeys_aliasesInput = {
    id?: string
    order_item_id: string
  }

  export type order_item_unitsCreateOrConnectWithoutKeys_aliasesInput = {
    where: order_item_unitsWhereUniqueInput
    create: XOR<order_item_unitsCreateWithoutKeys_aliasesInput, order_item_unitsUncheckedCreateWithoutKeys_aliasesInput>
  }

  export type order_itemsCreateWithoutKeys_aliasesInput = {
    id?: string
    qty?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    order_item_units?: order_item_unitsCreateNestedManyWithoutOrder_itemsInput
    orders: ordersCreateNestedOneWithoutOrder_itemsInput
    products?: productsCreateNestedOneWithoutOrder_itemsInput
    subscriptions?: subscriptionsCreateNestedOneWithoutOrder_itemsInput
  }

  export type order_itemsUncheckedCreateWithoutKeys_aliasesInput = {
    id?: string
    order_id: string
    product_id?: string | null
    qty?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    subscription_id?: string | null
    order_item_units?: order_item_unitsUncheckedCreateNestedManyWithoutOrder_itemsInput
  }

  export type order_itemsCreateOrConnectWithoutKeys_aliasesInput = {
    where: order_itemsWhereUniqueInput
    create: XOR<order_itemsCreateWithoutKeys_aliasesInput, order_itemsUncheckedCreateWithoutKeys_aliasesInput>
  }

  export type order_itemsCreateManyKeys_aliasesInputEnvelope = {
    data: order_itemsCreateManyKeys_aliasesInput | order_itemsCreateManyKeys_aliasesInput[]
    skipDuplicates?: boolean
  }

  export type product_keysUpsertWithoutKeys_aliasesInput = {
    update: XOR<product_keysUpdateWithoutKeys_aliasesInput, product_keysUncheckedUpdateWithoutKeys_aliasesInput>
    create: XOR<product_keysCreateWithoutKeys_aliasesInput, product_keysUncheckedCreateWithoutKeys_aliasesInput>
    where?: product_keysWhereInput
  }

  export type product_keysUpdateToOneWithWhereWithoutKeys_aliasesInput = {
    where?: product_keysWhereInput
    data: XOR<product_keysUpdateWithoutKeys_aliasesInput, product_keysUncheckedUpdateWithoutKeys_aliasesInput>
  }

  export type product_keysUpdateWithoutKeys_aliasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    key_encrypted?: StringFieldUpdateOperationsInput | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reserved_by_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    reserved_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    key_events?: key_eventsUpdateManyWithoutProduct_keysNestedInput
    products?: productsUpdateOneWithoutProduct_keysNestedInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsUpdateOneWithoutProduct_keys_user_products_product_key_idToproduct_keysNestedInput
  }

  export type product_keysUncheckedUpdateWithoutKeys_aliasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    key_encrypted?: StringFieldUpdateOperationsInput | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reserved_by_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    reserved_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    key_events?: key_eventsUncheckedUpdateManyWithoutProduct_keysNestedInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsUncheckedUpdateOneWithoutProduct_keys_user_products_product_key_idToproduct_keysNestedInput
  }

  export type order_item_unitsUpsertWithoutKeys_aliasesInput = {
    update: XOR<order_item_unitsUpdateWithoutKeys_aliasesInput, order_item_unitsUncheckedUpdateWithoutKeys_aliasesInput>
    create: XOR<order_item_unitsCreateWithoutKeys_aliasesInput, order_item_unitsUncheckedCreateWithoutKeys_aliasesInput>
    where?: order_item_unitsWhereInput
  }

  export type order_item_unitsUpdateToOneWithWhereWithoutKeys_aliasesInput = {
    where?: order_item_unitsWhereInput
    data: XOR<order_item_unitsUpdateWithoutKeys_aliasesInput, order_item_unitsUncheckedUpdateWithoutKeys_aliasesInput>
  }

  export type order_item_unitsUpdateWithoutKeys_aliasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_items?: order_itemsUpdateOneRequiredWithoutOrder_item_unitsNestedInput
  }

  export type order_item_unitsUncheckedUpdateWithoutKeys_aliasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_item_id?: StringFieldUpdateOperationsInput | string
  }

  export type order_itemsUpsertWithWhereUniqueWithoutKeys_aliasesInput = {
    where: order_itemsWhereUniqueInput
    update: XOR<order_itemsUpdateWithoutKeys_aliasesInput, order_itemsUncheckedUpdateWithoutKeys_aliasesInput>
    create: XOR<order_itemsCreateWithoutKeys_aliasesInput, order_itemsUncheckedCreateWithoutKeys_aliasesInput>
  }

  export type order_itemsUpdateWithWhereUniqueWithoutKeys_aliasesInput = {
    where: order_itemsWhereUniqueInput
    data: XOR<order_itemsUpdateWithoutKeys_aliasesInput, order_itemsUncheckedUpdateWithoutKeys_aliasesInput>
  }

  export type order_itemsUpdateManyWithWhereWithoutKeys_aliasesInput = {
    where: order_itemsScalarWhereInput
    data: XOR<order_itemsUpdateManyMutationInput, order_itemsUncheckedUpdateManyWithoutKeys_aliasesInput>
  }

  export type product_keysCreateWithoutKey_eventsInput = {
    id?: string
    key_encrypted: string
    used?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reserved_by_order_id?: string | null
    reserved_until?: Date | string | null
    keys_aliases?: keys_aliasesCreateNestedManyWithoutProduct_keysInput
    products?: productsCreateNestedOneWithoutProduct_keysInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsCreateNestedOneWithoutProduct_keys_user_products_product_key_idToproduct_keysInput
  }

  export type product_keysUncheckedCreateWithoutKey_eventsInput = {
    id?: string
    product_id?: string | null
    key_encrypted: string
    used?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reserved_by_order_id?: string | null
    reserved_until?: Date | string | null
    keys_aliases?: keys_aliasesUncheckedCreateNestedManyWithoutProduct_keysInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsUncheckedCreateNestedOneWithoutProduct_keys_user_products_product_key_idToproduct_keysInput
  }

  export type product_keysCreateOrConnectWithoutKey_eventsInput = {
    where: product_keysWhereUniqueInput
    create: XOR<product_keysCreateWithoutKey_eventsInput, product_keysUncheckedCreateWithoutKey_eventsInput>
  }

  export type product_keysUpsertWithoutKey_eventsInput = {
    update: XOR<product_keysUpdateWithoutKey_eventsInput, product_keysUncheckedUpdateWithoutKey_eventsInput>
    create: XOR<product_keysCreateWithoutKey_eventsInput, product_keysUncheckedCreateWithoutKey_eventsInput>
    where?: product_keysWhereInput
  }

  export type product_keysUpdateToOneWithWhereWithoutKey_eventsInput = {
    where?: product_keysWhereInput
    data: XOR<product_keysUpdateWithoutKey_eventsInput, product_keysUncheckedUpdateWithoutKey_eventsInput>
  }

  export type product_keysUpdateWithoutKey_eventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    key_encrypted?: StringFieldUpdateOperationsInput | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reserved_by_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    reserved_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    keys_aliases?: keys_aliasesUpdateManyWithoutProduct_keysNestedInput
    products?: productsUpdateOneWithoutProduct_keysNestedInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsUpdateOneWithoutProduct_keys_user_products_product_key_idToproduct_keysNestedInput
  }

  export type product_keysUncheckedUpdateWithoutKey_eventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    key_encrypted?: StringFieldUpdateOperationsInput | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reserved_by_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    reserved_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    keys_aliases?: keys_aliasesUncheckedUpdateManyWithoutProduct_keysNestedInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsUncheckedUpdateOneWithoutProduct_keys_user_products_product_key_idToproduct_keysNestedInput
  }

  export type keys_aliasesCreateWithoutOrder_item_unitsInput = {
    id?: string
    code: string
    purchased?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activated?: boolean | null
    activated_at?: Date | string | null
    active?: boolean | null
    active_days?: number | null
    product_keys: product_keysCreateNestedOneWithoutKeys_aliasesInput
    order_items?: order_itemsCreateNestedManyWithoutKeys_aliasesInput
  }

  export type keys_aliasesUncheckedCreateWithoutOrder_item_unitsInput = {
    id?: string
    product_key_id: string
    code: string
    purchased?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activated?: boolean | null
    activated_at?: Date | string | null
    active?: boolean | null
    active_days?: number | null
    order_items?: order_itemsUncheckedCreateNestedManyWithoutKeys_aliasesInput
  }

  export type keys_aliasesCreateOrConnectWithoutOrder_item_unitsInput = {
    where: keys_aliasesWhereUniqueInput
    create: XOR<keys_aliasesCreateWithoutOrder_item_unitsInput, keys_aliasesUncheckedCreateWithoutOrder_item_unitsInput>
  }

  export type order_itemsCreateWithoutOrder_item_unitsInput = {
    id?: string
    qty?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    keys_aliases?: keys_aliasesCreateNestedOneWithoutOrder_itemsInput
    orders: ordersCreateNestedOneWithoutOrder_itemsInput
    products?: productsCreateNestedOneWithoutOrder_itemsInput
    subscriptions?: subscriptionsCreateNestedOneWithoutOrder_itemsInput
  }

  export type order_itemsUncheckedCreateWithoutOrder_item_unitsInput = {
    id?: string
    order_id: string
    product_id?: string | null
    qty?: number
    key_alias_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    subscription_id?: string | null
  }

  export type order_itemsCreateOrConnectWithoutOrder_item_unitsInput = {
    where: order_itemsWhereUniqueInput
    create: XOR<order_itemsCreateWithoutOrder_item_unitsInput, order_itemsUncheckedCreateWithoutOrder_item_unitsInput>
  }

  export type keys_aliasesUpsertWithoutOrder_item_unitsInput = {
    update: XOR<keys_aliasesUpdateWithoutOrder_item_unitsInput, keys_aliasesUncheckedUpdateWithoutOrder_item_unitsInput>
    create: XOR<keys_aliasesCreateWithoutOrder_item_unitsInput, keys_aliasesUncheckedCreateWithoutOrder_item_unitsInput>
    where?: keys_aliasesWhereInput
  }

  export type keys_aliasesUpdateToOneWithWhereWithoutOrder_item_unitsInput = {
    where?: keys_aliasesWhereInput
    data: XOR<keys_aliasesUpdateWithoutOrder_item_unitsInput, keys_aliasesUncheckedUpdateWithoutOrder_item_unitsInput>
  }

  export type keys_aliasesUpdateWithoutOrder_item_unitsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    purchased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    active_days?: NullableIntFieldUpdateOperationsInput | number | null
    product_keys?: product_keysUpdateOneRequiredWithoutKeys_aliasesNestedInput
    order_items?: order_itemsUpdateManyWithoutKeys_aliasesNestedInput
  }

  export type keys_aliasesUncheckedUpdateWithoutOrder_item_unitsInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_key_id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    purchased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    active_days?: NullableIntFieldUpdateOperationsInput | number | null
    order_items?: order_itemsUncheckedUpdateManyWithoutKeys_aliasesNestedInput
  }

  export type order_itemsUpsertWithoutOrder_item_unitsInput = {
    update: XOR<order_itemsUpdateWithoutOrder_item_unitsInput, order_itemsUncheckedUpdateWithoutOrder_item_unitsInput>
    create: XOR<order_itemsCreateWithoutOrder_item_unitsInput, order_itemsUncheckedCreateWithoutOrder_item_unitsInput>
    where?: order_itemsWhereInput
  }

  export type order_itemsUpdateToOneWithWhereWithoutOrder_item_unitsInput = {
    where?: order_itemsWhereInput
    data: XOR<order_itemsUpdateWithoutOrder_item_unitsInput, order_itemsUncheckedUpdateWithoutOrder_item_unitsInput>
  }

  export type order_itemsUpdateWithoutOrder_item_unitsInput = {
    id?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    keys_aliases?: keys_aliasesUpdateOneWithoutOrder_itemsNestedInput
    orders?: ordersUpdateOneRequiredWithoutOrder_itemsNestedInput
    products?: productsUpdateOneWithoutOrder_itemsNestedInput
    subscriptions?: subscriptionsUpdateOneWithoutOrder_itemsNestedInput
  }

  export type order_itemsUncheckedUpdateWithoutOrder_item_unitsInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: IntFieldUpdateOperationsInput | number
    key_alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type order_item_unitsCreateWithoutOrder_itemsInput = {
    id?: string
    keys_aliases?: keys_aliasesCreateNestedOneWithoutOrder_item_unitsInput
  }

  export type order_item_unitsUncheckedCreateWithoutOrder_itemsInput = {
    id?: string
    key_alias_id?: string | null
  }

  export type order_item_unitsCreateOrConnectWithoutOrder_itemsInput = {
    where: order_item_unitsWhereUniqueInput
    create: XOR<order_item_unitsCreateWithoutOrder_itemsInput, order_item_unitsUncheckedCreateWithoutOrder_itemsInput>
  }

  export type order_item_unitsCreateManyOrder_itemsInputEnvelope = {
    data: order_item_unitsCreateManyOrder_itemsInput | order_item_unitsCreateManyOrder_itemsInput[]
    skipDuplicates?: boolean
  }

  export type keys_aliasesCreateWithoutOrder_itemsInput = {
    id?: string
    code: string
    purchased?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activated?: boolean | null
    activated_at?: Date | string | null
    active?: boolean | null
    active_days?: number | null
    product_keys: product_keysCreateNestedOneWithoutKeys_aliasesInput
    order_item_units?: order_item_unitsCreateNestedOneWithoutKeys_aliasesInput
  }

  export type keys_aliasesUncheckedCreateWithoutOrder_itemsInput = {
    id?: string
    product_key_id: string
    code: string
    purchased?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activated?: boolean | null
    activated_at?: Date | string | null
    active?: boolean | null
    active_days?: number | null
    order_item_units?: order_item_unitsUncheckedCreateNestedOneWithoutKeys_aliasesInput
  }

  export type keys_aliasesCreateOrConnectWithoutOrder_itemsInput = {
    where: keys_aliasesWhereUniqueInput
    create: XOR<keys_aliasesCreateWithoutOrder_itemsInput, keys_aliasesUncheckedCreateWithoutOrder_itemsInput>
  }

  export type ordersCreateWithoutOrder_itemsInput = {
    id?: string
    status?: $Enums.OrderStatus
    provider_order_id?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_number: string
    users: usersCreateNestedOneWithoutOrdersInput
  }

  export type ordersUncheckedCreateWithoutOrder_itemsInput = {
    id?: string
    user_id: string
    status?: $Enums.OrderStatus
    provider_order_id?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_number: string
  }

  export type ordersCreateOrConnectWithoutOrder_itemsInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutOrder_itemsInput, ordersUncheckedCreateWithoutOrder_itemsInput>
  }

  export type productsCreateWithoutOrder_itemsInput = {
    id?: string
    name: string
    price: Decimal | DecimalJsLike | number | string
    denomination?: string | null
    total_amount?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    img?: string | null
    description?: string | null
    life_duration?: number | null
    product_keys?: product_keysCreateNestedManyWithoutProductsInput
    categories?: categoriesCreateNestedOneWithoutProductsInput
    user_products?: user_productsCreateNestedManyWithoutProductsInput
  }

  export type productsUncheckedCreateWithoutOrder_itemsInput = {
    id?: string
    name: string
    price: Decimal | DecimalJsLike | number | string
    category_id?: string | null
    denomination?: string | null
    total_amount?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    img?: string | null
    description?: string | null
    life_duration?: number | null
    product_keys?: product_keysUncheckedCreateNestedManyWithoutProductsInput
    user_products?: user_productsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsCreateOrConnectWithoutOrder_itemsInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutOrder_itemsInput, productsUncheckedCreateWithoutOrder_itemsInput>
  }

  export type subscriptionsCreateWithoutOrder_itemsInput = {
    id?: string
    title: string
    duration_days: number
    price: Decimal | DecimalJsLike | number | string
    description?: string | null
    image?: string | null
    user_subscriptions?: user_subscriptionsCreateNestedManyWithoutSubscriptionsInput
  }

  export type subscriptionsUncheckedCreateWithoutOrder_itemsInput = {
    id?: string
    title: string
    duration_days: number
    price: Decimal | DecimalJsLike | number | string
    description?: string | null
    image?: string | null
    user_subscriptions?: user_subscriptionsUncheckedCreateNestedManyWithoutSubscriptionsInput
  }

  export type subscriptionsCreateOrConnectWithoutOrder_itemsInput = {
    where: subscriptionsWhereUniqueInput
    create: XOR<subscriptionsCreateWithoutOrder_itemsInput, subscriptionsUncheckedCreateWithoutOrder_itemsInput>
  }

  export type order_item_unitsUpsertWithWhereUniqueWithoutOrder_itemsInput = {
    where: order_item_unitsWhereUniqueInput
    update: XOR<order_item_unitsUpdateWithoutOrder_itemsInput, order_item_unitsUncheckedUpdateWithoutOrder_itemsInput>
    create: XOR<order_item_unitsCreateWithoutOrder_itemsInput, order_item_unitsUncheckedCreateWithoutOrder_itemsInput>
  }

  export type order_item_unitsUpdateWithWhereUniqueWithoutOrder_itemsInput = {
    where: order_item_unitsWhereUniqueInput
    data: XOR<order_item_unitsUpdateWithoutOrder_itemsInput, order_item_unitsUncheckedUpdateWithoutOrder_itemsInput>
  }

  export type order_item_unitsUpdateManyWithWhereWithoutOrder_itemsInput = {
    where: order_item_unitsScalarWhereInput
    data: XOR<order_item_unitsUpdateManyMutationInput, order_item_unitsUncheckedUpdateManyWithoutOrder_itemsInput>
  }

  export type order_item_unitsScalarWhereInput = {
    AND?: order_item_unitsScalarWhereInput | order_item_unitsScalarWhereInput[]
    OR?: order_item_unitsScalarWhereInput[]
    NOT?: order_item_unitsScalarWhereInput | order_item_unitsScalarWhereInput[]
    id?: UuidFilter<"order_item_units"> | string
    order_item_id?: UuidFilter<"order_item_units"> | string
    key_alias_id?: UuidNullableFilter<"order_item_units"> | string | null
  }

  export type keys_aliasesUpsertWithoutOrder_itemsInput = {
    update: XOR<keys_aliasesUpdateWithoutOrder_itemsInput, keys_aliasesUncheckedUpdateWithoutOrder_itemsInput>
    create: XOR<keys_aliasesCreateWithoutOrder_itemsInput, keys_aliasesUncheckedCreateWithoutOrder_itemsInput>
    where?: keys_aliasesWhereInput
  }

  export type keys_aliasesUpdateToOneWithWhereWithoutOrder_itemsInput = {
    where?: keys_aliasesWhereInput
    data: XOR<keys_aliasesUpdateWithoutOrder_itemsInput, keys_aliasesUncheckedUpdateWithoutOrder_itemsInput>
  }

  export type keys_aliasesUpdateWithoutOrder_itemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    purchased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    active_days?: NullableIntFieldUpdateOperationsInput | number | null
    product_keys?: product_keysUpdateOneRequiredWithoutKeys_aliasesNestedInput
    order_item_units?: order_item_unitsUpdateOneWithoutKeys_aliasesNestedInput
  }

  export type keys_aliasesUncheckedUpdateWithoutOrder_itemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_key_id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    purchased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    active_days?: NullableIntFieldUpdateOperationsInput | number | null
    order_item_units?: order_item_unitsUncheckedUpdateOneWithoutKeys_aliasesNestedInput
  }

  export type ordersUpsertWithoutOrder_itemsInput = {
    update: XOR<ordersUpdateWithoutOrder_itemsInput, ordersUncheckedUpdateWithoutOrder_itemsInput>
    create: XOR<ordersCreateWithoutOrder_itemsInput, ordersUncheckedCreateWithoutOrder_itemsInput>
    where?: ordersWhereInput
  }

  export type ordersUpdateToOneWithWhereWithoutOrder_itemsInput = {
    where?: ordersWhereInput
    data: XOR<ordersUpdateWithoutOrder_itemsInput, ordersUncheckedUpdateWithoutOrder_itemsInput>
  }

  export type ordersUpdateWithoutOrder_itemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    provider_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_number?: StringFieldUpdateOperationsInput | string
    users?: usersUpdateOneRequiredWithoutOrdersNestedInput
  }

  export type ordersUncheckedUpdateWithoutOrder_itemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    provider_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_number?: StringFieldUpdateOperationsInput | string
  }

  export type productsUpsertWithoutOrder_itemsInput = {
    update: XOR<productsUpdateWithoutOrder_itemsInput, productsUncheckedUpdateWithoutOrder_itemsInput>
    create: XOR<productsCreateWithoutOrder_itemsInput, productsUncheckedCreateWithoutOrder_itemsInput>
    where?: productsWhereInput
  }

  export type productsUpdateToOneWithWhereWithoutOrder_itemsInput = {
    where?: productsWhereInput
    data: XOR<productsUpdateWithoutOrder_itemsInput, productsUncheckedUpdateWithoutOrder_itemsInput>
  }

  export type productsUpdateWithoutOrder_itemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    denomination?: NullableStringFieldUpdateOperationsInput | string | null
    total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    img?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    life_duration?: NullableIntFieldUpdateOperationsInput | number | null
    product_keys?: product_keysUpdateManyWithoutProductsNestedInput
    categories?: categoriesUpdateOneWithoutProductsNestedInput
    user_products?: user_productsUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateWithoutOrder_itemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    category_id?: NullableStringFieldUpdateOperationsInput | string | null
    denomination?: NullableStringFieldUpdateOperationsInput | string | null
    total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    img?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    life_duration?: NullableIntFieldUpdateOperationsInput | number | null
    product_keys?: product_keysUncheckedUpdateManyWithoutProductsNestedInput
    user_products?: user_productsUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type subscriptionsUpsertWithoutOrder_itemsInput = {
    update: XOR<subscriptionsUpdateWithoutOrder_itemsInput, subscriptionsUncheckedUpdateWithoutOrder_itemsInput>
    create: XOR<subscriptionsCreateWithoutOrder_itemsInput, subscriptionsUncheckedCreateWithoutOrder_itemsInput>
    where?: subscriptionsWhereInput
  }

  export type subscriptionsUpdateToOneWithWhereWithoutOrder_itemsInput = {
    where?: subscriptionsWhereInput
    data: XOR<subscriptionsUpdateWithoutOrder_itemsInput, subscriptionsUncheckedUpdateWithoutOrder_itemsInput>
  }

  export type subscriptionsUpdateWithoutOrder_itemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    duration_days?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    user_subscriptions?: user_subscriptionsUpdateManyWithoutSubscriptionsNestedInput
  }

  export type subscriptionsUncheckedUpdateWithoutOrder_itemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    duration_days?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    user_subscriptions?: user_subscriptionsUncheckedUpdateManyWithoutSubscriptionsNestedInput
  }

  export type order_itemsCreateWithoutOrdersInput = {
    id?: string
    qty?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    order_item_units?: order_item_unitsCreateNestedManyWithoutOrder_itemsInput
    keys_aliases?: keys_aliasesCreateNestedOneWithoutOrder_itemsInput
    products?: productsCreateNestedOneWithoutOrder_itemsInput
    subscriptions?: subscriptionsCreateNestedOneWithoutOrder_itemsInput
  }

  export type order_itemsUncheckedCreateWithoutOrdersInput = {
    id?: string
    product_id?: string | null
    qty?: number
    key_alias_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    subscription_id?: string | null
    order_item_units?: order_item_unitsUncheckedCreateNestedManyWithoutOrder_itemsInput
  }

  export type order_itemsCreateOrConnectWithoutOrdersInput = {
    where: order_itemsWhereUniqueInput
    create: XOR<order_itemsCreateWithoutOrdersInput, order_itemsUncheckedCreateWithoutOrdersInput>
  }

  export type order_itemsCreateManyOrdersInputEnvelope = {
    data: order_itemsCreateManyOrdersInput | order_itemsCreateManyOrdersInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutOrdersInput = {
    id?: string
    username: string
    email: string
    phone?: string | null
    password: string
    created_at?: Date | string | null
    support_requests?: support_requestsCreateNestedManyWithoutUserInput
    user_products?: user_productsCreateNestedManyWithoutUsersInput
    user_subscriptions?: user_subscriptionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutOrdersInput = {
    id?: string
    username: string
    email: string
    phone?: string | null
    password: string
    created_at?: Date | string | null
    support_requests?: support_requestsUncheckedCreateNestedManyWithoutUserInput
    user_products?: user_productsUncheckedCreateNestedManyWithoutUsersInput
    user_subscriptions?: user_subscriptionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutOrdersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutOrdersInput, usersUncheckedCreateWithoutOrdersInput>
  }

  export type order_itemsUpsertWithWhereUniqueWithoutOrdersInput = {
    where: order_itemsWhereUniqueInput
    update: XOR<order_itemsUpdateWithoutOrdersInput, order_itemsUncheckedUpdateWithoutOrdersInput>
    create: XOR<order_itemsCreateWithoutOrdersInput, order_itemsUncheckedCreateWithoutOrdersInput>
  }

  export type order_itemsUpdateWithWhereUniqueWithoutOrdersInput = {
    where: order_itemsWhereUniqueInput
    data: XOR<order_itemsUpdateWithoutOrdersInput, order_itemsUncheckedUpdateWithoutOrdersInput>
  }

  export type order_itemsUpdateManyWithWhereWithoutOrdersInput = {
    where: order_itemsScalarWhereInput
    data: XOR<order_itemsUpdateManyMutationInput, order_itemsUncheckedUpdateManyWithoutOrdersInput>
  }

  export type usersUpsertWithoutOrdersInput = {
    update: XOR<usersUpdateWithoutOrdersInput, usersUncheckedUpdateWithoutOrdersInput>
    create: XOR<usersCreateWithoutOrdersInput, usersUncheckedCreateWithoutOrdersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutOrdersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutOrdersInput, usersUncheckedUpdateWithoutOrdersInput>
  }

  export type usersUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    support_requests?: support_requestsUpdateManyWithoutUserNestedInput
    user_products?: user_productsUpdateManyWithoutUsersNestedInput
    user_subscriptions?: user_subscriptionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    support_requests?: support_requestsUncheckedUpdateManyWithoutUserNestedInput
    user_products?: user_productsUncheckedUpdateManyWithoutUsersNestedInput
    user_subscriptions?: user_subscriptionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type ordersCreateManyUsersInput = {
    id?: string
    status?: $Enums.OrderStatus
    provider_order_id?: string | null
    amount?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_number: string
  }

  export type support_requestsCreateManyUserInput = {
    id?: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    operator_description?: string | null
    operator_id?: string | null
    updated_at?: Date | string | null
    status?: $Enums.SupportStatus
  }

  export type user_productsCreateManyUsersInput = {
    id?: string
    product_id: string
    added_at?: Date | string
    product_key_id?: string | null
    code?: string | null
  }

  export type user_subscriptionsCreateManyUsersInput = {
    id?: string
    subscription_id: string
    start_date: Date | string
    end_date: Date | string
    active?: boolean
  }

  export type ordersUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    provider_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_number?: StringFieldUpdateOperationsInput | string
    order_items?: order_itemsUpdateManyWithoutOrdersNestedInput
  }

  export type ordersUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    provider_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_number?: StringFieldUpdateOperationsInput | string
    order_items?: order_itemsUncheckedUpdateManyWithoutOrdersNestedInput
  }

  export type ordersUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    provider_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_number?: StringFieldUpdateOperationsInput | string
  }

  export type support_requestsUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    operator_description?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumSupportStatusFieldUpdateOperationsInput | $Enums.SupportStatus
    operator?: staff_membersUpdateOneWithoutSupport_requestsNestedInput
  }

  export type support_requestsUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    operator_description?: NullableStringFieldUpdateOperationsInput | string | null
    operator_id?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumSupportStatusFieldUpdateOperationsInput | $Enums.SupportStatus
  }

  export type support_requestsUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    operator_description?: NullableStringFieldUpdateOperationsInput | string | null
    operator_id?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumSupportStatusFieldUpdateOperationsInput | $Enums.SupportStatus
  }

  export type user_productsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    products?: productsUpdateOneRequiredWithoutUser_productsNestedInput
    product_keys_user_products_product_key_idToproduct_keys?: product_keysUpdateOneWithoutUser_products_user_products_product_key_idToproduct_keysNestedInput
  }

  export type user_productsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_key_id?: NullableStringFieldUpdateOperationsInput | string | null
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_productsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: StringFieldUpdateOperationsInput | string
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_key_id?: NullableStringFieldUpdateOperationsInput | string | null
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_subscriptionsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    subscriptions?: subscriptionsUpdateOneRequiredWithoutUser_subscriptionsNestedInput
  }

  export type user_subscriptionsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscription_id?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type user_subscriptionsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscription_id?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type order_itemsCreateManySubscriptionsInput = {
    id?: string
    order_id: string
    product_id?: string | null
    qty?: number
    key_alias_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
  }

  export type user_subscriptionsCreateManySubscriptionsInput = {
    id?: string
    user_id: string
    start_date: Date | string
    end_date: Date | string
    active?: boolean
  }

  export type order_itemsUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    order_item_units?: order_item_unitsUpdateManyWithoutOrder_itemsNestedInput
    keys_aliases?: keys_aliasesUpdateOneWithoutOrder_itemsNestedInput
    orders?: ordersUpdateOneRequiredWithoutOrder_itemsNestedInput
    products?: productsUpdateOneWithoutOrder_itemsNestedInput
  }

  export type order_itemsUncheckedUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: IntFieldUpdateOperationsInput | number
    key_alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    order_item_units?: order_item_unitsUncheckedUpdateManyWithoutOrder_itemsNestedInput
  }

  export type order_itemsUncheckedUpdateManyWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: IntFieldUpdateOperationsInput | number
    key_alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
  }

  export type user_subscriptionsUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    users?: usersUpdateOneRequiredWithoutUser_subscriptionsNestedInput
  }

  export type user_subscriptionsUncheckedUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type user_subscriptionsUncheckedUpdateManyWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type promo_usageCreateManyPromocodesInput = {
    id?: string
    user_id: string
    used_at?: Date | string | null
  }

  export type promo_usageUpdateWithoutPromocodesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    used_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type promo_usageUncheckedUpdateWithoutPromocodesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    used_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type promo_usageUncheckedUpdateManyWithoutPromocodesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    used_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type productsCreateManyCategoriesInput = {
    id?: string
    name: string
    price: Decimal | DecimalJsLike | number | string
    denomination?: string | null
    total_amount?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    img?: string | null
    description?: string | null
    life_duration?: number | null
  }

  export type productsUpdateWithoutCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    denomination?: NullableStringFieldUpdateOperationsInput | string | null
    total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    img?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    life_duration?: NullableIntFieldUpdateOperationsInput | number | null
    order_items?: order_itemsUpdateManyWithoutProductsNestedInput
    product_keys?: product_keysUpdateManyWithoutProductsNestedInput
    user_products?: user_productsUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateWithoutCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    denomination?: NullableStringFieldUpdateOperationsInput | string | null
    total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    img?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    life_duration?: NullableIntFieldUpdateOperationsInput | number | null
    order_items?: order_itemsUncheckedUpdateManyWithoutProductsNestedInput
    product_keys?: product_keysUncheckedUpdateManyWithoutProductsNestedInput
    user_products?: user_productsUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateManyWithoutCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    denomination?: NullableStringFieldUpdateOperationsInput | string | null
    total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    img?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    life_duration?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type order_itemsCreateManyProductsInput = {
    id?: string
    order_id: string
    qty?: number
    key_alias_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    subscription_id?: string | null
  }

  export type product_keysCreateManyProductsInput = {
    id?: string
    key_encrypted: string
    used?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reserved_by_order_id?: string | null
    reserved_until?: Date | string | null
  }

  export type user_productsCreateManyProductsInput = {
    id?: string
    user_id: string
    added_at?: Date | string
    product_key_id?: string | null
    code?: string | null
  }

  export type order_itemsUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    order_item_units?: order_item_unitsUpdateManyWithoutOrder_itemsNestedInput
    keys_aliases?: keys_aliasesUpdateOneWithoutOrder_itemsNestedInput
    orders?: ordersUpdateOneRequiredWithoutOrder_itemsNestedInput
    subscriptions?: subscriptionsUpdateOneWithoutOrder_itemsNestedInput
  }

  export type order_itemsUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    key_alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_item_units?: order_item_unitsUncheckedUpdateManyWithoutOrder_itemsNestedInput
  }

  export type order_itemsUncheckedUpdateManyWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    key_alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type product_keysUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    key_encrypted?: StringFieldUpdateOperationsInput | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reserved_by_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    reserved_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    key_events?: key_eventsUpdateManyWithoutProduct_keysNestedInput
    keys_aliases?: keys_aliasesUpdateManyWithoutProduct_keysNestedInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsUpdateOneWithoutProduct_keys_user_products_product_key_idToproduct_keysNestedInput
  }

  export type product_keysUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    key_encrypted?: StringFieldUpdateOperationsInput | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reserved_by_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    reserved_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    key_events?: key_eventsUncheckedUpdateManyWithoutProduct_keysNestedInput
    keys_aliases?: keys_aliasesUncheckedUpdateManyWithoutProduct_keysNestedInput
    user_products_user_products_product_key_idToproduct_keys?: user_productsUncheckedUpdateOneWithoutProduct_keys_user_products_product_key_idToproduct_keysNestedInput
  }

  export type product_keysUncheckedUpdateManyWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    key_encrypted?: StringFieldUpdateOperationsInput | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reserved_by_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    reserved_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_productsUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    product_keys_user_products_product_key_idToproduct_keys?: product_keysUpdateOneWithoutUser_products_user_products_product_key_idToproduct_keysNestedInput
    users?: usersUpdateOneRequiredWithoutUser_productsNestedInput
  }

  export type user_productsUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_key_id?: NullableStringFieldUpdateOperationsInput | string | null
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_productsUncheckedUpdateManyWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_key_id?: NullableStringFieldUpdateOperationsInput | string | null
    code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type key_eventsCreateManyProduct_keysInput = {
    id?: string
    alias_id?: string | null
    order_id?: string | null
    order_item_id?: string | null
    event: $Enums.KeyEventType
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type keys_aliasesCreateManyProduct_keysInput = {
    id?: string
    code: string
    purchased?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activated?: boolean | null
    activated_at?: Date | string | null
    active?: boolean | null
    active_days?: number | null
  }

  export type key_eventsUpdateWithoutProduct_keysInput = {
    id?: StringFieldUpdateOperationsInput | string
    alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_item_id?: NullableStringFieldUpdateOperationsInput | string | null
    event?: EnumKeyEventTypeFieldUpdateOperationsInput | $Enums.KeyEventType
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type key_eventsUncheckedUpdateWithoutProduct_keysInput = {
    id?: StringFieldUpdateOperationsInput | string
    alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_item_id?: NullableStringFieldUpdateOperationsInput | string | null
    event?: EnumKeyEventTypeFieldUpdateOperationsInput | $Enums.KeyEventType
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type key_eventsUncheckedUpdateManyWithoutProduct_keysInput = {
    id?: StringFieldUpdateOperationsInput | string
    alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_item_id?: NullableStringFieldUpdateOperationsInput | string | null
    event?: EnumKeyEventTypeFieldUpdateOperationsInput | $Enums.KeyEventType
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type keys_aliasesUpdateWithoutProduct_keysInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    purchased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    active_days?: NullableIntFieldUpdateOperationsInput | number | null
    order_item_units?: order_item_unitsUpdateOneWithoutKeys_aliasesNestedInput
    order_items?: order_itemsUpdateManyWithoutKeys_aliasesNestedInput
  }

  export type keys_aliasesUncheckedUpdateWithoutProduct_keysInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    purchased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    active_days?: NullableIntFieldUpdateOperationsInput | number | null
    order_item_units?: order_item_unitsUncheckedUpdateOneWithoutKeys_aliasesNestedInput
    order_items?: order_itemsUncheckedUpdateManyWithoutKeys_aliasesNestedInput
  }

  export type keys_aliasesUncheckedUpdateManyWithoutProduct_keysInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    purchased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    active_days?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type staff_rightsCreateManyStaff_membersInput = {
    id?: string
    component_name: string
    can_access?: boolean | null
    role?: $Enums.StaffRole | null
  }

  export type support_requestsCreateManyOperatorInput = {
    id?: string
    user_id: string
    title: string
    description?: string | null
    created_at?: Date | string | null
    operator_description?: string | null
    updated_at?: Date | string | null
    status?: $Enums.SupportStatus
  }

  export type staff_rightsUpdateWithoutStaff_membersInput = {
    id?: StringFieldUpdateOperationsInput | string
    component_name?: StringFieldUpdateOperationsInput | string
    can_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role?: NullableEnumStaffRoleFieldUpdateOperationsInput | $Enums.StaffRole | null
  }

  export type staff_rightsUncheckedUpdateWithoutStaff_membersInput = {
    id?: StringFieldUpdateOperationsInput | string
    component_name?: StringFieldUpdateOperationsInput | string
    can_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role?: NullableEnumStaffRoleFieldUpdateOperationsInput | $Enums.StaffRole | null
  }

  export type staff_rightsUncheckedUpdateManyWithoutStaff_membersInput = {
    id?: StringFieldUpdateOperationsInput | string
    component_name?: StringFieldUpdateOperationsInput | string
    can_access?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role?: NullableEnumStaffRoleFieldUpdateOperationsInput | $Enums.StaffRole | null
  }

  export type support_requestsUpdateWithoutOperatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    operator_description?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumSupportStatusFieldUpdateOperationsInput | $Enums.SupportStatus
    user?: usersUpdateOneRequiredWithoutSupport_requestsNestedInput
  }

  export type support_requestsUncheckedUpdateWithoutOperatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    operator_description?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumSupportStatusFieldUpdateOperationsInput | $Enums.SupportStatus
  }

  export type support_requestsUncheckedUpdateManyWithoutOperatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    operator_description?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumSupportStatusFieldUpdateOperationsInput | $Enums.SupportStatus
  }

  export type order_itemsCreateManyKeys_aliasesInput = {
    id?: string
    order_id: string
    product_id?: string | null
    qty?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    subscription_id?: string | null
  }

  export type order_itemsUpdateWithoutKeys_aliasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    order_item_units?: order_item_unitsUpdateManyWithoutOrder_itemsNestedInput
    orders?: ordersUpdateOneRequiredWithoutOrder_itemsNestedInput
    products?: productsUpdateOneWithoutOrder_itemsNestedInput
    subscriptions?: subscriptionsUpdateOneWithoutOrder_itemsNestedInput
  }

  export type order_itemsUncheckedUpdateWithoutKeys_aliasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_item_units?: order_item_unitsUncheckedUpdateManyWithoutOrder_itemsNestedInput
  }

  export type order_itemsUncheckedUpdateManyWithoutKeys_aliasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type order_item_unitsCreateManyOrder_itemsInput = {
    id?: string
    key_alias_id?: string | null
  }

  export type order_item_unitsUpdateWithoutOrder_itemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    keys_aliases?: keys_aliasesUpdateOneWithoutOrder_item_unitsNestedInput
  }

  export type order_item_unitsUncheckedUpdateWithoutOrder_itemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    key_alias_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type order_item_unitsUncheckedUpdateManyWithoutOrder_itemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    key_alias_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type order_itemsCreateManyOrdersInput = {
    id?: string
    product_id?: string | null
    qty?: number
    key_alias_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    item_type?: $Enums.OrderItemType
    subscription_id?: string | null
  }

  export type order_itemsUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    order_item_units?: order_item_unitsUpdateManyWithoutOrder_itemsNestedInput
    keys_aliases?: keys_aliasesUpdateOneWithoutOrder_itemsNestedInput
    products?: productsUpdateOneWithoutOrder_itemsNestedInput
    subscriptions?: subscriptionsUpdateOneWithoutOrder_itemsNestedInput
  }

  export type order_itemsUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: IntFieldUpdateOperationsInput | number
    key_alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
    order_item_units?: order_item_unitsUncheckedUpdateManyWithoutOrder_itemsNestedInput
  }

  export type order_itemsUncheckedUpdateManyWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    qty?: IntFieldUpdateOperationsInput | number
    key_alias_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item_type?: EnumOrderItemTypeFieldUpdateOperationsInput | $Enums.OrderItemType
    subscription_id?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}